---
title: "Topik 3 | Spreadsheet"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(warning = FALSE, message = FALSE) 
```

Sebelum melakukan data import kita perlu mengunduh file datasets pada link berikut : [`AktUPNYK/Project-DA (github.com)`](https://github.com/AktUPNYK/Project-DA) atau klik ikon Github dan unduh file Data yang diperlukan, perhatikan lokasi save file script R dan folder data agar mudah membaca data yang akan di import. Misal kita buat folder `Belajar R` di **Local disk D** kemudian save script R nanti pada folder `Belajar R` dan di Folder `Belajar R` tadi kita buat folder baru dengan nama `data` untuk menyimpan file datasets yang akan kita import atau kita olah secara lokal.

## 1. Import Data Spreadsheet Excel

### 1.1 Library Spreadsheet Excel

Di bagian ini, kita akan mempelajari cara memuat data dari spreadsheet Excel di R dengan package `readxl`. Package ini adalah tidyverse non-core, jadi kita perlu memuatnya secara eksplisit, tetapi diinstal secara otomatis ketika menginstal paket tidyverse. Kemudian, kita juga akan menggunakan package `writexl`, yang memungkinkan kita untuk membuat spreadsheet Excel.

```{r}
library(readxl)
library(tidyverse)
library(writexl)
```

### 1.2 Membaca spreadsheet Excel

Semua fungsi ini memiliki sintaks yang sama seperti fungsi untuk membaca jenis file lain, misalnya, `read_csv()` , `read_table()` dll. kali ini kita akan menggunakan `read_excel()` . kita akan mengimport data Excel `data_mahasiswa_akt` yang telah diunduh tadi misal lokasi file di folder `data` maka dengan menggunakan fungsi :

```{r}
#> membaca file student.xlsx dari lokasi folder data
mahasiswa <- read_excel("data/data_mahasiswa_akt.xlsx")

mahasiswa
```

Nama kolom tidak teratur,ingat bahwa untuk pemrosesan data yang efektif nama variable sangatlah penting sehingga hindari penamaan dengan `spasi ( )` ganti dengan `_` , kemudian kita bisa ubah dengan fungsi `col_names`

```{r}
#> mengubah nama kolom
read_excel(
  "data/data_mahasiswa_akt.xlsx",
  col_names = c("nim_mahasiswa", "nama_mahasiswa", "jurusan", "asal", "umur"),
  skip = 1
)

```

#### 1.2.1 Tipe Data

Dalam file Excel, semua nilai memiliki tipe yang berbeda tidak semuanya adalah string. Data yang mendasari dalam spreadsheet Excel lebih kompleks, seperti :

-   Boolean, seperti TRUE , , FALSE atau NA.

-   Number, seperti "10" atau "10,5".

-   Date, yang juga dapat mencakup waktu seperti "11/1/21" atau "11/1/21 3:00 PM".

-   String teks, seperti "sepuluh".

terlihat pada kolom `age` dengan tipe data yang seharusnya numeric terdapat data string/huruf **(duapuluh)** sehingga kita ubah agar menjadi numeric **(20)**

```{r}
mahasiswa <- read_excel(
  "data/data_mahasiswa_akt.xlsx",
  
#> Ubah nama kolom 
  col_names = c("nim_mahasiswa", "nama_mahasiswa", "jurusan", "asal", "umur"),
  
  skip = 1,
  
  #> Kita sesuaikan nilai N/A menjadi nilai logik (NA)
  na = c("", "N/A"),
  
  #> Fungsi col_types mengubah type data
  col_types = c("numeric", "text", "text", "text", "text"))
  
 

#> Gunakan fungsi mutate untuk mengubah nilai dari "dua puluh" jadi "5", ingat bahwa tipe data umur masih char
mahasiswa <- mahasiswa |>
  mutate(
    umur = if_else(umur == "duapuluh", "20", umur),
    
    #> Karena masih terbaca character untuk tipe data umur, kita kembalikan nilai ke numeric
    umur = parse_number(umur)
  )

mahasiswa

```

Selanjutnya kita akan coba mengubah value data `NIM Mahasiswa`, `Nama Mahasiswa`, `Asal`, dan `Umur` pada baris pertama dengan kombinasi struktur command diatas :

```{r}
mahasiswa <- read_excel(
  "data/data_mahasiswa_akt.xlsx",
  
#> Ubah nama kolom 
  col_names = c("nim_mahasiswa", "nama_mahasiswa", "jurusan", "asal", "umur"),
  
  skip = 1,
  
  #> Kita sesuaikan nilai N/A menjadi nilai logik (NA)
  na = c("", "N/A"),
  
  #> Fungsi col_types mengubah type data
  col_types = c("numeric", "text", "text", "text", "text"))
  
 

#> Gunakan fungsi mutate untuk mengubah nilai dari "dua puluh" jadi "5", ingat bahwa tipe data umur masih char
mahasiswa <- mahasiswa |>
  mutate(
    umur = if_else(umur == "duapuluh", "20", umur),
    
    #> Karena masih terbaca character untuk tipe data umur, kita kembalikan nilai ke numeric
    umur = parse_number(umur)
  )

#> Ubah nilai nim 14222001 perhatikan bahwa tipe data nya adalah numeric maka value tanpa petik "", karena petik hanya untuk char dan string
mahasiswa <- mahasiswa |>
  mutate(
    nim_mahasiswa = if_else(nim_mahasiswa == 11111111, 12345678, nim_mahasiswa))


#> Ubah value nama_mahasiswa
mahasiswa <- mahasiswa |>
  mutate(
    nama_mahasiswa = if_else(nama_mahasiswa == "nama_mahasiswa", "Anindyo Aji S", nama_mahasiswa))
    

#> Ubah value isi_asal
mahasiswa <- mahasiswa |>
  mutate(
    asal = if_else(asal == "yyyyyy", "Klaten", asal))


#> ubah value umur 0
mahasiswa <- mahasiswa |>
  mutate(
    umur = if_else(umur == 0, 21, umur))


#> Tampilkan hasil 
mahasiswa
```

Nah itu tadi merupakan bagian paling sederhana dari proses pengubahan value data yang menjadi dasar untuk rangkaian data preparation pada step selanjutnya.

### 1.3 Membaca worksheet Excel

Kita bisa memilih akan menampilkan sheet yang diperlukan dari worksheet Excel

Pada data Excel **Rekomendasi tempat Makan Enak** terdapat worksheet dan kita hanya akan menampilkan sheet `Resto Steak Jakarta`

![](images/ss%20dataimpor.png){fig-align="center" width="70%"}

```{r}
#> Identifikasi nama sheet excel "Resto Steak jakarta"
tempat_makan_steak_jakarta <- read_excel("data/rekomendasi_tempat_makan_enak.xlsx", sheet = "Resto Steak Jakarta", na = "NA")

#> Tampilkan data sheet Resto Steak Jakarta
tempat_makan_steak_jakarta

```

### 1.4 Write ke Excel

Kita dapat menginput data dan mengubahnya ke Excel menggunakan fungsi `write_xlsx()` , misal kita akan membuat tabel **Penjualan Roti** dengan command `tribble` , ingat bahwa tribble merupakan command untuk membuat tabel data sederhana pada package tidyverse di R. dan selanjutnya kita input value masing-masing variable nya.

```{r}
#> Buat data penjualan roti dan input pada variable produk & jumlah
penjualan_roti <- tibble(
  produk     = factor(c("Donat", "Roti Bakar", "Nastar", "Pisang Coklat")),
  jumlah = c(10, 5, 8, 999)
)

#> Tampilkan tabel
penjualan_roti
```

```{r}
#> Selanjutnya kita create ke file Excel dan simpan di path lokasi folder
write_xlsx(penjualan_roti, path = "data/penjualan_roti.xlsx")
```

```{r}
#> Tampilkan data Excel yang telah dibuat
read_excel("data/penjualan_roti.xlsx")

```
