[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Topik 1 | Data Import",
    "section": "",
    "text": "Sebelum melakukan data import kita perlu mengunduh file datasets pada link berikut atau klik ikon Github dan unduh file data yang diperlukan"
  },
  {
    "objectID": "index.html#data-preprocessing",
    "href": "index.html#data-preprocessing",
    "title": "Topik 4 Eksplorasi Data",
    "section": "4.1 Data Preprocessing",
    "text": "4.1 Data Preprocessing\nSekarang kita akan membahas beberapa metode manipulasi data untuk membersihkan dataset, menggabungkan berbagai dataset atau mengekstrak variabel dari bingkai data sebelum kita melompat ke beberapa dasar pemrograman.\n\n4.1.1 Extracting Data\nBingkai data adalah struktur data yang paling banyak digunakan di R karena menawarkan lebih banyak fleksibilitas dalam cara mereka dapat menangani data.\nMari kita lihat beberapa metode untuk mengekstrak data dari bingkai data. Kita akan menggunakan contoh dataset yang disebut us_stocks.csv\nMari kita impor menggunakan\nread.csv\n\ndata_stocks = read.csv(file =\"data/us_stocks.csv\", header = TRUE)\nhead(data_stocks)\n\n       Date  MSFT    IBM  AAPL   MCD    PG GOOG\n1 2/01/2002 33.52 121.50 11.65 26.49 40.00   NA\n2 3/01/2002 34.62 123.66 11.79 26.79 39.62   NA\n3 4/01/2002 34.45 125.60 11.84 26.99 39.22   NA\n4 7/01/2002 34.28 124.05 11.45 27.20 38.78   NA\n5 8/01/2002 34.69 124.70 11.30 27.36 38.88   NA\n6 9/01/2002 34.36 124.49 10.82 26.88 38.60   NA\n\n\nFungsi names atau colnames digunakan untuk mengakses nama kolom (atau variabel) dalam kumpulan data seperti yang ditunjukkan di bawah ini.\nFungsi row.names dapat digunakan untuk mengakses nama baris (jika ada) dari himpunan data\n\nnames(data_stocks)\n\n[1] \"Date\" \"MSFT\" \"IBM\"  \"AAPL\" \"MCD\"  \"PG\"   \"GOOG\"\n\n\n\ncolnames(data_stocks)\n\n[1] \"Date\" \"MSFT\" \"IBM\"  \"AAPL\" \"MCD\"  \"PG\"   \"GOOG\"\n\n\nVariabel data tertentu dapat diakses menggunakan nama atau indeks (nomor kolom) dalam bingkai data.\nUntuk memilih penggunaan kolom apa pun $ simbol diikuti dengan nama kolom atau namanya dalam tanda kurung siku seperti yang ditunjukkan pada contoh di bawah ini\n\nmsft_prices1 = data_stocks$MSFT  #the data is returned as a vector\nhead(msft_prices1)\n\n[1] 33.52 34.62 34.45 34.28 34.69 34.36\n\n\n\nmsft_prices2 = data_stocks[[\"MSFT\"]]  #the data is returned as a vector\nhead(msft_prices2)\n\n[1] 33.52 34.62 34.45 34.28 34.69 34.36\n\n\n\n# the following returns data as a data frame\nmsft_prices3 = data_stocks[\"MSFT\"]  #can also be used to access multiple columns\nhead(msft_prices3)\n\n   MSFT\n1 33.52\n2 34.62\n3 34.45\n4 34.28\n5 34.69\n6 34.36\n\n\nKolom data ini juga dapat diakses seperti matriks, menggunakan indeks matriks.\nMetode ini dapat mengembalikan baris lengkap, kolom lengkap, atau hanya elemen dari himpunan data.\n\n# MSFT is in the second column and leaving the row index blank returns all the\n# rows for the particular column\n\nmsft_prices4 = data_stocks[, 2]\n\nhead(msft_prices4)\n\n[1] 33.52 34.62 34.45 34.28 34.69 34.36\n\n\n\n# all the elements in row 4\ndata_stocks[4, ]\n\n       Date  MSFT    IBM  AAPL  MCD    PG GOOG\n4 7/01/2002 34.28 124.05 11.45 27.2 38.78   NA\n\n\n\n\n4.1.2 Combining Data Frames\nMungkin diperlukan untuk menggabungkan dua bingkai data selama pemrosesan data.\nIni dapat dilakukan dengan menumpuknya baris demi baris atau menggabungkannya dengan kolom menggunakan rbind dan cbind masing-masing.\nSaat menggunakan cbind Jumlah baris dalam kolom yang digabungkan harus sama panjangnya juga di\nrbind Jumlah kolom himpunan data yang digabungkan harus sama. Mari kita lihat contohnya :\n\n# First create a vector having the returns for msft\nmsft_ret = 100 * diff(log(data_stocks$MSFT))\n# combine the vector with the data\n\n\n# different length\nlength(msft_ret)\n\n[1] 2783\n\n\n\nlength(data_stocks$MSFT)\n\n[1] 2784\n\n\n\n# add one more value to vector msft_ret\nmsft_ret = c(0, msft_ret)\n# check the length\nlength(msft_ret)\n\n[1] 2784\n\n\n\n# lets combine now (it should work)\ndata_stocks_r = cbind(data_stocks, MSFT_RET = msft_ret)\nhead(data_stocks_r)  #shows one more column added to the data\n\n       Date  MSFT    IBM  AAPL   MCD    PG GOOG   MSFT_RET\n1 2/01/2002 33.52 121.50 11.65 26.49 40.00   NA  0.0000000\n2 3/01/2002 34.62 123.66 11.79 26.79 39.62   NA  3.2289274\n3 4/01/2002 34.45 125.60 11.84 26.99 39.22   NA -0.4922552\n4 7/01/2002 34.28 124.05 11.45 27.20 38.78   NA -0.4946904\n5 8/01/2002 34.69 124.70 11.30 27.36 38.88   NA  1.1889367\n6 9/01/2002 34.36 124.49 10.82 26.88 38.60   NA -0.9558364\n\n\n\n# create two dataframes from data_stocks\ndata_r1 = data_stocks[1:10, ]  #first 10 rows\ndata_r2 = data_stocks[2775:2784, ]  #last 10 rows\ndata_stocks_rbind = rbind(data_r1, data_r2)\nprint(data_stocks_rbind)\n\n           Date  MSFT    IBM   AAPL   MCD    PG   GOOG\n1     2/01/2002 33.52 121.50  11.65 26.49 40.00     NA\n2     3/01/2002 34.62 123.66  11.79 26.79 39.62     NA\n3     4/01/2002 34.45 125.60  11.84 26.99 39.22     NA\n4     7/01/2002 34.28 124.05  11.45 27.20 38.78     NA\n5     8/01/2002 34.69 124.70  11.30 27.36 38.88     NA\n6     9/01/2002 34.36 124.49  10.82 26.88 38.60     NA\n7    10/01/2002 34.64 122.14  10.62 26.81 38.46     NA\n8    11/01/2002 34.30 120.31  10.52 26.34 38.60     NA\n9    14/01/2002 34.24 118.05  10.58 26.02 39.35     NA\n10   15/01/2002 34.78 118.85  10.85 26.20 39.82     NA\n2775 17/12/2012 27.10 193.62 518.83 89.91 69.93 720.78\n2776 18/12/2012 27.56 195.69 533.90 90.52 69.97 721.07\n2777 19/12/2012 27.31 195.08 526.31 89.71 69.34 720.11\n2778 20/12/2012 27.68 194.77 521.73 90.04 69.82 722.36\n2779 21/12/2012 27.45 193.42 519.33 90.18 68.72 715.63\n2780 24/12/2012 27.06 192.40 520.17 89.29 68.52 709.50\n2781 26/12/2012 26.86 191.95 513.00 88.74 68.00 708.87\n2782 27/12/2012 26.96 192.71 515.06 88.72 67.97 706.29\n2783 28/12/2012 26.55 189.83 509.59 87.58 67.15 700.01\n2784 31/12/2012 26.71 191.55 532.17 88.21 67.89 707.38\n\n\n\n\n4.1.3 Sub setting and Logical Data Selection\nMisalkan kita ingin mengekstrak data dengan karakteristik tertentu seperti rentang nilai, dll.\nIni dapat dicapai dengan menggunakan pernyataan logis dalam notasi braket.\nContoh berikut mengilustrasikan. Lihat help(“&gt;”) untuk melihat lebih banyak operator perbandingan.\n\n# select all rows with Apple prices above 100\ndata_aaplgr100 = data_stocks[data_stocks$AAPL &gt; 100, ]\nhead(data_aaplgr100)\n\n          Date  MSFT    IBM   AAPL   MCD    PG   GOOG\n1342 2/05/2007 30.61 102.22 100.39 50.02 62.37 465.78\n1343 3/05/2007 30.97 102.80 100.40 49.91 62.00 473.23\n1344 4/05/2007 30.56 102.96 100.81 49.92 62.41 471.12\n1345 7/05/2007 30.71 103.16 103.92 49.50 62.18 467.27\n1346 8/05/2007 30.75 103.29 105.06 49.32 61.75 466.81\n1347 9/05/2007 30.78 104.38 106.88 49.84 62.01 469.25\n\n\n\nmin(data_aaplgr100$AAPL)  #check if the prices are above 100\n\n[1] NA\n\n\n\n# this give NA as the minimum which indicates that data frame has NA lets\n# remove NAs from data_aaplgr100 using na.omit function\ndata_aaplgr100 = na.omit(data_aaplgr100)\n# now check the minimum again\nmin(data_aaplgr100$AAPL)\n\n[1] 100.06\n\n\nFungsi yang digunakan dalam contoh di atas dapat digunakan untuk menghapus semua nilai kosong dalam himpunan data.\n\nhead(data_stocks)  #notice NAs in GOOG\n\n       Date  MSFT    IBM  AAPL   MCD    PG GOOG\n1 2/01/2002 33.52 121.50 11.65 26.49 40.00   NA\n2 3/01/2002 34.62 123.66 11.79 26.79 39.62   NA\n3 4/01/2002 34.45 125.60 11.84 26.99 39.22   NA\n4 7/01/2002 34.28 124.05 11.45 27.20 38.78   NA\n5 8/01/2002 34.69 124.70 11.30 27.36 38.88   NA\n6 9/01/2002 34.36 124.49 10.82 26.88 38.60   NA\n\n\n\ndata_stocks_googlena = data_stocks[!is.na(data_stocks$GOOG), ]\nhead(data_stocks_googlena)  #after removing NAs\n\n          Date  MSFT   IBM  AAPL   MCD    PG   GOOG\n663 19/08/2004 27.12 84.89 15.36 26.60 54.48 100.34\n664 20/08/2004 27.20 85.25 15.40 27.07 54.85 108.31\n665 23/08/2004 27.24 84.65 15.54 26.64 54.75 109.40\n666 24/08/2004 27.24 84.71 15.98 26.87 54.95 104.87\n667 25/08/2004 27.55 85.07 16.52 26.95 55.30 106.00\n668 26/08/2004 27.44 84.69 17.33 27.10 55.70 107.91\n\n\n\n# the above can still leave NAs in other columns use na.omit to remove all the\n# blank data\ndata_stocks_naomit = na.omit(data_stocks)\n\nMungkin ada persyaratan dalam pra pemrosesan data di mana seseorang mungkin harus memilih data dalam suatu rentang.\nContoh berikut memilih data di mana harga MSFT berada di antara 20 dan 30.\n& adalah operator Logika di R, lihat help(“&”) untuk melihat detail selengkapnya dan operator Logika lainnya.\n\ndata_msft = data_stocks_naomit[data_stocks_naomit$MSFT &lt;= 30 & data_stocks_naomit$MSFT &gt;\n    20, ]\nmin(data_msft$MSFT)  #check \n\n[1] 20.06\n\n\n\nargs(subset.data.frame)\n\nfunction (x, subset, select, drop = FALSE, ...) \nNULL\n\n\n\naaplgr100 = subset(data_stocks_naomit, AAPL &gt; 100)\nhead(aaplgr100)\n\n          Date  MSFT    IBM   AAPL   MCD    PG   GOOG\n1342 2/05/2007 30.61 102.22 100.39 50.02 62.37 465.78\n1343 3/05/2007 30.97 102.80 100.40 49.91 62.00 473.23\n1344 4/05/2007 30.56 102.96 100.81 49.92 62.41 471.12\n1345 7/05/2007 30.71 103.16 103.92 49.50 62.18 467.27\n1346 8/05/2007 30.75 103.29 105.06 49.32 61.75 466.81\n1347 9/05/2007 30.78 104.38 106.88 49.84 62.01 469.25\n\n\n\nmin(aaplgr100$AAPL)\n\n[1] 100.06"
  },
  {
    "objectID": "index.html#data-transformation-from-wide-to-long-or-vice-versa",
    "href": "index.html#data-transformation-from-wide-to-long-or-vice-versa",
    "title": "Topik 1 Pengenalan",
    "section": "4.2 Data Transformation from Wide to Long (or vice versa)",
    "text": "4.2 Data Transformation from Wide to Long (or vice versa)\nTerkadang diperlukan untuk mengubah data format lebar menjadi panjang, yang sering diperlukan untuk bekerja dengan paket ggplot2 (dibahas di bagian grafik) Paket R tidyr menyediakan dua fungsi pivot_longer() dan pivot_wider() untuk mengubah data menjadi format panjang atau lebar. Mari kita konversi data saham ke format panjang\n\nlibrary(tidyr)\n\nFinData_long = pivot_longer(data = data_stocks, cols = -Date, names_to = \"Stock\",\n    values_to = \"Price\")\nhead(FinData_long)\n\n# A tibble: 6 × 3\n  Date      Stock Price\n  &lt;chr&gt;     &lt;chr&gt; &lt;dbl&gt;\n1 2/01/2002 MSFT   33.5\n2 2/01/2002 IBM   122. \n3 2/01/2002 AAPL   11.6\n4 2/01/2002 MCD    26.5\n5 2/01/2002 PG     40  \n6 2/01/2002 GOOG   NA  \n\n\n\nFinData_wide = pivot_wider(FinData_long, names_from = Stock, values_from = Price)\nhead(FinData_wide)\n\n# A tibble: 6 × 7\n  Date       MSFT   IBM  AAPL   MCD    PG  GOOG\n  &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 2/01/2002  33.5  122.  11.6  26.5  40      NA\n2 3/01/2002  34.6  124.  11.8  26.8  39.6    NA\n3 4/01/2002  34.4  126.  11.8  27.0  39.2    NA\n4 7/01/2002  34.3  124.  11.4  27.2  38.8    NA\n5 8/01/2002  34.7  125.  11.3  27.4  38.9    NA\n6 9/01/2002  34.4  124.  10.8  26.9  38.6    NA"
  },
  {
    "objectID": "index.html#summary-statistics",
    "href": "index.html#summary-statistics",
    "title": "Topik 1 Pengenalan",
    "section": "4.3 Summary Statistics",
    "text": "4.3 Summary Statistics\nstatistik deskriptif ini memberi kita ringkasan yang dapat dikelola dan bermakna dari fenomena yang mendasarinya. Itulah isi bab ini. Kabar buruknya adalah bahwa penyederhanaan apa pun mengundang penyalahgunaan.\nSangat mudah untuk menghitung statistik ringkasan dasar dalam R, sebagian besar fungsi diberi nama sesuai dengan apa yang mereka lakukan.\nContoh berikut menunjukkan cara menghitung ukuran statistik dalam tabel-1 untuk harga Dow Jones dalam file data data_fin.csv\n\n# change the working directory to the folder containing data_fin.csv or provide\n# the full path with the filename\ndata_stocks = read.csv(\"data/data_fin.csv\")  #import data\nhead(data_stocks)\n\n        Date     DJI   AXP   MMM   ATT    BA   CAT CISCO    DD   XOM    GE\n1  3/01/2000 11357.5 45.82 47.19 47.19 40.12 24.31 54.05 65.00 39.09 49.95\n2  4/01/2000 10997.9 44.09 45.31 44.25 40.12 24.00 51.00 65.00 38.41 48.06\n3  5/01/2000 11122.7 42.96 46.62 44.94 42.62 24.56 51.19 67.75 40.50 47.70\n4  6/01/2000 11253.3 43.78 50.62 43.75 43.06 25.81 50.00 71.50 42.59 48.51\n5  7/01/2000 11522.6 44.42 51.47 44.12 44.12 26.66 52.94 71.62 42.31 50.28\n6 10/01/2000 11572.2 45.04 51.12 44.75 43.69 25.78 54.91 70.00 41.88 50.37\n     GS    HD    IBM  INTC   JNJ   JPM   MRK   MCD  MSFT   NKE\n1 88.31 65.50 115.56 43.47 46.09 48.69 64.04 39.62 58.34 12.03\n2 82.38 61.50 112.06 41.47 44.41 47.27 61.61 38.81 56.31 11.38\n3 78.88 61.44 116.00 41.81 44.88 46.98 64.22 39.44 56.91 12.03\n4 82.25 60.00 114.62 39.38 46.28 47.65 64.75 38.88 55.00 11.97\n5 82.56 62.81 113.31 41.00 47.88 48.52 70.97 39.75 55.72 11.97\n6 84.38 63.19 118.44 42.88 47.03 47.69 68.89 40.06 56.12 12.17\n\n\n\nDJI = data_stocks$DJI\nDJI = na.omit(DJI)  #remove NAs as it will affect the calculations\n# Arithmetic mean\nmean(DJI)\n\n[1] 11098.12\n\n\n\n# Geometric mean\nexp(mean(log(DJI)))\n\n[1] 10953.39\n\n\n\n# median\nmedian(DJI)\n\n[1] 10748.8\n\n# variance & standard deviation\nvar(DJI)\n\n[1] 3280347\n\nsd(DJI)\n\n[1] 1811.173\n\n# interquantile range and few quantiles\nIQR(DJI)\n\n[1] 2276.25\n\nquantile(DJI)\n\n      0%      25%      50%      75%     100% \n 6547.10 10063.25 10748.80 12339.50 16576.66 \n\n# skewness and kurtosis skewness and kurtosis functions are not available in R\n# core library but in library e1071 (there are other packages which have\n# functions for skewness and kurtosis try ??kurtosis or search for the function\n# on RSearch.\nlibrary(e1071)\nskewness(DJI)\n\n[1] 0.4777828\n\nkurtosis(DJI)\n\n[1] 0.08404185\n\n\nFungsi summary di R memberikan beberapa ringkasan dasar yaitu, nilai minimum, nilai maksimum, nilai median dan kuartil untuk satu variabel atau dataset. Fungsi summary dapat digunakan sebagai berikut :\n\n# summary of one column/variable in a dataframe\nsummary(DJI)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   6547   10063   10749   11098   12340   16577 \n\n# summary of whole dataset excluding the time column\nsummary(data_stocks[, c(2:21)])\n\n      DJI             AXP             MMM              ATT       \n Min.   : 6547   Min.   :10.26   Min.   : 39.50   Min.   :19.34  \n 1st Qu.:10063   1st Qu.:38.31   1st Qu.: 62.55   1st Qu.:25.54  \n Median :10749   Median :47.49   Median : 77.67   Median :29.65  \n Mean   :11098   Mean   :46.77   Mean   : 75.78   Mean   :31.77  \n 3rd Qu.:12340   3rd Qu.:54.44   3rd Qu.: 85.55   3rd Qu.:37.22  \n Max.   :16577   Max.   :90.73   Max.   :140.25   Max.   :58.50  \n NA's   :27      NA's   :12      NA's   :12       NA's   :12     \n       BA              CAT             CISCO             DD       \n Min.   : 25.06   Min.   : 14.91   Min.   : 8.60   Min.   :16.14  \n 1st Qu.: 44.00   1st Qu.: 28.64   1st Qu.:17.68   1st Qu.:41.13  \n Median : 63.56   Median : 57.10   Median :20.43   Median :44.53  \n Mean   : 62.95   Mean   : 56.01   Mean   :23.41   Mean   :44.37  \n 3rd Qu.: 74.90   3rd Qu.: 79.36   3rd Qu.:24.17   3rd Qu.:48.92  \n Max.   :138.36   Max.   :116.20   Max.   :80.06   Max.   :71.62  \n NA's   :12       NA's   :12       NA's   :13      NA's   :12     \n      XOM               GE              GS              HD       \n Min.   : 30.27   Min.   : 6.66   Min.   : 52.0   Min.   :18.00  \n 1st Qu.: 42.46   1st Qu.:20.00   1st Qu.: 92.2   1st Qu.:31.00  \n Median : 64.77   Median :30.33   Median :116.2   Median :37.37  \n Mean   : 63.20   Mean   :29.56   Mean   :126.9   Mean   :40.20  \n 3rd Qu.: 81.62   3rd Qu.:36.03   3rd Qu.:159.5   3rd Qu.:46.23  \n Max.   :101.51   Max.   :59.94   Max.   :247.9   Max.   :82.34  \n NA's   :12       NA's   :12      NA's   :12      NA's   :12     \n      IBM              INTC            JNJ             JPM       \n Min.   : 55.07   Min.   :12.08   Min.   :33.69   Min.   :15.45  \n 1st Qu.: 87.82   1st Qu.:20.17   1st Qu.:55.27   1st Qu.:35.66  \n Median :106.48   Median :22.76   Median :61.30   Median :40.20  \n Mean   :118.83   Mean   :25.21   Mean   :61.07   Mean   :40.36  \n 3rd Qu.:130.00   3rd Qu.:26.77   3rd Qu.:65.20   3rd Qu.:45.71  \n Max.   :215.80   Max.   :74.88   Max.   :95.63   Max.   :65.70  \n NA's   :12       NA's   :13      NA's   :12      NA's   :12     \n      MRK             MCD              MSFT            NKE       \n Min.   :20.99   Min.   : 12.38   Min.   :15.15   Min.   : 6.64  \n 1st Qu.:34.53   1st Qu.: 29.19   1st Qu.:25.67   1st Qu.:14.56  \n Median :43.63   Median : 43.78   Median :27.59   Median :23.25  \n Mean   :44.65   Mean   : 51.07   Mean   :28.38   Mean   :28.01  \n 3rd Qu.:51.55   3rd Qu.: 70.36   3rd Qu.:30.19   3rd Qu.:36.90  \n Max.   :89.85   Max.   :103.59   Max.   :58.34   Max.   :79.86  \n NA's   :13      NA's   :12       NA's   :13      NA's   :12     \n\n\n\n4.3.1 Example-Descriptive Statistics of Stock Returns\nDalam contoh ini kita akan menggunakan R untuk menghitung statistik deskriptif untuk pengembalian 10 saham dalam file datasets data_fin.csv\n• Pertama-tama kita akan mengimpor dataset ke R menggunakan fungsi read.csv\n\ndata_cs1 = read.csv(\"data/data_fin.csv\")\nhead(data_cs1)  #check the imported data\n\n        Date     DJI   AXP   MMM   ATT    BA   CAT CISCO    DD   XOM    GE\n1  3/01/2000 11357.5 45.82 47.19 47.19 40.12 24.31 54.05 65.00 39.09 49.95\n2  4/01/2000 10997.9 44.09 45.31 44.25 40.12 24.00 51.00 65.00 38.41 48.06\n3  5/01/2000 11122.7 42.96 46.62 44.94 42.62 24.56 51.19 67.75 40.50 47.70\n4  6/01/2000 11253.3 43.78 50.62 43.75 43.06 25.81 50.00 71.50 42.59 48.51\n5  7/01/2000 11522.6 44.42 51.47 44.12 44.12 26.66 52.94 71.62 42.31 50.28\n6 10/01/2000 11572.2 45.04 51.12 44.75 43.69 25.78 54.91 70.00 41.88 50.37\n     GS    HD    IBM  INTC   JNJ   JPM   MRK   MCD  MSFT   NKE\n1 88.31 65.50 115.56 43.47 46.09 48.69 64.04 39.62 58.34 12.03\n2 82.38 61.50 112.06 41.47 44.41 47.27 61.61 38.81 56.31 11.38\n3 78.88 61.44 116.00 41.81 44.88 46.98 64.22 39.44 56.91 12.03\n4 82.25 60.00 114.62 39.38 46.28 47.65 64.75 38.88 55.00 11.97\n5 82.56 62.81 113.31 41.00 47.88 48.52 70.97 39.75 55.72 11.97\n6 84.38 63.19 118.44 42.88 47.03 47.69 68.89 40.06 56.12 12.17\n\n\nTerapkan fungsi ke dengan tanggal sebagai karakter dan kemudian setelah mengubah tanggal ke kelas Tanggal.\n\n# selecting first 10 price series including the data column\ndata_cs1.1 = data_cs1[, c(1:11)]\n# data cleaning-remove NAs\ndata_cs1.1 = na.omit(data_cs1.1)\ncolnames(data_cs1.1)  # see the columns present in the data\n\n [1] \"Date\"  \"DJI\"   \"AXP\"   \"MMM\"   \"ATT\"   \"BA\"    \"CAT\"   \"CISCO\" \"DD\"   \n[10] \"XOM\"   \"GE\"   \n\nsummary(data_cs1.1)  #notice the Date variable\n\n     Date                DJI             AXP             MMM        \n Length:3523        Min.   : 6547   Min.   :10.26   Min.   : 39.50  \n Class :character   1st Qu.:10063   1st Qu.:38.38   1st Qu.: 62.55  \n Mode  :character   Median :10749   Median :47.60   Median : 77.67  \n                    Mean   :11098   Mean   :46.83   Mean   : 75.80  \n                    3rd Qu.:12340   3rd Qu.:54.50   3rd Qu.: 85.61  \n                    Max.   :16577   Max.   :90.73   Max.   :140.25  \n      ATT              BA              CAT             CISCO      \n Min.   :19.34   Min.   : 25.06   Min.   : 14.91   Min.   : 8.60  \n 1st Qu.:25.54   1st Qu.: 44.02   1st Qu.: 28.48   1st Qu.:17.68  \n Median :29.76   Median : 63.61   Median : 57.11   Median :20.39  \n Mean   :31.79   Mean   : 62.99   Mean   : 56.03   Mean   :23.42  \n 3rd Qu.:37.23   3rd Qu.: 74.95   3rd Qu.: 79.50   3rd Qu.:24.18  \n Max.   :58.50   Max.   :138.36   Max.   :116.20   Max.   :80.06  \n       DD             XOM               GE       \n Min.   :16.14   Min.   : 30.27   Min.   : 6.66  \n 1st Qu.:41.17   1st Qu.: 42.41   1st Qu.:20.04  \n Median :44.58   Median : 64.70   Median :30.37  \n Mean   :44.43   Mean   : 63.18   Mean   :29.63  \n 3rd Qu.:48.93   3rd Qu.: 81.70   3rd Qu.:36.05  \n Max.   :71.62   Max.   :101.51   Max.   :59.94  \n\n# check class of dates which will be factor ( treated as factor by default)\\t\nclass(data_cs1.1$Date)\n\n[1] \"character\"\n\n# convert dates to class Date\ndata_cs1.1$Date = as.Date(data_cs1.1$Date, format = \"%d/%m/%Y\")\nclass(data_cs1.1$Date)\n\n[1] \"Date\"\n\nsummary(data_cs1.1)  #notice the Date variable\n\n      Date                 DJI             AXP             MMM        \n Min.   :2000-01-03   Min.   : 6547   Min.   :10.26   Min.   : 39.50  \n 1st Qu.:2003-07-08   1st Qu.:10063   1st Qu.:38.38   1st Qu.: 62.55  \n Median :2007-01-05   Median :10749   Median :47.60   Median : 77.67  \n Mean   :2007-01-03   Mean   :11098   Mean   :46.83   Mean   : 75.80  \n 3rd Qu.:2010-07-06   3rd Qu.:12340   3rd Qu.:54.50   3rd Qu.: 85.61  \n Max.   :2014-01-03   Max.   :16577   Max.   :90.73   Max.   :140.25  \n      ATT              BA              CAT             CISCO      \n Min.   :19.34   Min.   : 25.06   Min.   : 14.91   Min.   : 8.60  \n 1st Qu.:25.54   1st Qu.: 44.02   1st Qu.: 28.48   1st Qu.:17.68  \n Median :29.76   Median : 63.61   Median : 57.11   Median :20.39  \n Mean   :31.79   Mean   : 62.99   Mean   : 56.03   Mean   :23.42  \n 3rd Qu.:37.23   3rd Qu.: 74.95   3rd Qu.: 79.50   3rd Qu.:24.18  \n Max.   :58.50   Max.   :138.36   Max.   :116.20   Max.   :80.06  \n       DD             XOM               GE       \n Min.   :16.14   Min.   : 30.27   Min.   : 6.66  \n 1st Qu.:41.17   1st Qu.: 42.41   1st Qu.:20.04  \n Median :44.58   Median : 64.70   Median :30.37  \n Mean   :44.43   Mean   : 63.18   Mean   :29.63  \n 3rd Qu.:48.93   3rd Qu.: 81.70   3rd Qu.:36.05  \n Max.   :71.62   Max.   :101.51   Max.   :59.94  \n\n\nUbah harga menjadi pengembalian\n\nd2 = as.data.frame(sapply(data_cs1.1[2:11], function(x) diff(log(x)) * 100))  #note it will be one less\n# create a different dataframe with returns\ndata_stocks_ret = as.data.frame(cbind(Date = data_cs1.1$Date[2:length(data_cs1.1$Date)],\n    d2), stringsAsFactors = FALSE, row.names = NULL)\n# visual inspection\nhead(data_stocks_ret)\n\n        Date        DJI        AXP        MMM        ATT         BA       CAT\n1 2000-01-04 -3.2173973 -3.8487678 -4.0654247 -6.4326634  0.0000000 -1.283396\n2 2000-01-05  1.1283720 -2.5963549  2.8501875  1.5472895  6.0448664  2.306527\n3 2000-01-06  1.1673354  1.8907642  8.2317122 -2.6836654  1.0270865  4.964291\n4 2000-01-07  2.3648905  1.4512726  1.6652359  0.8421582  2.4318702  3.240230\n5 2000-01-10  0.4295346  1.3861165 -0.6823304  1.4178250 -0.9793951 -3.356532\n6 2000-01-11 -0.5293883  0.9061837 -1.7165263 -1.4178250 -1.8713726 -1.563754\n       CISCO         DD        XOM         GE\n1 -5.8083911  0.0000000 -1.7548837 -3.8572275\n2  0.3718568  4.1437190  5.2984132 -0.7518832\n3 -2.3521195  5.3872990  5.0317510  1.6838564\n4  5.7136191  0.1676915 -0.6596019  3.5837421\n5  3.6536284 -2.2879123 -1.0215079  0.1788376\n6 -3.0697677 -1.8018506  1.1868167  0.2379537\n\n\n\n4.3.1.1 Using the Describe function\nPaket psych dilengkapi dengan fungsi yang disebut describe yang menghasilkan statistik deskriptif untuk semua vektor data (kolom) dalam bingkai data, matriks atau vektor.\n\nlibrary(psych)  #load the required package\nargs(describe)  #arguments for describe function\n\nfunction (x, na.rm = TRUE, interp = FALSE, skew = TRUE, ranges = TRUE, \n    trim = 0.1, type = 3, check = TRUE, fast = NULL, quant = NULL, \n    IQR = FALSE, omit = FALSE, data = NULL) \nNULL\n\n# use describe to calculate descriptive stats for data_cs1.1r\ndesc1 = describe(data_stocks_ret[, 2:11])  #note we dont pass the date column\n# check the output\nhead(desc1)\n\n    vars    n  mean   sd median trimmed  mad    min   max range  skew kurtosis\nDJI    1 3522  0.01 1.23   0.04    0.03 0.82  -8.20 10.51 18.71 -0.06     7.71\nAXP    2 3522  0.02 2.89   0.02    0.03 1.55 -19.35 18.77 38.12 -0.01     9.14\nMMM    3 3522  0.03 1.55   0.03    0.03 1.10  -9.38 10.39 19.78  0.06     4.87\nATT    4 3522 -0.01 1.80   0.03    0.01 1.22 -13.54 15.08 28.62  0.02     6.26\nBA     5 3522  0.03 2.01   0.05    0.06 1.57 -19.39 14.38 33.77 -0.26     5.39\nCAT    6 3522  0.04 2.14   0.04    0.05 1.65 -15.69 13.73 29.42 -0.08     4.08\n      se\nDJI 0.02\nAXP 0.05\nMMM 0.03\nATT 0.03\nBA  0.03\nCAT 0.04\n\n# the above output is in long format, we can transpose it get column format\ndesc1.t = t(desc1)\nhead(desc1.t)\n\n                 DJI          AXP          MMM           ATT           BA\nvars    1.000000e+00 2.000000e+00 3.000000e+00  4.000000e+00 5.000000e+00\nn       3.522000e+03 3.522000e+03 3.522000e+03  3.522000e+03 3.522000e+03\nmean    1.055257e-02 1.908563e-02 3.056011e-02 -8.647491e-03 3.499777e-02\nsd      1.226702e+00 2.892586e+00 1.551706e+00  1.799180e+00 2.013123e+00\nmedian  4.442671e-02 1.723604e-02 3.233787e-02  3.018428e-02 5.279680e-02\ntrimmed 2.597511e-02 3.152635e-02 3.241946e-02  9.134423e-03 5.567097e-02\n                 CAT         CISCO            DD          XOM            GE\nvars    6.000000e+00  7.000000e+00  8.000000e+00 9.000000e+00  1.000000e+01\nn       3.522000e+03  3.522000e+03  3.522000e+03 3.522000e+03  3.522000e+03\nmean    3.710732e-02 -2.554732e-02 -5.379787e-04 2.653014e-02 -1.696661e-02\nsd      2.143040e+00  2.744068e+00  1.881993e+00 1.629181e+00  2.057353e+00\nmedian  4.291300e-02  3.800312e-02  0.000000e+00 5.437650e-02  0.000000e+00\ntrimmed 4.678016e-02 -1.339579e-04  1.469270e-03 4.883990e-02  9.841473e-05\n\n\nStatistik deskriptif yang dihasilkan di atas memberikan mean, median, standar deviasi, trimmed mean (dipangkas), median, mad (median absolut deviasi dari median), minimum (min), maksimum (max), skewness (miring), kurtosis dan kesalahan standar (se).\nIni dapat dengan mudah ditransfer ke file CSV atau file teks. Satu baris kode berikut mentransfer statistik deskriptif ke file CSV yang kemudian dapat diimpor ke file word atau lateks sesuai kebutuhan.\n\nrequire(pastecs)  # note library and require can both be used to include a package\n# detach the package pastecs its useful to avoid any conflicts (e.g psych and\n# Hmisc have 'describe' function with two different behaviours\ndetach(\"package:psych\", unload = TRUE)\n# use stat.desc in with default arguments\ndesc2 = stat.desc(data_stocks_ret[, 2:11], norm = TRUE)\ndesc2  #note skewness/kurtosis\n\n                       DJI           AXP           MMM           ATT\nnbr.val       3.522000e+03  3.522000e+03  3.522000e+03  3.522000e+03\nnbr.null      2.000000e+00  2.400000e+01  3.000000e+01  5.000000e+01\nnbr.na        0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00\nmin          -8.200737e+00 -1.935233e+01 -9.383688e+00 -1.353821e+01\nmax           1.050812e+01  1.877116e+01  1.039309e+01  1.508318e+01\nrange         1.870886e+01  3.812349e+01  1.977678e+01  2.862139e+01\nsum           3.716616e+01  6.721959e+01  1.076327e+02 -3.045646e+01\nmedian        4.442671e-02  1.723604e-02  3.233787e-02  3.018428e-02\nmean          1.055257e-02  1.908563e-02  3.056011e-02 -8.647491e-03\nSE.mean       2.067018e-02  4.874068e-02  2.614656e-02  3.031656e-02\nCI.mean.0.95  4.052675e-02  9.556282e-02  5.126395e-02  5.943979e-02\nvar           1.504798e+00  8.367052e+00  2.407790e+00  3.237048e+00\nstd.dev       1.226702e+00  2.892586e+00  1.551706e+00  1.799180e+00\ncoef.var      1.162467e+02  1.515583e+02  5.077551e+01 -2.080580e+02\nskewness     -5.829983e-02 -6.689750e-03  5.927112e-02  1.620418e-02\nskew.2SE     -7.065472e-01 -8.107441e-02  7.183185e-01  1.963817e-01\nkurtosis      7.714304e+00  9.141053e+00  4.865294e+00  6.257155e+00\nkurt.2SE      4.675883e+01  5.540681e+01  2.949008e+01  3.792659e+01\nnormtest.W    9.187712e-01  8.496717e-01  9.384591e-01  9.298653e-01\nnormtest.p    5.671566e-40  1.020339e-49  6.131053e-36  8.237017e-38\n                        BA           CAT         CISCO            DD\nnbr.val       3.522000e+03  3.522000e+03  3.522000e+03  3.522000e+03\nnbr.null      1.500000e+01  2.400000e+01  5.000000e+01  2.900000e+01\nnbr.na        0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00\nmin          -1.938931e+01 -1.568589e+01 -1.768649e+01 -1.202802e+01\nmax           1.437774e+01  1.373497e+01  2.182386e+01  1.085590e+01\nrange         3.376704e+01  2.942086e+01  3.951034e+01  2.288392e+01\nsum           1.232621e+02  1.306920e+02 -8.997766e+01 -1.894761e+00\nmedian        5.279680e-02  4.291300e-02  3.800312e-02  0.000000e+00\nmean          3.499777e-02  3.710732e-02 -2.554732e-02 -5.379787e-04\nSE.mean       3.392155e-02  3.611067e-02  4.623812e-02  3.171197e-02\nCI.mean.0.95  6.650788e-02  7.079996e-02  9.065621e-02  6.217570e-02\nvar           4.052665e+00  4.592620e+00  7.529907e+00  3.541897e+00\nstd.dev       2.013123e+00  2.143040e+00  2.744068e+00  1.881993e+00\ncoef.var      5.752148e+01  5.775248e+01 -1.074112e+02 -3.498266e+03\nskewness     -2.605203e-01 -8.369997e-02  1.547891e-01 -1.523353e-01\nskew.2SE     -3.157298e+00 -1.014377e+00  1.875920e+00 -1.846181e+00\nkurtosis      5.392404e+00  4.077013e+00  7.329406e+00  5.061290e+00\nkurt.2SE      3.268507e+01  2.471206e+01  4.442585e+01  3.067808e+01\nnormtest.W    9.550329e-01  9.583075e-01  9.104004e-01  9.381393e-01\nnormtest.p    1.196739e-31  1.172506e-30  1.882675e-41  5.179385e-36\n                       XOM            GE\nnbr.val       3.522000e+03  3.522000e+03\nnbr.null      2.900000e+01  6.300000e+01\nnbr.na        0.000000e+00  0.000000e+00\nmin          -1.502710e+01 -1.368410e+01\nmax           1.586307e+01  1.798444e+01\nrange         3.089017e+01  3.166854e+01\nsum           9.343915e+01 -5.975640e+01\nmedian        5.437650e-02  0.000000e+00\nmean          2.653014e-02 -1.696661e-02\nSE.mean       2.745205e-02  3.466683e-02\nCI.mean.0.95  5.382353e-02  6.796911e-02\nvar           2.654232e+00  4.232702e+00\nstd.dev       1.629181e+00  2.057353e+00\ncoef.var      6.140870e+01 -1.212589e+02\nskewness      4.651513e-02  1.102593e-02\nskew.2SE      5.637262e-01  1.336254e-01\nkurtosis      1.043194e+01  7.781017e+00\nkurt.2SE      6.323129e+01  4.716320e+01\nnormtest.W    9.160764e-01  9.046828e-01\nnormtest.p    1.839459e-40  2.126284e-42"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "index.html#apa-yang-akan-anda-pelajari",
    "href": "index.html#apa-yang-akan-anda-pelajari",
    "title": "Topik 1 Pengenalan",
    "section": "1.1 Apa yang akan Anda pelajari",
    "text": "1.1 Apa yang akan Anda pelajari\nIlmu data adalah bidang yang luas, dan tidak mungkin Anda bisa menguasai semuanya dengan membaca satu buku. Buku ini bertujuan untuk memberi Anda dasar yang kuat dalam alat yang paling penting dan pengetahuan yang cukup untuk menemukan sumber daya untuk belajar lebih banyak bila diperlukan. Model langkah-langkah proyek ilmu data tipikal kami terlihat seperti Gambar 1.1\n\n\n\n\n\n\n\n\n\n\n4.1.1 Extracting Data\nAnda dapat menginstal tidyverse lengkap dengan satu baris kode :\n\ninstall.packages(\"tidyverse\")\n\nDi komputer Anda, ketik baris kode tersebut di konsol, lalu tekan enter untuk menjalankannya. R akan mengunduh paket dari CRAN dan menginstalnya di komputer Anda.\nAnda tidak akan dapat menggunakan fungsi, objek, atau file bantuan dalam paket sampai Anda memuatnya dengan library() file . Setelah Anda menginstal paket, Anda dapat memuatnya menggunakan library() fungsi:\n\nlibrary(tidyverse)\n#&gt; ── Attaching core tidyverse packages ───────────────────── tidyverse 2.0.0 ──\n#&gt; ✔ dplyr     1.1.3     ✔ readr     2.1.4\n#&gt; ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#&gt; ✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n#&gt; ✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n#&gt; ✔ purrr     1.0.2     \n#&gt; ── Conflicts ─────────────────────────────────────── tidyverse_conflicts() ──\n#&gt; ✖ dplyr::filter() masks stats::filter()\n#&gt; ✖ dplyr::lag()    masks stats::lag()\n#&gt; ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nIni memberitahu Anda bahwa tidyverse memuat sembilan paket: dplyr, forcats, ggplot2, lubridate, purrr, readr, stringr, tibble, tidyr. Ini dianggap sebagai inti dari tidyverse karena Anda akan menggunakannya di hampir setiap analisis.\nPaket dalam tidyverse cukup sering berubah. Anda dapat melihat apakah pembaruan tersedia dengan menjalankan tidyverse_update() .\n\n\n1.1.2 Extracting Data\nKami akan menggunakan banyak paket dari luar tidyverse dalam buku ini. Misalnya, kita akan menggunakan paket berikut karena mereka menyediakan kumpulan data yang menarik untuk kita kerjakan dalam proses pembelajaran R:\n\ninstall.packages(\n  c(\"arrow\", \"babynames\", \"curl\", \"duckdb\", \"gapminder\", \n    \"ggrepel\", \"ggridges\", \"ggthemes\", \"hexbin\", \"janitor\", \"Lahman\", \n    \"leaflet\", \"maps\", \"nycflights13\", \"openxlsx\", \"palmerpenguins\", \n    \"repurrrsive\", \"tidymodels\", \"writexl\")\n  )\n\nKami juga akan menggunakan pilihan paket lain untuk satu contoh. Anda tidak perlu menginstalnya sekarang, ingatlah bahwa setiap kali Anda melihat kesalahan seperti ini:\n\nlibrary(ggrepel)\n#&gt; Error in library(ggrepel) : there is no package called ‘ggrepel’\n\nAnda perlu menjalankan install.packages(“ggrepel”) untuk menginstal paket."
  },
  {
    "objectID": "index.html#menjalankan-kode-r",
    "href": "index.html#menjalankan-kode-r",
    "title": "Topik 1 Pengenalan",
    "section": "1.2 Menjalankan kode R",
    "text": "1.2 Menjalankan kode R\nBagian sebelumnya menunjukkan kepada Anda beberapa contoh menjalankan kode R. Kode dalam buku terlihat seperti ini:\n\n1 + 2\n\n[1] 3\n\n\nJika Anda menjalankan kode yang sama di konsol lokal Anda, akan terlihat seperti ini:\n&gt; 1 + 2 \n[1] 3\nAda dua perbedaan utama. Di konsol Anda, Anda mengetik setelah &gt; , disebut prompt; Kami tidak menampilkan perintah dalam buku. Dalam buku ini, output dikomentari dengan #&gt; ; di konsol Anda, itu muncul langsung setelah kode Anda. Kedua perbedaan ini berarti bahwa jika Anda bekerja dengan versi elektronik buku, Anda dapat dengan mudah menyalin kode dari buku dan menempelkannya ke konsol."
  },
  {
    "objectID": "materi2.html",
    "href": "materi2.html",
    "title": "Topik 2 Visualisasi",
    "section": "",
    "text": "Bab ini berfokus pada ggplot2, salah satu paket inti dalam tidyverse. Untuk mengakses himpunan data, halaman bantuan, dan fungsi yang digunakan dalam bab ini, muat tidyverse dengan menjalankan:"
  },
  {
    "objectID": "materi2.html#apa-yang-akan-anda-pelajari",
    "href": "materi2.html#apa-yang-akan-anda-pelajari",
    "title": "Topik 2 Visualisasi",
    "section": "1.1 Apa yang akan Anda pelajari",
    "text": "1.1 Apa yang akan Anda pelajari\nIlmu data adalah bidang yang luas, dan tidak mungkin Anda bisa menguasai semuanya dengan membaca satu buku. Buku ini bertujuan untuk memberi Anda dasar yang kuat dalam alat yang paling penting dan pengetahuan yang cukup untuk menemukan sumber daya untuk belajar lebih banyak bila diperlukan. Model langkah-langkah proyek ilmu data tipikal kami terlihat seperti Gambar 1.1\n\nlibrary(tidyverse)\n#&gt; ── Attaching core tidyverse packages ───────────────────── tidyverse 2.0.0 ──\n#&gt; ✔ dplyr     1.1.3     ✔ readr     2.1.4\n#&gt; ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#&gt; ✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n#&gt; ✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n#&gt; ✔ purrr     1.0.2     \n#&gt; ── Conflicts ─────────────────────────────────────── tidyverse_conflicts() ──\n#&gt; ✖ dplyr::filter() masks stats::filter()\n#&gt; ✖ dplyr::lag()    masks stats::lag()\n#&gt; ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n4.1.1 Extracting Data\nAnda dapat menginstal tidyverse lengkap dengan satu baris kode :\n\ninstall.packages(\"tidyverse\")\nlibrary(tidyverse)\n\n\nlibrary(palmerpenguins)\nlibrary(ggthemes)\n\n\npenguins\n\n# A tibble: 344 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n 1 Adelie  Torgersen           39.1          18.7               181        3750\n 2 Adelie  Torgersen           39.5          17.4               186        3800\n 3 Adelie  Torgersen           40.3          18                 195        3250\n 4 Adelie  Torgersen           NA            NA                  NA          NA\n 5 Adelie  Torgersen           36.7          19.3               193        3450\n 6 Adelie  Torgersen           39.3          20.6               190        3650\n 7 Adelie  Torgersen           38.9          17.8               181        3625\n 8 Adelie  Torgersen           39.2          19.6               195        4675\n 9 Adelie  Torgersen           34.1          18.1               193        3475\n10 Adelie  Torgersen           42            20.2               190        4250\n# ℹ 334 more rows\n# ℹ 2 more variables: sex &lt;fct&gt;, year &lt;int&gt;\n\n#&gt; # A tibble: 344 × 8\n#&gt;   species island    bill_length_mm bill_depth_mm flipper_length_mm\n#&gt;   &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;\n#&gt; 1 Adelie  Torgersen           39.1          18.7               181\n#&gt; 2 Adelie  Torgersen           39.5          17.4               186\n#&gt; 3 Adelie  Torgersen           40.3          18                 195\n#&gt; 4 Adelie  Torgersen           NA            NA                  NA\n#&gt; 5 Adelie  Torgersen           36.7          19.3               193\n#&gt; 6 Adelie  Torgersen           39.3          20.6               190\n#&gt; # ℹ 338 more rows\n#&gt; # ℹ 3 more variables: body_mass_g &lt;int&gt;, sex &lt;fct&gt;, year &lt;int&gt;\n\n\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               &lt;fct&gt; male, female, female, NA, female, male, female, male…\n$ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n#&gt; Rows: 344\n#&gt; Columns: 8\n#&gt; $ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, A…\n#&gt; $ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen, Torge…\n#&gt; $ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.…\n#&gt; $ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.…\n#&gt; $ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, …\n#&gt; $ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 347…\n#&gt; $ sex               &lt;fct&gt; male, female, female, NA, female, male, female, m…\n#&gt; $ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2…\n\n\nggplot(data = penguins)\n\n\n\n\n\nggplot(\n  data = penguins,\n  mapping = aes(x = flipper_length_mm, y = body_mass_g)\n)\n\n\n\n\n\nggplot(\n  data = penguins,\n  mapping = aes(x = flipper_length_mm, y = body_mass_g)\n) +\n  geom_point()\n\n\n\n#&gt; Warning: Removed 2 rows containing missing values (`geom_point()`).\n\n\nggplot(\n  data = penguins,\n  mapping = aes(x = flipper_length_mm, y = body_mass_g, color = species)\n) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n\n\n\n\n\nggplot(\n  data = penguins,\n  mapping = aes(x = flipper_length_mm, y = body_mass_g)\n) +\n  geom_point(mapping = aes(color = species, shape = species)) +\n  geom_smooth(method = \"lm\")\n\n\n\n\n\nggplot(\n  data = penguins,\n  mapping = aes(x = flipper_length_mm, y = body_mass_g)\n) +\n  geom_point(aes(color = species, shape = species)) +\n  geom_smooth(method = \"lm\") +\n  labs(\n    title = \"Body mass and flipper length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Flipper length (mm)\", y = \"Body mass (g)\",\n    color = \"Species\", shape = \"Species\"\n  ) +\n  scale_color_colorblind()"
  },
  {
    "objectID": "index.html#prasyarat",
    "href": "index.html#prasyarat",
    "title": "Topik 1 Data Import",
    "section": "1.1 Prasyarat",
    "text": "1.1 Prasyarat\nMemuat file di R dengan package readr, yang merupakan bagian dari tidyverse inti.\n\nlibrary(tidyverse)"
  },
  {
    "objectID": "index.html#membaca-data-dari-file",
    "href": "index.html#membaca-data-dari-file",
    "title": "Topik 1 Data Import",
    "section": "1.2 Membaca data dari File",
    "text": "1.2 Membaca data dari File\n\nMembaca spreadsheet Excel\nSemua fungsi ini memiliki sintaks yang sama seperti fungsi lain yang telah kami perkenalkan sebelumnya untuk membaca jenis file lain, misalnya, , , read_csv() read_table() dll. kali ini kita akan menggunakan read_excel() .\n\nstudents &lt;- read_excel(\"data/students.xlsx\")\n#&gt; membaca file student.xlsx dari lokasi folder data\nstudents\n\n# A tibble: 6 × 5\n  `Student ID` `Full Name`      favourite.food     mealPlan            AGE  \n         &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;              &lt;chr&gt;               &lt;chr&gt;\n1            1 Sunil Huffmann   Strawberry yoghurt Lunch only          4    \n2            2 Barclay Lynn     French fries       Lunch only          5    \n3            3 Jayendra Lyne    N/A                Breakfast and lunch 7    \n4            4 Leon Rossini     Anchovies          Lunch only          &lt;NA&gt; \n5            5 Chidiegwu Dunkel Pizza              Breakfast and lunch five \n6            6 Güvenç Attila    Ice cream          Lunch only          6    \n\n\nNama kolom tidak teratur,lalu kita ubah dengan fungsi col_names\n\n#&gt; mengubah nama kolom\nread_excel(\n  \"data/students.xlsx\",\n  col_names = c(\"student_id\", \"full_name\", \"favourite_food\", \"meal_plan\", \"age\"),\n  skip = 1\n)\n\n# A tibble: 6 × 5\n  student_id full_name        favourite_food     meal_plan           age  \n       &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;              &lt;chr&gt;               &lt;chr&gt;\n1          1 Sunil Huffmann   Strawberry yoghurt Lunch only          4    \n2          2 Barclay Lynn     French fries       Lunch only          5    \n3          3 Jayendra Lyne    N/A                Breakfast and lunch 7    \n4          4 Leon Rossini     Anchovies          Lunch only          &lt;NA&gt; \n5          5 Chidiegwu Dunkel Pizza              Breakfast and lunch five \n6          6 Güvenç Attila    Ice cream          Lunch only          6    \n\n\nterlihat pada kolom age dengan tipe data yang seharusnya numeric terdapat data string/huruf (five) sehingga kita ubah menjadi numeric (5)\n\nstudents &lt;- read_excel(\n  \"data/students.xlsx\",\n  col_names = c(\"student_id\", \"full_name\", \"favourite_food\", \"meal_plan\", \"age\"),\n  skip = 1,\n  na = c(\"\", \"N/A\"),\n  col_types = c(\"numeric\", \"text\", \"text\", \"text\", \"text\")\n)\n#&gt; Fungsi col_types mengubah type data\n\nstudents &lt;- students |&gt;\n  mutate(\n    age = if_else(age == \"five\", \"5\", age),\n    age = parse_number(age)\n  )\n#&gt; Fungsi mutate mengubah data dengan argumen if \n\nstudents\n\n# A tibble: 6 × 5\n  student_id full_name        favourite_food     meal_plan             age\n       &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;              &lt;chr&gt;               &lt;dbl&gt;\n1          1 Sunil Huffmann   Strawberry yoghurt Lunch only              4\n2          2 Barclay Lynn     French fries       Lunch only              5\n3          3 Jayendra Lyne    &lt;NA&gt;               Breakfast and lunch     7\n4          4 Leon Rossini     Anchovies          Lunch only             NA\n5          5 Chidiegwu Dunkel Pizza              Breakfast and lunch     5\n6          6 Güvenç Attila    Ice cream          Lunch only              6"
  },
  {
    "objectID": "index.html#membaca-data-dari-banyak-file",
    "href": "index.html#membaca-data-dari-banyak-file",
    "title": "Topik 1 Data Import",
    "section": "1.3 Membaca data dari banyak file",
    "text": "1.3 Membaca data dari banyak file\nTerkadang data dibagi menjadi beberapa file, bukan dalam satu file. Misalnya, kita mungkin memiliki data penjualan selama beberapa bulan, dengan data setiap bulan dalam file terpisah: 01-sales.csv untuk Januari, Februari, 02-sales.csv dan 03-sales.csv Maret. Dengan read_csv() kita dapat membaca data ini sekaligus dan menumpuknya di atas satu sama lain dalam satu data frame.\n\nsales_files &lt;- c(\"data/01-sales.csv\", \"data/02-sales.csv\", \"data/03-sales.csv\")\nread_csv(sales_files, id = \"file\")\n\n# A tibble: 19 × 6\n   file              month     year brand  item     n\n   &lt;chr&gt;             &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 data/01-sales.csv January   2019     1  1234     3\n 2 data/01-sales.csv January   2019     1  8721     9\n 3 data/01-sales.csv January   2019     1  1822     2\n 4 data/01-sales.csv January   2019     2  3333     1\n 5 data/01-sales.csv January   2019     2  2156     9\n 6 data/01-sales.csv January   2019     2  3987     6\n 7 data/01-sales.csv January   2019     2  3827     6\n 8 data/02-sales.csv February  2019     1  1234     8\n 9 data/02-sales.csv February  2019     1  8721     2\n10 data/02-sales.csv February  2019     1  1822     3\n11 data/02-sales.csv February  2019     2  3333     1\n12 data/02-sales.csv February  2019     2  2156     3\n13 data/02-sales.csv February  2019     2  3987     6\n14 data/03-sales.csv March     2019     1  1234     3\n15 data/03-sales.csv March     2019     1  3627     1\n16 data/03-sales.csv March     2019     1  8820     3\n17 data/03-sales.csv March     2019     2  7253     1\n18 data/03-sales.csv March     2019     2  8766     3\n19 data/03-sales.csv March     2019     2  8288     6\n\n#&gt; # A tibble: 19 × 6\n#&gt;   file              month    year brand  item     n\n#&gt;   &lt;chr&gt;             &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n#&gt; 1 data/01-sales.csv January  2019     1  1234     3\n#&gt; 2 data/01-sales.csv January  2019     1  8721     9\n#&gt; 3 data/01-sales.csv January  2019     1  1822     2\n#&gt; 4 data/01-sales.csv January  2019     2  3333     1\n#&gt; 5 data/01-sales.csv January  2019     2  2156     9\n#&gt; 6 data/01-sales.csv January  2019     2  3987     6\n#&gt; # ℹ 13 more rows\n\nAtau bisa mengunduh file-file data dari https://pos.it/r4ds-01-sales, https://pos.it/r4ds-02-sales, dan https://pos.it/r4ds-03-sales dengan kode :\n\nsales_files &lt;- c(\n  \"https://pos.it/r4ds-01-sales\",\n  \"https://pos.it/r4ds-02-sales\",\n  \"https://pos.it/r4ds-03-sales\"\n)\nread_csv(sales_files, id = \"file\")\n\n# A tibble: 19 × 6\n   file                         month     year brand  item     n\n   &lt;chr&gt;                        &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 https://pos.it/r4ds-01-sales January   2019     1  1234     3\n 2 https://pos.it/r4ds-01-sales January   2019     1  8721     9\n 3 https://pos.it/r4ds-01-sales January   2019     1  1822     2\n 4 https://pos.it/r4ds-01-sales January   2019     2  3333     1\n 5 https://pos.it/r4ds-01-sales January   2019     2  2156     9\n 6 https://pos.it/r4ds-01-sales January   2019     2  3987     6\n 7 https://pos.it/r4ds-01-sales January   2019     2  3827     6\n 8 https://pos.it/r4ds-02-sales February  2019     1  1234     8\n 9 https://pos.it/r4ds-02-sales February  2019     1  8721     2\n10 https://pos.it/r4ds-02-sales February  2019     1  1822     3\n11 https://pos.it/r4ds-02-sales February  2019     2  3333     1\n12 https://pos.it/r4ds-02-sales February  2019     2  2156     3\n13 https://pos.it/r4ds-02-sales February  2019     2  3987     6\n14 https://pos.it/r4ds-03-sales March     2019     1  1234     3\n15 https://pos.it/r4ds-03-sales March     2019     1  3627     1\n16 https://pos.it/r4ds-03-sales March     2019     1  8820     3\n17 https://pos.it/r4ds-03-sales March     2019     2  7253     1\n18 https://pos.it/r4ds-03-sales March     2019     2  8766     3\n19 https://pos.it/r4ds-03-sales March     2019     2  8288     6\n\n\nJika kita memiliki banyak file mungkin rumit untuk menuliskan nama mereka dalam daftar. Sebagai gantinya, kita dapat menggunakan fungsi base list.files() untuk menemukan file dengan mencocokkan pola dalam nama file.\n\nsales_files &lt;- list.files(\"data\", pattern = \"sales\\\\.csv$\", full.names = TRUE)\nsales_files\n\n[1] \"data/01-sales.csv\" \"data/02-sales.csv\" \"data/03-sales.csv\"\n\n#&gt; [1] \"data/01-sales.csv\" \"data/02-sales.csv\" \"data/03-sales.csv\""
  },
  {
    "objectID": "index.html#write-to-file",
    "href": "index.html#write-to-file",
    "title": "Topik 1 Data Import",
    "section": "1.4 Write to File",
    "text": "1.4 Write to File\nReadr juga dilengkapi dengan dua fungsi yang berguna untuk write data kembali ke disk: write_csv() dan write_tsv() . Argumen yang paling penting untuk fungsi-fungsi ini adalah x (frame data untuk menyimpan) dan file (lokasi untuk menyimpannya). kita juga dapat menentukan bagaimana nilai yang hilang ditulis dengan N/A.\n\nwrite_csv(students, \"students.csv\")\n\nSekarang mari kita read kembali file csv, Perhatikan bahwa informasi jenis variabel yang baru saja kita siapkan hilang saat kita menyimpan ke CSV karena memulai dari awal dengan membaca dari file teks biasa lagi:\n\nstudents\n\n# A tibble: 6 × 5\n  student_id full_name        favourite_food     meal_plan             age\n       &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;              &lt;chr&gt;               &lt;dbl&gt;\n1          1 Sunil Huffmann   Strawberry yoghurt Lunch only              4\n2          2 Barclay Lynn     French fries       Lunch only              5\n3          3 Jayendra Lyne    &lt;NA&gt;               Breakfast and lunch     7\n4          4 Leon Rossini     Anchovies          Lunch only             NA\n5          5 Chidiegwu Dunkel Pizza              Breakfast and lunch     5\n6          6 Güvenç Attila    Ice cream          Lunch only              6\n\nwrite_csv(students, \"students-2.csv\")\nread_csv(\"students-2.csv\")\n\n# A tibble: 6 × 5\n  student_id full_name        favourite_food     meal_plan             age\n       &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;              &lt;chr&gt;               &lt;dbl&gt;\n1          1 Sunil Huffmann   Strawberry yoghurt Lunch only              4\n2          2 Barclay Lynn     French fries       Lunch only              5\n3          3 Jayendra Lyne    &lt;NA&gt;               Breakfast and lunch     7\n4          4 Leon Rossini     Anchovies          Lunch only             NA\n5          5 Chidiegwu Dunkel Pizza              Breakfast and lunch     5\n6          6 Güvenç Attila    Ice cream          Lunch only              6"
  },
  {
    "objectID": "index.html#library",
    "href": "index.html#library",
    "title": "Topik 1 Data Import",
    "section": "1.1 Library",
    "text": "1.1 Library\n\nLibrary Spreadsheet Excel\nDi bagian ini, kita akan mempelajari cara memuat data dari spreadsheet Excel di R dengan package readxl. Package ini adalah tidyverse non-core, jadi kita perlu memuatnya secara eksplisit, tetapi diinstal secara otomatis ketika menginstal paket tidyverse. Kemudian, kita juga akan menggunakan package writexl, yang memungkinkan kita untuk membuat spreadsheet Excel.\n\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(writexl)"
  },
  {
    "objectID": "index.html#data-spreadsheet-excel",
    "href": "index.html#data-spreadsheet-excel",
    "title": "Topik 1 Data Import",
    "section": "1. Data Spreadsheet Excel",
    "text": "1. Data Spreadsheet Excel\n\n1.1 Library Spreadsheet Excel\nDi bagian ini, kita akan mempelajari cara memuat data dari spreadsheet Excel di R dengan package readxl. Package ini adalah tidyverse non-core, jadi kita perlu memuatnya secara eksplisit, tetapi diinstal secara otomatis ketika menginstal paket tidyverse. Kemudian, kita juga akan menggunakan package writexl, yang memungkinkan kita untuk membuat spreadsheet Excel.\n\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(writexl)\n\n\n\n1.2 Membaca spreadsheet Excel\nSemua fungsi ini memiliki sintaks yang sama seperti fungsi lain yang telah kami perkenalkan sebelumnya untuk membaca jenis file lain, misalnya, , , read_csv() read_table() dll. kali ini kita akan menggunakan read_excel() .\n\n#&gt; membaca file student.xlsx dari lokasi folder data\nstudents &lt;- read_excel(\"data/students.xlsx\")\n\nstudents\n\n# A tibble: 6 × 5\n  `Student ID` `Full Name`      favourite.food     mealPlan            AGE  \n         &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;              &lt;chr&gt;               &lt;chr&gt;\n1            1 Sunil Huffmann   Strawberry yoghurt Lunch only          4    \n2            2 Barclay Lynn     French fries       Lunch only          5    \n3            3 Jayendra Lyne    N/A                Breakfast and lunch 7    \n4            4 Leon Rossini     Anchovies          Lunch only          &lt;NA&gt; \n5            5 Chidiegwu Dunkel Pizza              Breakfast and lunch five \n6            6 Güvenç Attila    Ice cream          Lunch only          6    \n\n\nNama kolom tidak teratur,lalu kita ubah dengan fungsi col_names\n\n#&gt; mengubah nama kolom\nread_excel(\n  \"data/students.xlsx\",\n  col_names = c(\"student_id\", \"full_name\", \"favourite_food\", \"meal_plan\", \"age\"),\n  skip = 1\n)\n\n# A tibble: 6 × 5\n  student_id full_name        favourite_food     meal_plan           age  \n       &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;              &lt;chr&gt;               &lt;chr&gt;\n1          1 Sunil Huffmann   Strawberry yoghurt Lunch only          4    \n2          2 Barclay Lynn     French fries       Lunch only          5    \n3          3 Jayendra Lyne    N/A                Breakfast and lunch 7    \n4          4 Leon Rossini     Anchovies          Lunch only          &lt;NA&gt; \n5          5 Chidiegwu Dunkel Pizza              Breakfast and lunch five \n6          6 Güvenç Attila    Ice cream          Lunch only          6    \n\n\nterlihat pada kolom age dengan tipe data yang seharusnya numeric terdapat data string/huruf (five) sehingga kita ubah menjadi numeric (5)\n\nstudents &lt;- read_excel(\n  \"data/students.xlsx\",\n  col_names = c(\"student_id\", \"full_name\", \"favourite_food\", \"meal_plan\", \"age\"),\n  skip = 1,\n  na = c(\"\", \"N/A\"),\n  col_types = c(\"numeric\", \"text\", \"text\", \"text\", \"text\")\n)\n#&gt; Fungsi col_types mengubah type data\n\nstudents &lt;- students |&gt;\n  mutate(\n    age = if_else(age == \"five\", \"5\", age),\n    age = parse_number(age)\n  )\n#&gt; Fungsi mutate mengubah data dengan argumen if \n\nstudents\n\n# A tibble: 6 × 5\n  student_id full_name        favourite_food     meal_plan             age\n       &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;              &lt;chr&gt;               &lt;dbl&gt;\n1          1 Sunil Huffmann   Strawberry yoghurt Lunch only              4\n2          2 Barclay Lynn     French fries       Lunch only              5\n3          3 Jayendra Lyne    &lt;NA&gt;               Breakfast and lunch     7\n4          4 Leon Rossini     Anchovies          Lunch only             NA\n5          5 Chidiegwu Dunkel Pizza              Breakfast and lunch     5\n6          6 Güvenç Attila    Ice cream          Lunch only              6\n\n\n\n\n1.3 Membaca worksheet Excel\nKita bisa memilih akan menampilkan sheet yang diperlukan dari worksheet Excel\nPada data Excel penguins terdapat worksheet dan kita akan menampilkan sheet Torgerseen Island\n\n\n\n\n\n\n\n\n\n\n#&gt; Identifikasi nama sheet\npenguins_torgersen &lt;- read_excel(\"data/penguins.xlsx\", sheet = \"Torgersen Island\", na = \"NA\")\n\n#&gt; Tampilkan data sheet\npenguins_torgersen\n\n# A tibble: 52 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   &lt;chr&gt;   &lt;chr&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;dbl&gt;       &lt;dbl&gt;\n 1 Adelie  Torgersen           39.1          18.7               181        3750\n 2 Adelie  Torgersen           39.5          17.4               186        3800\n 3 Adelie  Torgersen           40.3          18                 195        3250\n 4 Adelie  Torgersen           NA            NA                  NA          NA\n 5 Adelie  Torgersen           36.7          19.3               193        3450\n 6 Adelie  Torgersen           39.3          20.6               190        3650\n 7 Adelie  Torgersen           38.9          17.8               181        3625\n 8 Adelie  Torgersen           39.2          19.6               195        4675\n 9 Adelie  Torgersen           34.1          18.1               193        3475\n10 Adelie  Torgersen           42            20.2               190        4250\n# ℹ 42 more rows\n# ℹ 2 more variables: sex &lt;chr&gt;, year &lt;dbl&gt;\n\n\n\n\nWrite ke Excel\nKita dapat menginput data dan mengubahnya ke Excel menggunakan fungsi write_xlsx()\n\n#&gt; Buat data dan input \nbake_sale &lt;- tibble(\n  item     = factor(c(\"brownie\", \"cupcake\", \"cookie\")),\n  quantity = c(10, 5, 8)\n)\n\n#&gt; Tampilkan tabel\nbake_sale\n\n# A tibble: 3 × 2\n  item    quantity\n  &lt;fct&gt;      &lt;dbl&gt;\n1 brownie       10\n2 cupcake        5\n3 cookie         8\n\n\n\n#&gt; Selanjutnya kita create ke file Excel dan simpan di path lokasi folder\nwrite_xlsx(bake_sale, path = \"data/bake-sale.xlsx\")\n\n\n#&gt; Tampilkan data Excel yang telah dibuat\nread_excel(\"data/bake-sale.xlsx\")\n\n# A tibble: 3 × 2\n  item    quantity\n  &lt;chr&gt;      &lt;dbl&gt;\n1 brownie       10\n2 cupcake        5\n3 cookie         8"
  },
  {
    "objectID": "index.html#import-data-spreadsheet-excel",
    "href": "index.html#import-data-spreadsheet-excel",
    "title": "Topik 1 | Data Import",
    "section": "1. Import Data Spreadsheet Excel",
    "text": "1. Import Data Spreadsheet Excel\n\n1.1 Library Spreadsheet Excel\nDi bagian ini, kita akan mempelajari cara memuat data dari spreadsheet Excel di R dengan package readxl. Package ini adalah tidyverse non-core, jadi kita perlu memuatnya secara eksplisit, tetapi diinstal secara otomatis ketika menginstal paket tidyverse. Kemudian, kita juga akan menggunakan package writexl, yang memungkinkan kita untuk membuat spreadsheet Excel.\n\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(writexl)\n\n\n\n1.2 Membaca spreadsheet Excel\nSemua fungsi ini memiliki sintaks yang sama seperti fungsi untuk membaca jenis file lain, misalnya, read_csv() , read_table() dll. kali ini kita akan menggunakan read_excel() . kita akan mengimport data Excel students yang telah diunduh tadi misal lokasi file di folder data maka dengan menggunakan fungsi :\n\n#&gt; membaca file student.xlsx dari lokasi folder data\nstudents &lt;- read_excel(\"data/students.xlsx\")\n\nstudents\n\n# A tibble: 6 × 5\n  `Student ID` `Full Name`      favourite.food     mealPlan            AGE  \n         &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;              &lt;chr&gt;               &lt;chr&gt;\n1            1 Sunil Huffmann   Strawberry yoghurt Lunch only          4    \n2            2 Barclay Lynn     French fries       Lunch only          5    \n3            3 Jayendra Lyne    N/A                Breakfast and lunch 7    \n4            4 Leon Rossini     Anchovies          Lunch only          &lt;NA&gt; \n5            5 Chidiegwu Dunkel Pizza              Breakfast and lunch five \n6            6 Güvenç Attila    Ice cream          Lunch only          6    \n\n\nNama kolom tidak teratur,lalu kita ubah dengan fungsi col_names\n\n#&gt; mengubah nama kolom\nread_excel(\n  \"data/students.xlsx\",\n  col_names = c(\"id_siswa\", \"nama_lengkap\", \"makanan_favorit\", \"rencana_makan\", \"umur\"),\n  skip = 1\n)\n\n# A tibble: 6 × 5\n  id_siswa nama_lengkap     makanan_favorit    rencana_makan       umur \n     &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;              &lt;chr&gt;               &lt;chr&gt;\n1        1 Sunil Huffmann   Strawberry yoghurt Lunch only          4    \n2        2 Barclay Lynn     French fries       Lunch only          5    \n3        3 Jayendra Lyne    N/A                Breakfast and lunch 7    \n4        4 Leon Rossini     Anchovies          Lunch only          &lt;NA&gt; \n5        5 Chidiegwu Dunkel Pizza              Breakfast and lunch five \n6        6 Güvenç Attila    Ice cream          Lunch only          6    \n\n\n\n1.2.1 Tipe Data\nDalam file Excel, semua nilai memiliki tipe yang berbeda tidak semuanya adalah string. Data yang mendasari dalam spreadsheet Excel lebih kompleks, seperti :\n\nBoolean, seperti TRUE , , FALSE atau NA.\nNumber, seperti “10” atau “10,5”.\nDate, yang juga dapat mencakup waktu seperti “11/1/21” atau “11/1/21 3:00 PM”.\nString teks, seperti “sepuluh”.\n\nterlihat pada kolom age dengan tipe data yang seharusnya numeric terdapat data string/huruf (five) sehingga kita ubah agar menjadi numeric (5)\n\nstudents &lt;- read_excel(\n  \"data/students.xlsx\",\n  col_names = c(\"id_siswa\", \"nama_lengkap\", \"makanan_favorit\", \"rencana_makan\", \"umur\"),\n  skip = 1,\n  na = c(\"\", \"N/A\"),\n  col_types = c(\"numeric\", \"text\", \"text\", \"text\", \"text\")\n)\n#&gt; Fungsi col_types mengubah type data\n\nstudents &lt;- students |&gt;\n  mutate(\n    umur = if_else(umur == \"five\", \"5\", umur),\n    umur = parse_number(umur)\n  )\n#&gt; Fungsi mutate mengubah data dengan argumen if \n\nstudents\n\n# A tibble: 6 × 5\n  id_siswa nama_lengkap     makanan_favorit    rencana_makan        umur\n     &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;              &lt;chr&gt;               &lt;dbl&gt;\n1        1 Sunil Huffmann   Strawberry yoghurt Lunch only              4\n2        2 Barclay Lynn     French fries       Lunch only              5\n3        3 Jayendra Lyne    &lt;NA&gt;               Breakfast and lunch     7\n4        4 Leon Rossini     Anchovies          Lunch only             NA\n5        5 Chidiegwu Dunkel Pizza              Breakfast and lunch     5\n6        6 Güvenç Attila    Ice cream          Lunch only              6\n\n\n\n\n\n1.3 Membaca worksheet Excel\nKita bisa memilih akan menampilkan sheet yang diperlukan dari worksheet Excel\nPada data Excel penguins terdapat worksheet dan kita akan menampilkan sheet Torgerseen Island\n\n\n\n\n\n\n\n\n\n\n#&gt; Identifikasi nama sheet\npenguins_torgersen &lt;- read_excel(\"data/penguins.xlsx\", sheet = \"Torgersen Island\", na = \"NA\")\n\n#&gt; Tampilkan data sheet\npenguins_torgersen\n\n# A tibble: 52 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   &lt;chr&gt;   &lt;chr&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;dbl&gt;       &lt;dbl&gt;\n 1 Adelie  Torgersen           39.1          18.7               181        3750\n 2 Adelie  Torgersen           39.5          17.4               186        3800\n 3 Adelie  Torgersen           40.3          18                 195        3250\n 4 Adelie  Torgersen           NA            NA                  NA          NA\n 5 Adelie  Torgersen           36.7          19.3               193        3450\n 6 Adelie  Torgersen           39.3          20.6               190        3650\n 7 Adelie  Torgersen           38.9          17.8               181        3625\n 8 Adelie  Torgersen           39.2          19.6               195        4675\n 9 Adelie  Torgersen           34.1          18.1               193        3475\n10 Adelie  Torgersen           42            20.2               190        4250\n# ℹ 42 more rows\n# ℹ 2 more variables: sex &lt;chr&gt;, year &lt;dbl&gt;\n\n\n\n\n1.4 Write ke Excel\nKita dapat menginput data dan mengubahnya ke Excel menggunakan fungsi write_xlsx()\n\n#&gt; Buat data dan input \nbake_sale &lt;- tibble(\n  item     = factor(c(\"brownie\", \"cupcake\", \"cookie\")),\n  quantity = c(10, 5, 8)\n)\n\n#&gt; Tampilkan tabel\nbake_sale\n\n# A tibble: 3 × 2\n  item    quantity\n  &lt;fct&gt;      &lt;dbl&gt;\n1 brownie       10\n2 cupcake        5\n3 cookie         8\n\n\n\n#&gt; Selanjutnya kita create ke file Excel dan simpan di path lokasi folder\nwrite_xlsx(bake_sale, path = \"data/bake-sale.xlsx\")\n\n\n#&gt; Tampilkan data Excel yang telah dibuat\nread_excel(\"data/bake-sale.xlsx\")\n\n# A tibble: 3 × 2\n  item    quantity\n  &lt;chr&gt;      &lt;dbl&gt;\n1 brownie       10\n2 cupcake        5\n3 cookie         8"
  },
  {
    "objectID": "index.html#import-database",
    "href": "index.html#import-database",
    "title": "Topik 1 | Data Import",
    "section": "2. Import Database",
    "text": "2. Import Database\nDalam bab ini, kita akan mempelajari package DBI untuk menyambungkan ke database dan kemudian mengambil data dengan query SQL. SQL (Structured Query Language), adalah bahasa pemrograman untuk database dan merupakan bahasa terpenting bagi semua jenis data analitik.\nPada contoh ini kita akan meng-import database SQL berisi data postingan dan pesan user Tweats. Pertama kita perlu me-load package DBI dan RMySQL, kemudian menghubungkan koneksi database tweater.\n\n#&gt; Load Paket DBI dan  RMySQL\nlibrary(DBI)\nlibrary(RMySQL)\n\n#&gt; Koneksi database\ncon &lt;- dbConnect(RMySQL::MySQL(), \n                 dbname = \"tweater\", \n                 host = \"courses.csrrinzqubik.us-east-1.rds.amazonaws.com\", \n                 port = 3306,\n                 user = \"student\",\n                 password = \"datacamp\")\n\ndbListTables(con)\n\n[1] \"comments\" \"tweats\"   \"users\"   \n\n\n\n2.1 Tampilkan Semua Tabel\nTerlihat ada 3 tabel yaitu “comments”, “tweats”, dan “users”\n\ntables &lt;- dbListTables(con)\ntable_names &lt;- dbListTables(con)\n\n#&gt; Import semua tabel\ntables &lt;- lapply(table_names, dbReadTable, conn = con)\n\n#&gt; Tampilkan semua Tabel\ntables\n\n[[1]]\n     id tweat_id user_id            message\n1  1022       87       7              nice!\n2  1000       77       7             great!\n3  1011       49       5            love it\n4  1012       87       1   awesome! thanks!\n5  1010       88       6              yuck!\n6  1026       77       4      not my thing!\n7  1004       49       1  this is fabulous!\n8  1030       75       6           so easy!\n9  1025       88       2             oh yes\n10 1007       49       3           serious?\n11 1020       77       1 couldn't be better\n12 1014       77       1       saved my day\n\n[[2]]\n  id user_id\n1 75       3\n2 88       4\n3 77       6\n4 87       5\n5 49       1\n6 24       7\n                                                                 post\n1                                       break egg. bake egg. eat egg.\n2                           wash strawberries. add ice. blend. enjoy.\n3                       2 slices of bread. add cheese. grill. heaven.\n4               open and crush avocado. add shrimps. perfect starter.\n5 nachos. add tomato sauce, minced meat and cheese. oven for 10 mins.\n6                              just eat an apple. simply and healthy.\n        date\n1 2015-09-05\n2 2015-09-14\n3 2015-09-21\n4 2015-09-22\n5 2015-09-22\n6 2015-09-24\n\n[[3]]\n  id      name     login\n1  1 elisabeth  elismith\n2  2      mike     mikey\n3  3      thea   teatime\n4  4    thomas tomatotom\n5  5    oliver olivander\n6  6      kate  katebenn\n7  7    anjali    lianja\n\n\n\n\n2.2 Tampilkan tabel khusus\nMisal kita hanya akan menampilkan tabel users\n\n#&gt; import tabel users dari data tweater\nusers &lt;- dbReadTable(con, \"users\")\n\n#&gt; Tampilkan tabel\nusers\n\n  id      name     login\n1  1 elisabeth  elismith\n2  2      mike     mikey\n3  3      thea   teatime\n4  4    thomas tomatotom\n5  5    oliver olivander\n6  6      kate  katebenn\n7  7    anjali    lianja\n\n\n\n\n2.3 Read data dengan SELECT dan WHERE\nKita akan menampilkan data post terbaru dari tabel tweats pada tanggal lebih dari ‘2015-09-21’\n\n#&gt; menampilkan data post dari tabel tweats pada tanggal lebih dari '2015-09-21'\nlatest &lt;- dbGetQuery(con, \"SELECT post FROM tweats\nWHERE date &gt; '2015-09-21'\")\n\n#&gt; Tampilkan data\nlatest\n\n                                                                 post\n1               open and crush avocado. add shrimps. perfect starter.\n2 nachos. add tomato sauce, minced meat and cheese. oven for 10 mins.\n3                              just eat an apple. simply and healthy.\n\n\n\n\n2.4 Fungsi INNER JOIN\nMisal kita akan menampilkan gabungan data dari 2 tabel berbeda berdasarkan foreign key/id\n\n#&gt; Tampilkan nama dari tabel users dan post dari tabel tweats berdasarkan user id dimana tanggal post lebih dari '2015-09-19'\ndbGetQuery(con, \"SELECT name, post\n  FROM users INNER JOIN tweats on users.id = user_id\n    WHERE date &gt; '2015-09-19'\")\n\n       name                                                                post\n1 elisabeth nachos. add tomato sauce, minced meat and cheese. oven for 10 mins.\n2    oliver               open and crush avocado. add shrimps. perfect starter.\n3      kate                       2 slices of bread. add cheese. grill. heaven.\n4    anjali                              just eat an apple. simply and healthy."
  },
  {
    "objectID": "index.html#import-data-online",
    "href": "index.html#import-data-online",
    "title": "Topik 1 | Data Import",
    "section": "3. Import Data Online",
    "text": "3. Import Data Online\nMetode ketiga yaitu import data dari url dengan fungsi read. Pertama kita perlu me-load package tidyverse kemudian gunakan fungsi read_csv() atau read_excel() sesuai format data\n\n#&gt; Load package\nlibrary(tidyverse)\n\n#&gt; Identifikasi url data\nstudents &lt;- read_csv(\"https://pos.it/r4ds-students-csv\")\n\n#&gt; Tampilkan data\nstudents\n\n# A tibble: 6 × 5\n  `Student ID` `Full Name`      favourite.food     mealPlan            AGE  \n         &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;              &lt;chr&gt;               &lt;chr&gt;\n1            1 Sunil Huffmann   Strawberry yoghurt Lunch only          4    \n2            2 Barclay Lynn     French fries       Lunch only          5    \n3            3 Jayendra Lyne    N/A                Breakfast and lunch 7    \n4            4 Leon Rossini     Anchovies          Lunch only          &lt;NA&gt; \n5            5 Chidiegwu Dunkel Pizza              Breakfast and lunch five \n6            6 Güvenç Attila    Ice cream          Lunch only          6"
  },
  {
    "objectID": "index.html#web-scrapping",
    "href": "index.html#web-scrapping",
    "title": "Topik 1 | Data Import",
    "section": "5. Web Scrapping",
    "text": "5. Web Scrapping\nWeb scraping adalah metode pengambilan data dari sebuah website secara otomatis. Teknik ini sangat berguna dalam bisnis online, baik itu untuk riset pasar, riset kompetitor, atau mencari leads 1. Ada beberapa teknik web scraping yang umum dilakukan, yaitu:\n\nMenyalin data secara manual\nMenggunakan regular expression\nParsing HTML\n\nKali ini kita akan menggunakan fungsi read_html() untuk meng-ekstrak element tabel dari website dengan me-load package tidyverse dan rvest terlebih dahulu Misal kita akan meng-import data dari tabel website chart trending Youtube maka :\n\n#&gt; Load Package\nlibrary(tidyverse)\nlibrary(rvest)\n\n#&gt; Url data tabel\nurl &lt;- \"https://kworb.net/youtube/insights/id_daily.html\"\nhtml &lt;- read_html(url)\n\n#&gt; Ekstrak element tabel\ntable &lt;- html |&gt; \n  html_element(\"table\") |&gt; \n  html_table()\n\n#&gt; Tampilkan Tabel\ntable\n\n# A tibble: 20 × 5\n     Pos `P+`  Track                                          Streams `Streams+`\n   &lt;int&gt; &lt;chr&gt; &lt;chr&gt;                                          &lt;chr&gt;   &lt;chr&gt;     \n 1     1 =     \"Nadhif Basalamah - penjaga hati\"              2,083,… \"-43,270\" \n 2     2 =     \"Denny Caknan - Wirang\"                        1,320,… \"-360,976\"\n 3     3 +1    \"Anggi Marito - Tak Segampang Itu\"             1,270,… \"-45,851\" \n 4     4 +1    \"Fabio Asher - Tanpa Rasa Bersalah\"            1,244,… \"-14,033\" \n 5     5 +2    \"Ghea Indrawari - Jiwa Yang Bersedih\"          1,209,… \"+45,329\" \n 6     6 =     \"Denny Caknan - Taman Jurug (Live)\"            1,184,… \"-73,218\" \n 7     7 +1    \"Jaz - Bersamamu\"                              1,063,… \"-70,502\" \n 8     8 +1    \"NiziU - HEARTRIS\"                             1,022,… \"-93,271\" \n 9     9 +1    \"Omwawes - Dumes (feat. Guyon Waton)\"          1,011,… \"-8,266\"  \n10    10 +1    \"Tri Suaka - Merayu Tuhan (feat. Dodhy Kangen… 995,141 \"-17,167\" \n11    11 +3    \"Vasuki Vaibhav - Huchumanasa Hudugi (From \\\"… 963,750 \"+33,162\" \n12    12 +5    \"RIIZE - Talk Saxy\"                            943,419 \"+174,955\"\n13    13 -10   \"TAEMIN - Guilty\"                              881,514 \"-463,958\"\n14    14 -2    \"NDX A.K.A. - Nemen (Hiphop Dangdut Version)\"  877,794 \"-87,399\" \n15    15 NEW   \"HeeJin - Algorithm (Algorithm)\"               873,188 \"\"        \n16    16 -3    \"Idgitaf - Satu-Satu\"                          870,274 \"-76,060\" \n17    17 -2    \"Harusaruhi - One man live\"                    805,635 \"-44,765\" \n18    18 -2    \"Batas Senja - Nanti Kita Seperti Ini\"         757,944 \"-36,386\" \n19    19 -1    \"Mahalini - Sial\"                              715,691 \"-19,689\" \n20    20 =     \"TREASURE - B.O.M.B\"                           699,208 \"+12,740\""
  },
  {
    "objectID": "index.html#import-google-sheets",
    "href": "index.html#import-google-sheets",
    "title": "Topik 1 | Data Import",
    "section": "4. Import Google Sheets",
    "text": "4. Import Google Sheets\nPanggunaan package googlesheet hampir mirip dengan import online hanya saja diganti dengan sheet_id. Pertama kita me-load package googlesheets4 dan kemudian gunakan fungsi read_sheet. Misal kita akan mengimport data dari google sheet : https://docs.google.com/spreadsheets/d/1V1nPp1tzOuutXFLb3G9Eyxi3qxeEhnOXUzL5_BcCQ0w maka kita akan mengambil id sheet sebagai key call nya yaitu 1V1nPp1tzOuutXFLb3G9Eyxi3qxeEhnOXUzL5_BcCQ0w\n\n#&gt; Load paket googlesheet\nlibrary(googlesheets4)\ngooglesheets4::gs4_deauth()\n\n#&gt; Membaca sheet berdasarkan sheet id\nread_sheet(\"1V1nPp1tzOuutXFLb3G9Eyxi3qxeEhnOXUzL5_BcCQ0w\")\n\n# A tibble: 6 × 5\n  `Student ID` `Full Name`      favourite.food     mealPlan            AGE      \n         &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;              &lt;chr&gt;               &lt;list&gt;   \n1            1 Sunil Huffmann   Strawberry yoghurt Lunch only          &lt;dbl [1]&gt;\n2            2 Barclay Lynn     French fries       Lunch only          &lt;dbl [1]&gt;\n3            3 Jayendra Lyne    N/A                Breakfast and lunch &lt;dbl [1]&gt;\n4            4 Leon Rossini     Anchovies          Lunch only          &lt;NULL&gt;   \n5            5 Chidiegwu Dunkel Pizza              Breakfast and lunch &lt;chr [1]&gt;\n6            6 Güvenç Attila    Ice cream          Lunch only          &lt;dbl [1]&gt;\n\n\n\n4.1 Menampilkan sheet khusus google sheet\nMisal dari google sheet : https://docs.google.com/spreadsheets/d/1aFu8lnD_g0yjF5O-K6SFgSEWiHPpgvFCF0NY9D6LXnY/edit#gid=0\nterdapat beberapa sheet dan kita akan menampilkan data di sheet Togersen Island maka :\n\n#&gt; Identifikasi id sheet google sheet\npenguins_sheet_id &lt;- \"1aFu8lnD_g0yjF5O-K6SFgSEWiHPpgvFCF0NY9D6LXnY\"\n\n#&gt; Tampilkan data sheet Torgersen Island, col_names untuk sesuaikan nama kolom, 'na' untuk menghilangkan data kosong\nread_sheet(penguins_sheet_id, sheet = \"Torgersen Island\",col_names = c(\"spesies\", \"pulau\", \"bill_length\", \"bill_depth\", \"panjang sirip\", \"berat\", \"kelamin\", \"tahun\" ), skip= 1,na = c(\"\", \"N/A\"),  col_types = \"cccccccc\"\n  )\n\n# A tibble: 52 × 8\n   spesies pulau     bill_length bill_depth `panjang sirip` berat kelamin tahun\n   &lt;chr&gt;   &lt;chr&gt;     &lt;chr&gt;       &lt;chr&gt;      &lt;chr&gt;           &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt;\n 1 Adelie  Torgersen 39.1        18.7       181             3750  male    2007 \n 2 Adelie  Torgersen 39.5        17.4       186             3800  female  2007 \n 3 Adelie  Torgersen 40.3        18         195             3250  female  2007 \n 4 Adelie  Torgersen NA          NA         NA              NA    NA      2007 \n 5 Adelie  Torgersen 36.7        19.3       193             3450  female  2007 \n 6 Adelie  Torgersen 39.3        20.6       190             3650  male    2007 \n 7 Adelie  Torgersen 38.9        17.8       181             3625  female  2007 \n 8 Adelie  Torgersen 39.2        19.6       195             4675  male    2007 \n 9 Adelie  Torgersen 34.1        18.1       193             3475  NA      2007 \n10 Adelie  Torgersen 42          20.2       190             4250  NA      2007 \n# ℹ 42 more rows"
  },
  {
    "objectID": "topik2.html",
    "href": "topik2.html",
    "title": "Topik 3 | Data Tidy",
    "section": "",
    "text": "Sebelum memulai analisa terhadap data yang kita miliki, umumnya kita akan merapikan data yang akan kita gunakan. Tujuannya adalah agar data yang akan digunakan sudah siap untuk dilakukan analisa, dimana pada dataset perlu adanya kejelasan antara variabel dan nilai (value), serta untuk mempermudah dalam memperoleh informasi pada data. Sebelum kita melakukan analisa di dataset tersebut, kita harus tahu dulu apa saja syarat suatu dataset dikatakan rapi (tidy). Berikut adalah syaratnya:\n\nSetiap variabel harus memiliki kolomnya sendiri\nSetiap observasi harus memiliki barisnya sendiri\nSetiap nilai berada pada sel tersendiri\n\nKetiga syarat tersebut saling berhubungan sehingga jika salah satu syarat tersebut tidak terpenuhi, maka dataset belum bisa dikatakan tidy. Ketiga syarat tersebut dapat divisualisasikan :"
  },
  {
    "objectID": "topik2.html#konsep-data-tidy",
    "href": "topik2.html#konsep-data-tidy",
    "title": "Topik 3 | Data Tidy",
    "section": "",
    "text": "Sebelum memulai analisa terhadap data yang kita miliki, umumnya kita akan merapikan data yang akan kita gunakan. Tujuannya adalah agar data yang akan digunakan sudah siap untuk dilakukan analisa, dimana pada dataset perlu adanya kejelasan antara variabel dan nilai (value), serta untuk mempermudah dalam memperoleh informasi pada data. Sebelum kita melakukan analisa di dataset tersebut, kita harus tahu dulu apa saja syarat suatu dataset dikatakan rapi (tidy). Berikut adalah syaratnya:\n\nSetiap variabel harus memiliki kolomnya sendiri\nSetiap observasi harus memiliki barisnya sendiri\nSetiap nilai berada pada sel tersendiri\n\nKetiga syarat tersebut saling berhubungan sehingga jika salah satu syarat tersebut tidak terpenuhi, maka dataset belum bisa dikatakan tidy. Ketiga syarat tersebut dapat divisualisasikan :"
  },
  {
    "objectID": "topik2.html#data-tidy-tidyverse",
    "href": "topik2.html#data-tidy-tidyverse",
    "title": "Topik 3 | Data Tidy",
    "section": "2. Data Tidy (tidyverse)",
    "text": "2. Data Tidy (tidyverse)\nDalam bab ini kita akan menggunakan element tidyR, sebuah paket yang menyediakan banyak tools untuk membantu merapikan kumpulan data yang berantakan, tidyR adalah bagian dari tidyverse.\n\n#&gt; Load paket tidyverse\nlibrary(tidyverse)\n\nContohnya tabel dibawah ini menunjukkan data yang sama yang disusun dalam tiga cara berbeda. Setiap dataset menunjukkan nilai yang sama dari empat variabel: negara, tahun, populasi, dan jumlah kasus TB (tuberkulosis), tetapi setiap dataset mengatur posisi nilai-nilainya dengan cara yang berbeda.\n\n#&gt; Tampilkan Tabel 1\ntable1\n\n# A tibble: 6 × 4\n  country      year  cases population\n  &lt;chr&gt;       &lt;dbl&gt;  &lt;dbl&gt;      &lt;dbl&gt;\n1 Afghanistan  1999    745   19987071\n2 Afghanistan  2000   2666   20595360\n3 Brazil       1999  37737  172006362\n4 Brazil       2000  80488  174504898\n5 China        1999 212258 1272915272\n6 China        2000 213766 1280428583\n\n#&gt; Tampilkan Tabel 2\ntable2\n\n# A tibble: 12 × 4\n   country      year type            count\n   &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt;           &lt;dbl&gt;\n 1 Afghanistan  1999 cases             745\n 2 Afghanistan  1999 population   19987071\n 3 Afghanistan  2000 cases            2666\n 4 Afghanistan  2000 population   20595360\n 5 Brazil       1999 cases           37737\n 6 Brazil       1999 population  172006362\n 7 Brazil       2000 cases           80488\n 8 Brazil       2000 population  174504898\n 9 China        1999 cases          212258\n10 China        1999 population 1272915272\n11 China        2000 cases          213766\n12 China        2000 population 1280428583\n\n#&gt; Tampilkan Tabel 3\ntable3\n\n# A tibble: 6 × 3\n  country      year rate             \n  &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt;            \n1 Afghanistan  1999 745/19987071     \n2 Afghanistan  2000 2666/20595360    \n3 Brazil       1999 37737/172006362  \n4 Brazil       2000 80488/174504898  \n5 China        1999 212258/1272915272\n6 China        2000 213766/1280428583\n\n\nDapat dilihat bahwa tabel 1 akan jauh lebih mudah dipahami untuk proses analisis dalam tidyverse karena rapi (tidy)\nMaka dari itu, terdapat keuntungan mengapa data harus rapi (tidy) :\n\nKonsistensi dalam menyimpan data, jika kita memiliki struktur data yang konsisten, akan lebih mudah untuk mempelajari tools yang dipakai untuk mem-prosesnya karena memiliki keseragaman.\nLebih mudah untuk menempatkan variabel dalam kolom karena memungkinkan transformasi data yang rapi (tidy) secara terstruktur.\n\n\n2.1 Paket tidyverse\nAda sejumlah package R yang dapat digunakan untuk mengatur form data rapi (tidy) :\n\nggplot2: sistem plot berdasarkan tata grafik\nmagrittr: mendefinisikan operator untuk fungsi chaining bersama %&gt;% dalam serangkaian operasi pada data\ndplyr: serangkaian fungsi (cepat) untuk bekerja dengan frame data\ntidyr: data yang mudah dirapikan dengan spread() fungsi AND gather()\n\nMisalnya kita akan manampilkan rentang data dengan ggplot\n\n#&gt; Hitung rate per 10,000\ntable1 |&gt;\n  mutate(rate = cases / population * 10000)\n\n# A tibble: 6 × 5\n  country      year  cases population  rate\n  &lt;chr&gt;       &lt;dbl&gt;  &lt;dbl&gt;      &lt;dbl&gt; &lt;dbl&gt;\n1 Afghanistan  1999    745   19987071 0.373\n2 Afghanistan  2000   2666   20595360 1.29 \n3 Brazil       1999  37737  172006362 2.19 \n4 Brazil       2000  80488  174504898 4.61 \n5 China        1999 212258 1272915272 1.67 \n6 China        2000 213766 1280428583 1.67 \n\n#&gt; Hitung total cases per tahun\ntable1 |&gt; \n  group_by(year) |&gt; \n  summarize(total_cases = sum(cases))\n\n# A tibble: 2 × 2\n   year total_cases\n  &lt;dbl&gt;       &lt;dbl&gt;\n1  1999      250740\n2  2000      296920\n\n#&gt; Visualisasi perubahan setiap waktu\nggplot(table1, aes(x = year, y = cases)) +\n  geom_line(aes(group = country), color = \"grey50\") +\n  geom_point(aes(color = country, shape = country)) +\n  scale_x_continuous(breaks = c(1999, 2000))"
  },
  {
    "objectID": "topik2.html#pivot-data",
    "href": "topik2.html#pivot-data",
    "title": "Topik 3 | Data Tidy",
    "section": "3. Pivot Data",
    "text": "3. Pivot Data\nPivot Data berfungsi untuk merangkum, mengelompokkan, mengeksplorasi, mempresentasikan , menghitung, dan menganalisa data. Kita bisa memanipulasi dan mengubah layout atau tampilan data sesuai kebutuhan.\n\n3.1 Cara Kerja Pivot\nMisalkan kita memiliki tiga pasien dengan id_pasien Ali, Budi, dan Candra, dan kita melakukan dua pengukuran tekanan darah pada setiap pasien. Kita akan membuat data dengan fungsi tribble() :\n\ndata_pasien &lt;- tribble(\n  ~id_pasien,  ~tekanan_darah1, ~tekanan_darah2,\n   \"Ali\",  100,  120,\n   \"Budi\",  140,  115,\n   \"Candra\",  120,  125\n)\n\ndata_pasien\n\n# A tibble: 3 × 3\n  id_pasien tekanan_darah1 tekanan_darah2\n  &lt;chr&gt;              &lt;dbl&gt;          &lt;dbl&gt;\n1 Ali                  100            120\n2 Budi                 140            115\n3 Candra               120            125\n\n\nLalu kita akan merapikan data agar lebih mudah dalam analisa tekanan darah pasien dengan menambah kolom pengukuran dan nilai pada fungsi pivot longer:\n\ndata_pasien |&gt; \n  pivot_longer(\n    cols = tekanan_darah1:tekanan_darah2,\n    names_to = \"pengukuran\",\n    values_to = \"nilai\"\n  )\n\n# A tibble: 6 × 3\n  id_pasien pengukuran     nilai\n  &lt;chr&gt;     &lt;chr&gt;          &lt;dbl&gt;\n1 Ali       tekanan_darah1   100\n2 Ali       tekanan_darah2   120\n3 Budi      tekanan_darah1   140\n4 Budi      tekanan_darah2   115\n5 Candra    tekanan_darah1   120\n6 Candra    tekanan_darah2   125\n\n\nSehingga gambaran proses pivot data akan seperti berikut :\n\n\n\n\n\n\n\n\n\n\n\n3.2 Visualisasi Pivot Data\nMisal kita akan menganalisa data pada datasets billboard peringkat lagu tahun 2000\n\n#&gt; Load datasets billboard\nbillboard\n\n# A tibble: 317 × 79\n   artist     track date.entered   wk1   wk2   wk3   wk4   wk5   wk6   wk7   wk8\n   &lt;chr&gt;      &lt;chr&gt; &lt;date&gt;       &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 2 Pac      Baby… 2000-02-26      87    82    72    77    87    94    99    NA\n 2 2Ge+her    The … 2000-09-02      91    87    92    NA    NA    NA    NA    NA\n 3 3 Doors D… Kryp… 2000-04-08      81    70    68    67    66    57    54    53\n 4 3 Doors D… Loser 2000-10-21      76    76    72    69    67    65    55    59\n 5 504 Boyz   Wobb… 2000-04-15      57    34    25    17    17    31    36    49\n 6 98^0       Give… 2000-08-19      51    39    34    26    26    19     2     2\n 7 A*Teens    Danc… 2000-07-08      97    97    96    95   100    NA    NA    NA\n 8 Aaliyah    I Do… 2000-01-29      84    62    51    41    38    35    35    38\n 9 Aaliyah    Try … 2000-03-18      59    53    38    28    21    18    16    14\n10 Adams, Yo… Open… 2000-08-26      76    76    74    69    68    67    61    58\n# ℹ 307 more rows\n# ℹ 68 more variables: wk9 &lt;dbl&gt;, wk10 &lt;dbl&gt;, wk11 &lt;dbl&gt;, wk12 &lt;dbl&gt;,\n#   wk13 &lt;dbl&gt;, wk14 &lt;dbl&gt;, wk15 &lt;dbl&gt;, wk16 &lt;dbl&gt;, wk17 &lt;dbl&gt;, wk18 &lt;dbl&gt;,\n#   wk19 &lt;dbl&gt;, wk20 &lt;dbl&gt;, wk21 &lt;dbl&gt;, wk22 &lt;dbl&gt;, wk23 &lt;dbl&gt;, wk24 &lt;dbl&gt;,\n#   wk25 &lt;dbl&gt;, wk26 &lt;dbl&gt;, wk27 &lt;dbl&gt;, wk28 &lt;dbl&gt;, wk29 &lt;dbl&gt;, wk30 &lt;dbl&gt;,\n#   wk31 &lt;dbl&gt;, wk32 &lt;dbl&gt;, wk33 &lt;dbl&gt;, wk34 &lt;dbl&gt;, wk35 &lt;dbl&gt;, wk36 &lt;dbl&gt;,\n#   wk37 &lt;dbl&gt;, wk38 &lt;dbl&gt;, wk39 &lt;dbl&gt;, wk40 &lt;dbl&gt;, wk41 &lt;dbl&gt;, wk42 &lt;dbl&gt;, …\n\n\nTiga kolom pertama ( artist , track dan date.entered ) adalah variabel yang mendeskripsikan lagu. Kemudian 76 kolom ( wk1 - wk76 ) yang menggambarkan peringkat lagu di setiap minggu. Lalu, kita akan merapikan data dengan menambah kolom variabel (week) dan nilai sel adalah (rank).\nUntuk merapikan data ini, kita akan menggunakan pivot_longer() :\n\n#&gt; Pangggil fungsi pivot\nbillboard |&gt; \n  pivot_longer(\n    cols = starts_with(\"wk\"), \n  \n#&gt; Nama variabel baru  \n    names_to = \"week\",\n\n#&gt; Nilai Variabel baru\n    values_to = \"rank\",\n    values_drop_na = TRUE\n  )\n\n# A tibble: 5,307 × 5\n   artist  track                   date.entered week   rank\n   &lt;chr&gt;   &lt;chr&gt;                   &lt;date&gt;       &lt;chr&gt; &lt;dbl&gt;\n 1 2 Pac   Baby Don't Cry (Keep... 2000-02-26   wk1      87\n 2 2 Pac   Baby Don't Cry (Keep... 2000-02-26   wk2      82\n 3 2 Pac   Baby Don't Cry (Keep... 2000-02-26   wk3      72\n 4 2 Pac   Baby Don't Cry (Keep... 2000-02-26   wk4      77\n 5 2 Pac   Baby Don't Cry (Keep... 2000-02-26   wk5      87\n 6 2 Pac   Baby Don't Cry (Keep... 2000-02-26   wk6      94\n 7 2 Pac   Baby Don't Cry (Keep... 2000-02-26   wk7      99\n 8 2Ge+her The Hardest Part Of ... 2000-09-02   wk1      91\n 9 2Ge+her The Hardest Part Of ... 2000-09-02   wk2      87\n10 2Ge+her The Hardest Part Of ... 2000-09-02   wk3      92\n# ℹ 5,297 more rows\n\n\n\ncols untuk menentukan kolom mana yang perlu dipivot, Argumen ini menggunakan sintaks yang sama seperti select() jadi di sini kita bisa menggunakan !c(artist, track, date.entered) atau starts_with(\"wk\").\nnames_to untuk menamai variabel yang disimpan dalam nama kolom, dengan variabel week.\nvalues_to untuk menamai variabel yang disimpan dalam nilai sel, pada variabel rank.\n\nSelanjutnya kita ubah type data week dengan parse_number agar menjadi angka sebagai variabel perhitungan\n\nbillboard_longer &lt;- billboard |&gt; \n  pivot_longer(\n    cols = starts_with(\"wk\"), \n    names_to = \"week\", \n    values_to = \"rank\",\n    values_drop_na = TRUE\n  ) |&gt; \n  mutate(\n    week = parse_number(week)\n  )\nbillboard_longer\n\n# A tibble: 5,307 × 5\n   artist  track                   date.entered  week  rank\n   &lt;chr&gt;   &lt;chr&gt;                   &lt;date&gt;       &lt;dbl&gt; &lt;dbl&gt;\n 1 2 Pac   Baby Don't Cry (Keep... 2000-02-26       1    87\n 2 2 Pac   Baby Don't Cry (Keep... 2000-02-26       2    82\n 3 2 Pac   Baby Don't Cry (Keep... 2000-02-26       3    72\n 4 2 Pac   Baby Don't Cry (Keep... 2000-02-26       4    77\n 5 2 Pac   Baby Don't Cry (Keep... 2000-02-26       5    87\n 6 2 Pac   Baby Don't Cry (Keep... 2000-02-26       6    94\n 7 2 Pac   Baby Don't Cry (Keep... 2000-02-26       7    99\n 8 2Ge+her The Hardest Part Of ... 2000-09-02       1    91\n 9 2Ge+her The Hardest Part Of ... 2000-09-02       2    87\n10 2Ge+her The Hardest Part Of ... 2000-09-02       3    92\n# ℹ 5,297 more rows\n\n\nKemudian kita memvisualisasikan bagaimana peringkat lagu dari waktu ke waktu dengan fungsi ggplot\n\n#&gt; Visualisasi pivot data\nbillboard_longer |&gt; \n  ggplot(aes(x = week, y = rank, group = track)) + \n  geom_line(alpha = 0.25) + \n  scale_y_reverse()\n\n\n\n\nDapat dilihat bahwa Plot line menunjukkan hanya sedikit lagu yang bertahan di 100 teratas selama lebih dari 20 minggu."
  },
  {
    "objectID": "topik3.html",
    "href": "topik3.html",
    "title": "Topik 3: Modelling",
    "section": "",
    "text": "Dalam bab ini, Anda akan mempelajari alat untuk bekerja dengan vektor logis. Vektor logis adalah jenis vektor yang paling sederhana karena setiap elemen hanya dapat menjadi salah satu dari tiga nilai yang mungkin: TRUE , FALSE , dan NA . Relatif jarang menemukan vektor logis dalam data mentah Anda, tetapi Anda akan membuat dan memanipulasinya.\n\n\nlibrary(tidyverse)\nlibrary(nycflights13)\n\nNamun, saat kita mulai membahas lebih banyak alat, tidak akan selalu ada contoh nyata yang sempurna. Jadi kita akan mulai membuat beberapa data dummy dengan c() :\n\nx &lt;- c(1, 2, 3, 5, 7, 11, 13)\nx * 2\n\n[1]  2  4  6 10 14 22 26\n\n\n\ndf &lt;- tibble(x)\ndf |&gt; \n  mutate(y = x * 2)\n\n# A tibble: 7 × 2\n      x     y\n  &lt;dbl&gt; &lt;dbl&gt;\n1     1     2\n2     2     4\n3     3     6\n4     5    10\n5     7    14\n6    11    22\n7    13    26"
  },
  {
    "objectID": "topik3.html#pendahuluan",
    "href": "topik3.html#pendahuluan",
    "title": "Topik 3: Modelling",
    "section": "",
    "text": "Dalam bab ini, Anda akan mempelajari alat untuk bekerja dengan vektor logis. Vektor logis adalah jenis vektor yang paling sederhana karena setiap elemen hanya dapat menjadi salah satu dari tiga nilai yang mungkin: TRUE , FALSE , dan NA . Relatif jarang menemukan vektor logis dalam data mentah Anda, tetapi Anda akan membuat dan memanipulasinya.\n\n\nlibrary(tidyverse)\nlibrary(nycflights13)\n\nNamun, saat kita mulai membahas lebih banyak alat, tidak akan selalu ada contoh nyata yang sempurna. Jadi kita akan mulai membuat beberapa data dummy dengan c() :\n\nx &lt;- c(1, 2, 3, 5, 7, 11, 13)\nx * 2\n\n[1]  2  4  6 10 14 22 26\n\n\n\ndf &lt;- tibble(x)\ndf |&gt; \n  mutate(y = x * 2)\n\n# A tibble: 7 × 2\n      x     y\n  &lt;dbl&gt; &lt;dbl&gt;\n1     1     2\n2     2     4\n3     3     6\n4     5    10\n5     7    14\n6    11    22\n7    13    26"
  },
  {
    "objectID": "topik3.html#perbandingan",
    "href": "topik3.html#perbandingan",
    "title": "Topik 3: Modelling",
    "section": "Perbandingan",
    "text": "Perbandingan\nCara yang sangat umum untuk membuat vektor logis adalah melalui perbandingan numerik dengan &lt; , , , &gt;= != , , &lt;= &gt; dan == . Sejauh ini, kami sebagian besar telah membuat variabel logis sementara di dalam filter() - mereka dihitung, digunakan, dan kemudian dibuang. Misalnya, filter berikut menemukan semua keberangkatan siang hari yang tiba kira-kira tepat waktu:\n\nflights |&gt; \n  filter(dep_time &gt; 600 & dep_time &lt; 2000 & abs(arr_delay) &lt; 20)\n\n# A tibble: 172,286 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      601            600         1      844            850\n 2  2013     1     1      602            610        -8      812            820\n 3  2013     1     1      602            605        -3      821            805\n 4  2013     1     1      606            610        -4      858            910\n 5  2013     1     1      606            610        -4      837            845\n 6  2013     1     1      607            607         0      858            915\n 7  2013     1     1      611            600        11      945            931\n 8  2013     1     1      613            610         3      925            921\n 9  2013     1     1      615            615         0      833            842\n10  2013     1     1      622            630        -8     1017           1014\n# ℹ 172,276 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\nflights |&gt; \n  mutate(\n    daytime = dep_time &gt; 600 & dep_time &lt; 2000,\n    approx_ontime = abs(arr_delay) &lt; 20,\n    .keep = \"used\"\n  )\n\n# A tibble: 336,776 × 4\n   dep_time arr_delay daytime approx_ontime\n      &lt;int&gt;     &lt;dbl&gt; &lt;lgl&gt;   &lt;lgl&gt;        \n 1      517        11 FALSE   TRUE         \n 2      533        20 FALSE   FALSE        \n 3      542        33 FALSE   FALSE        \n 4      544       -18 FALSE   TRUE         \n 5      554       -25 FALSE   FALSE        \n 6      554        12 FALSE   TRUE         \n 7      555        19 FALSE   TRUE         \n 8      557       -14 FALSE   TRUE         \n 9      557        -8 FALSE   TRUE         \n10      558         8 FALSE   TRUE         \n# ℹ 336,766 more rows"
  },
  {
    "objectID": "topik4.html",
    "href": "topik4.html",
    "title": "Topik 4: Data Preparation",
    "section": "",
    "text": "Data preparation atau data wrangling adalah proses yang memakan waktu dan tenaga paling besar bagi seorang data analyst/scientist, yaitu sampai 80 persen. Detailnya, pembacaan sumber data memakan waktu sampai 20 persen, dan mengorganisasikan dan membersihkan data memakan waktu sampai 60 persen."
  },
  {
    "objectID": "topik4.html#konsep-data-preparation",
    "href": "topik4.html#konsep-data-preparation",
    "title": "Topik 4: Data Preparation",
    "section": "1. Konsep Data Preparation",
    "text": "1. Konsep Data Preparation\nDalam perjalanan Anda sebagai data analyst ataupun data engineer, pasti akan menghadapi kolom dengan sebagian data tidak terisi atau kosong. Ini disebut dengan missing value atau nilai yang hilang.\nMenyadari hal ini adalah satu tahap penting karena kita akan sadar bahwa hal tersebut adalah lumrah terjadi.\nTahap selanjutnya, kita perlu dua hal:\n\nBagaimana missing value direpresentasikan, ini penting sehingga kita bisa identifikasi apakah nilai hilang karena dari awal memang ga ada, apakah karena operasi matematika, dan lain-lain. Dengan mengetahui representasi ini, kita dapat melakukan sesuatu terhadapnya. Atau singkat dapat dikelola (manage) dengan baik.\nKedua hal tersebut sangat penting terutama bagi Anda yang berangkat dari SQL ataupun bahasa programming lain, dimana ada satu reprentasi missing value saja, yaitu NULL.\n\n\n1.2 NA (Not Available)\nNA adalah representasi utama dari missing value di R, dan merupakan suatu nilai atomik. Artinya posisi NA sama dengan contoh nilai-nilai atomik bilangan seperti 1, 2 atau 100. Juga sama dengan contoh nilai karakter seperti “a”, “b”, atau “g”.\nKarena angka dan karakter seperti contoh di atas sering disebut sebagai konstanta, maka NA adalah konstanta untuk missing value.\nSebagai contoh, jika kita ketikkan NA di console maka akan muncul hasil berikut :\n\n#Ketik nilai NA\nNA\n\n[1] NA\n\n#Tampilkan type dari NA dengan function typeof\ntypeof(NA)\n\n[1] \"logical\""
  },
  {
    "objectID": "topikcd1.html",
    "href": "topikcd1.html",
    "title": "Topik CD 1: Data Preparation",
    "section": "",
    "text": "Data preparation atau data wrangling adalah proses yang memakan waktu dan tenaga paling besar bagi seorang data analyst/scientist, yaitu sampai 80 persen. Detailnya, pembacaan sumber data memakan waktu sampai 20 persen, dan mengorganisasikan dan membersihkan data memakan waktu sampai 60 persen."
  },
  {
    "objectID": "topikcd1.html#konsep-data-preparation",
    "href": "topikcd1.html#konsep-data-preparation",
    "title": "Topik CD 1: Data Preparation",
    "section": "1. Konsep Data Preparation",
    "text": "1. Konsep Data Preparation\nDengan demikian, keterampilan untuk melakukan data preparation atau saat ini sering disebut sebagai data wrangling adalah mutlak untuk seluruh data scientist maupun data analyst.\nLalu apa saja yang dilakukan di proses ini?\nData wrangling adalah proses membaca data dari berbagai sumber dan mengubah isi dan struktur sehingga dapat digunakan untuk analisa.\nData cleansing biasanya melibatkan isi yang perlu diubah karena kadang data dimasukkan dari sistem yang berbeda. Bertolak belakang dengan anggapan bahwa dengan sistem, data akan bersih dan standar. Pada kenyataannya, bisnis berkembang lebih cepat dibandingkan dengan pembuatan sistem sehingga banyak design diubah di tengah jalan untuk mengakomodir hal ini, dan isi menjadi “berantakan”. Penyebab utama lainnya tentunya adalah sistem entri data yang manual.\nContoh yang paling sering adalah informasi pelanggan (customer). Di satu sistem namanya boleh memasukkan gelar, dan di satu sistem tidak boleh… jadinya ada dua nama yang serupa tapi tak sama sebagai berikut: \"Agus Cahyono S.Kom.\" dan \"Cahyono, Agus\"."
  },
  {
    "objectID": "topikcd1.html#missing-value",
    "href": "topikcd1.html#missing-value",
    "title": "Topik CD 1: Data Preparation",
    "section": "2. Missing Value",
    "text": "2. Missing Value\nDalam perjalanannya sebagai data analyst R, pasti akan menghadapi kolom dengan sebagian data tidak terisi atau kosong. Ini disebut dengan missing value atau nilai yang hilang.\nMenyadari hal ini adalah satu tahap penting karena kita akan sadar bahwa hal tersebut adalah lumrah terjadi.\nTahap selanjutnya, kita perlu dua hal:\n\nBagaimana missing value direpresentasikan, ini penting sehingga kita bisa identifikasi apakah nilai hilang karena dari awal memang ga ada, apakah karena operasi matematika, dan lain-lain. Dengan mengetahui representasi ini, kita dapat melakukan sesuatu terhadapnya. Atau singkat dapat dikelola (manage) dengan baik.\nKedua hal tersebut sangat penting terutama bagi Anda yang berangkat dari SQL ataupun bahasa programming lain, dimana ada satu reprentasi missing value saja, yaitu NULL.\n\n\n2.1 NA (Not Available)\nNA adalah representasi utama dari missing value di R, dan merupakan suatu nilai atomik. Artinya posisi NA sama dengan contoh nilai-nilai atomik bilangan seperti 1, 2 atau 100. Juga sama dengan contoh nilai karakter seperti “a”, “b”, atau “g”.\nKarena angka dan karakter seperti contoh di atas sering disebut sebagai konstanta, maka NA adalah konstanta untuk missing value.\nSebagai contoh, jika kita ketikkan NA di console maka akan muncul hasil berikut :\n\n#Ketik nilai NA\nNA\n\n[1] NA\n\n#Tampilkan type dari NA dengan function typeof\ntypeof(NA)\n\n[1] \"logical\"\n\n\nAngka [1] adalah posisi index dari konstanta (yang selalu bernilai 1) dan NA adalah nilainya sendiri. Dan NA ini secara default adalah representasi missing value untuk tipe data logical.\n*Fungsi is.na\nMisalkan untuk periksa suatu variabel x yang bernilai 3 – yang sebelumnya kita juga telah memasukkan angka yang sama\n\nx &lt;- 3\nx == 3\n\n[1] TRUE\n\n\nMaka hasil eksekusi perintah di atas akan menghasilkan nilai TRUE. Nah, ini tidak berlaku untuk NA. Jadi jika nilai x kita isi dan cek dengan cara yang sama sebagai berikut.\n\n#Buat variable x yang diisi dengan nilai NA\nx&lt;-NA\n#Pengecekan variable x dengan nilai NA menggunakan operator ==\nx == NA\n\n[1] NA\n\n\nNah, untuk mengatasi hal ini R menggunakan function bernama is.na dengan input berupa konstanta atau variabel. Mari kita ubah simbol == contoh di atas menggunakan function is.na seperti berikut.\n\n#Pengecekan variable x dengan nilai NA menggunakan function is.na\nis.na(x)\n\n[1] TRUE\n\n\nJika dihubungkan dengan tipe data lain di R seperti vector – dimana isinya harus seragam tipe datanya – maka vector tersebut hanya boleh berisi nilai TRUE dan FALSE.\nSebagai perbandingan, mari kita lihat contoh pembuatan satu vector dengan isi campuran dari integer dan logical berikut.\n\nc(1, 2, FALSE, 3)\n\n[1] 1 2 0 3\n\n\nTerlihat bahwa FALSE di atas dikonversi (beradaptasi) menjadi 0. Adaptasi ini juga disebut dengan coerce di dokumentasi R.\nLalu bagaimana dengan missing value NA?\nNA juga memiliki konstanta yang digunakan untuk beradaptasi, yaitu:\n\nNA_integer_ untuk representasi tipe data “integer”\nNA_real_ untuk representasi tipe data “double”\nNA_complex_ untuk representasi tipe data “complex”\nNA_character_ untuk representasi tipe data “character”\n\nDan semuanya memiliki nilai NA. Jika kita cek tipe data dari salah satu variasi missing value NA sebagai berikut :\n\ntypeof(NA_integer_)\n\n[1] \"integer\"\n\ntypeof(NA_real_)\n\n[1] \"double\"\n\ntypeof(NA_complex_)\n\n[1] \"complex\"\n\ntypeof(NA_character_)\n\n[1] \"character\"\n\nis.na(NA_integer_)\n\n[1] TRUE\n\nis.na(NA_real_)\n\n[1] TRUE\n\nis.na(NA_complex_)\n\n[1] TRUE\n\nis.na(NA_character_)\n\n[1] TRUE\n\n\n\n\n2.2 NULL\nNULL adalah nilai yang banyak digunakan di bahasa pemrograman lain ataupun SQL (Structured Query Language) untuk merepresentasikan objek yang tidak ada atau null object (missing object) atau nilai yang tidak ada (missing value).\nDi dalam R, missing value telah direpresentasikan dengan NA. Nah, untuk missing object inilah kita menggunakan NULL di R. Atau lebih detilnya, NULL adalah suatu object khusus di R yang digunakan untuk merepresentasikan nilai atau object yang tidak terdefinisikan.\n*Perbedaan NA dan NULL\nBerikut adalah contoh variabel vector yang mengandung 7 elemen termasuk NA dan NULL.\n\n#Membuat vector dengan 7 elemen termasuk NA dan NULL\nisi.vector &lt;- c(1,2,3,NA, 5, NULL, 7)\n\n#Membuat vector dengan 7 elemen termasuk NA dan NULL isi.vector &lt;- c(1,2,3,NA, 5, NULL, 7)\n\n#Menghitung jumlah elemen dari isi.vector\nlength(isi.vector)\n\n[1] 6\n\n\nHasilnya adalah 6, padahal kita memasukkan 7 elemen. Dengan demikian terlihat bahwa NULL memang mewakili undefined object dan tidak dianggap oleh vector. Dengan demikian tidak menjadi bagian dari vector.\n\n\n2.3 NaN (Not A Number)\nNaN adalah representasi khusus untuk angka. Singkatan dari Not a Number, ini adalah representasi operasi matematika yang tidak bisa diwakili oleh angka apapun. Sering sekali bisa dianggap missing value tapi untuk hasil perhitungan.\nContoh perhitungan yang menghasilkan NaN adalah ketika angka 0 dibagi dengan 0. Ini tidak bisa dirasionalkan, sehingga NaN adalah representasi yang paling tepat.\n\n#Hitung kalkulasi 0 dibagi dengan 0\n0/0\n\n[1] NaN"
  },
  {
    "objectID": "topikcd1.html#factor",
    "href": "topikcd1.html#factor",
    "title": "Topik CD 1: Data Preparation",
    "section": "3. Factor",
    "text": "3. Factor\nFactor adalah suatu variable di R yang menyimpan daftar nilai-nilai kategori atau nominal.\nBerikut adalah beberapa contoh daftar nilai kategori yang bisa disimpan dalam factor:\n\nNama bulan: Januari, Februari, Maret.\nJenis pakaian: Atasan, Jeans, Rok, Kaos.\nSatuan berat: kg, mg, ton, kwintal.\ndan lain-lain.\n\nDengan demikian,  factor menyimpan nilai-nilai yang terbatas (diskrit). Nama bulan terdiri dari 12 nilai yaitu dari Januari s/d Desember. Jika tidak terbatas atau kontinu, misalkan angka berat seperti 64.5 kg, 11.2 kg, 80.39 kg, dan seterusnya – maka ini tidak bisa digolongkan sebagai factor.\nKarena sifat data dengan nilai terbatas ini, factor sering disebut juga sebagai categorical variable atau variabel kategorik.\nKenapa Factor, dan Kapan Sebaiknya Digunakan?\nFactor adalah variabel yang sangat penting untuk digunakan pada kasus analisa statistik, menggambar grafik (plotting), pemodelan regresi ataupun machine learning.\nSebagai contoh kasus, maka fungsi plotting pada library ggplot2 akan mampu mengambil variabel sebagai legend jika direpresentasikan sebagai factor.\n\nBanyaknya function yang menggunakan factor dikarenakan dengan adanya factor ini maka nilai kategoris lebih mudah diolah dan dianalisa. Sehingga kita sebaiknya menggunakan factor ketika kita ingin :\n\nmemastikan bahwa variable yang kita gunakan memiliki data terbatas (diskrit)\ndan menginformasikan kepastian ini kepada function atau model analisa yang kita gunakan\n\n*NA, NaN, NULL pada saat pembentukan Factor\nNA, NULL dan NaN adalah tiga nilai khusus untuk merepresentasikan missing values atau nilai yang hilang di R. Jika ketiganya dimasukkan ke dalam factor melalui deklarasi vector, maka prinsip berikut tetap berlaku:\n\nNa dan NaN akan menjadi bagian dari isi factor,\nNULL akan dihilangkan Hanya NaN yang akan dikenali sebagai levels\n\nSebagai contoh, jika kita membuat factor dengan nilai berikut.\n\n#Buatlah variable factor.lokasi dengan isi berupa vector c(\"Bandung\", \"Jakarta\", NA, \"Jakarta\", NaN, \"Medan\", NULL, NULL, \"Bandung\")\n\nfactor.lokasi &lt;- factor(c(\"Bandung\", \"Jakarta\", NA, \"Jakarta\", NaN, \"Medan\", NULL, NULL, \"Bandung\"))\n\n#Tampilkan factor.lokasi\nfactor.lokasi\n\n[1] Bandung Jakarta &lt;NA&gt;    Jakarta NaN     Medan   Bandung\nLevels: Bandung Jakarta Medan NaN\n\n\nTerlihat nilai NULL dibuang di tampilan isi factor, kemudian pada levels nilai NA juga dibuang.\n\n#Tampilkan panjang dari variable factor.lokasi\nlength(factor.lokasi)\n\n[1] 7\n\n\nHanya nilai NULL yang tidak terhitung sebagai bagian dari factor.\nUrutan levels pada Factor\n\nnama.bulan &lt;- factor(c(\"Februari\",\"April\",\"Januari\", \"Maret\",\"Januari\",\"Maret\"))\n\nnama.bulan\n\n[1] Februari April    Januari  Maret    Januari  Maret   \nLevels: April Februari Januari Maret\n\n\nData pada levels disesuaikan dengan abjad dan hanya menampilkan satu jenis data unik.\nMaka untuk mengurutkan sesuai keinginan kita dapat memakai :\n\nnama.bulan &lt;- factor(c(\"Februari\",\"April\",\"Januari\", \"Maret\",\"Januari\",\"Maret\")\n,levels = c(\"Januari\",\"Februari\",\"Maret\", \"April\"))\n\n#&gt; Tampilkan Nama bulan sesuai kalender\nnama.bulan\n\n[1] Februari April    Januari  Maret    Januari  Maret   \nLevels: Januari Februari Maret April\n\n\n\nlibrary(openxlsx)\n#Membaca dataset dengan read.xlsx dan dimasukkan ke variable penduduk.dki\npenduduk.dki.xlsx &lt;- read.xlsx(xlsxFile=\"https://storage.googleapis.com/dqlab-dataset/dkikepadatankelurahan2013.xlsx\")\nstr(penduduk.dki.xlsx)\n\n'data.frame':   267 obs. of  25 variables:\n $ TAHUN               : num  2013 2013 2013 2013 2013 ...\n $ NAMA.PROVINSI       : chr  \"PROVINSI DKI JAKARTA\" \"PROVINSI DKI JAKARTA\" \"PROVINSI DKI JAKARTA\" \"PROVINSI DKI JAKARTA\" ...\n $ NAMA.KABUPATEN/KOTA : chr  \"KAB.ADM.KEP.SERIBU\" \"KAB.ADM.KEP.SERIBU\" \"KAB.ADM.KEP.SERIBU\" \"KAB.ADM.KEP.SERIBU\" ...\n $ NAMA.KECAMATAN      : chr  \"KEP. SERIBU UTR\" \"KEP. SERIBU UTR\" \"KEP. SERIBU UTR\" \"KEP. SERIBU SLT\" ...\n $ NAMA.KELURAHAN      : chr  \"P. PANGGANG\" \"P. KELAPA\" \"P. HARAPAN\" \"P. UNTUNG JAWA\" ...\n $ LUAS.WILAYAH.(KM2)  : num  0.91 3.76 3.59 0.59 1.57 1.39 2.58 1.26 1.12 1.14 ...\n $ KEPADATAN.(JIWA/KM2): num  6779 1705 628 3625 3084 ...\n $ 35-39.Laki-Laki     : num  231 84 255 199 98 113 166 850 954 752 ...\n $ 35-39.Perempuan     : num  235 88 238 185 75 112 174 748 920 675 ...\n $ 40-44.Laki-Laki     : num  233 99 232 178 73 108 130 749 914 691 ...\n $ 40-44.Perempuan     : num  210 88 234 176 94 80 165 798 943 691 ...\n $ 45-49.Laki-Laki     : num  171 72 212 162 67 66 176 779 871 659 ...\n $ 45-49.Perempuan     : num  158 63 193 139 69 62 162 766 823 631 ...\n $ 50-54.Laki-Laki     : num  137 34 150 100 60 61 129 715 736 611 ...\n $ 50-54.Perempuan     : num  126 29 161 119 40 63 97 662 679 514 ...\n $ 55-59.Laki-Laki     : num  98 30 139 97 37 37 108 614 680 539 ...\n $ 55-59.Perempuan     : num  106 39 101 83 32 36 90 537 510 466 ...\n $ 60-64.Laki-Laki     : num  72 29 73 58 22 32 88 555 544 428 ...\n $ 60-64.Perempuan     : num  65 24 56 56 13 26 42 343 421 279 ...\n $ 65-69.Laki-Laki     : num  36 12 18 40 18 21 68 413 398 328 ...\n $ 65-69.Perempuan     : num  33 21 35 54 15 14 34 215 235 160 ...\n $ 70-74.Laki-Laki     : num  33 13 24 26 10 17 37 259 241 215 ...\n $ 70-74.Perempuan     : num  20 5 25 27 18 11 32 142 132 116 ...\n $ &gt;75.Laki-Laki       : num  13 5 18 16 11 8 34 214 215 150 ...\n $ &gt;75.Perempuan       : num  27 8 26 13 17 7 23 165 159 121 ..."
  },
  {
    "objectID": "datapreparation.html",
    "href": "datapreparation.html",
    "title": "Topik 2 | Data Preparation",
    "section": "",
    "text": "Data preparation atau data wrangling adalah proses yang memakan waktu dan tenaga paling besar bagi seorang data analyst/scientist, yaitu sampai 80 persen. Detailnya, pembacaan sumber data memakan waktu sampai 20 persen, dan mengorganisasikan dan membersihkan data memakan waktu sampai 60 persen."
  },
  {
    "objectID": "datapreparation.html#konsep-data-preparation",
    "href": "datapreparation.html#konsep-data-preparation",
    "title": "Topik 2 | Data Preparation",
    "section": "1. Konsep Data Preparation",
    "text": "1. Konsep Data Preparation\nDengan demikian, keterampilan untuk melakukan data preparation atau saat ini sering disebut sebagai data wrangling adalah mutlak untuk seluruh data scientist maupun data analyst.\nLalu apa saja yang dilakukan di proses ini?\nData wrangling adalah proses membaca data dari berbagai sumber dan mengubah isi dan struktur sehingga dapat digunakan untuk analisa.\nData cleansing biasanya melibatkan isi yang perlu diubah karena kadang data dimasukkan dari sistem yang berbeda. Bertolak belakang dengan anggapan bahwa dengan sistem, data akan bersih dan standar. Pada kenyataannya, bisnis berkembang lebih cepat dibandingkan dengan pembuatan sistem sehingga banyak design diubah di tengah jalan untuk mengakomodir hal ini, dan isi menjadi “berantakan”. Penyebab utama lainnya tentunya adalah sistem entri data yang manual.\nContoh yang paling sering adalah informasi pelanggan (customer). Di satu sistem namanya boleh memasukkan gelar, dan di satu sistem tidak boleh… jadinya ada dua nama yang serupa tapi tak sama sebagai berikut: \"Agus Cahyono S.Kom.\" dan \"Cahyono, Agus\"."
  },
  {
    "objectID": "datapreparation.html#missing-value",
    "href": "datapreparation.html#missing-value",
    "title": "Topik 2 | Data Preparation",
    "section": "2. Missing Value",
    "text": "2. Missing Value\nDalam perjalanannya sebagai data analyst R, pasti akan menghadapi kolom dengan sebagian data tidak terisi atau kosong. Ini disebut dengan missing value atau nilai yang hilang.\nMenyadari hal ini adalah satu tahap penting karena kita akan sadar bahwa hal tersebut adalah lumrah terjadi.\nTahap selanjutnya, kita perlu dua hal:\n\nBagaimana missing value direpresentasikan, ini penting sehingga kita bisa identifikasi apakah nilai hilang karena dari awal memang ga ada, apakah karena operasi matematika, dan lain-lain.\nDengan mengetahui representasi ini, kita dapat melakukan sesuatu terhadapnya. Atau singkat dapat dikelola (manage) dengan baik.\n\nKedua hal tersebut sangat penting terutama bagi Anda yang berangkat dari SQL ataupun bahasa programming lain, dimana ada satu reprentasi missing value saja, yaitu NULL.\n\n2.1 NA (Not Available)\nNA adalah representasi utama dari missing value di R, dan merupakan suatu nilai atomik. Artinya posisi NA sama dengan contoh nilai-nilai atomik bilangan seperti 1, 2 atau 100. Juga sama dengan contoh nilai karakter seperti “a”, “b”, atau “g”.\nKarena angka dan karakter seperti contoh di atas sering disebut sebagai konstanta, maka NA adalah konstanta untuk missing value.\nSebagai contoh, jika kita ketikkan NA di console maka akan muncul hasil berikut :\n\n#Ketik nilai NA\nNA\n\n[1] NA\n\n#Tampilkan type dari NA dengan function typeof\ntypeof(NA)\n\n[1] \"logical\"\n\n\nAngka [1] adalah posisi index dari konstanta (yang selalu bernilai 1) dan NA adalah nilainya sendiri. Dan NA ini secara default adalah representasi missing value untuk tipe data logical.\n*Fungsi is.na\nMisalkan untuk periksa suatu variabel x yang bernilai 3 – yang sebelumnya kita juga telah memasukkan angka yang sama\n\nx &lt;- 3\nx == 3\n\n[1] TRUE\n\n\nMaka hasil eksekusi perintah di atas akan menghasilkan nilai TRUE. Nah, ini tidak berlaku untuk NA. Jadi jika nilai x kita isi dan cek dengan cara yang sama sebagai berikut.\n\n#Buat variable x yang diisi dengan nilai NA\nx&lt;-NA\n#Pengecekan variable x dengan nilai NA menggunakan operator ==\nx == NA\n\n[1] NA\n\n\nNah, untuk mengatasi hal ini R menggunakan function bernama is.na dengan input berupa konstanta atau variabel. Mari kita ubah simbol == contoh di atas menggunakan function is.na seperti berikut.\n\n#Pengecekan variable x dengan nilai NA menggunakan function is.na\nis.na(x)\n\n[1] TRUE\n\n\nJika dihubungkan dengan tipe data lain di R seperti vector – dimana isinya harus seragam tipe datanya – maka vector tersebut hanya boleh berisi nilai TRUE dan FALSE.\nSebagai perbandingan, mari kita lihat contoh pembuatan satu vector dengan isi campuran dari integer dan logical berikut.\n\nc(1, 2, FALSE, 3)\n\n[1] 1 2 0 3\n\n\nTerlihat bahwa FALSE di atas dikonversi (beradaptasi) menjadi 0. Adaptasi ini juga disebut dengan coerce di dokumentasi R.\nLalu bagaimana dengan missing value NA?\nNA juga memiliki konstanta yang digunakan untuk beradaptasi, yaitu:\n\nNA_integer_ untuk representasi tipe data “integer”\nNA_real_ untuk representasi tipe data “double”\nNA_complex_ untuk representasi tipe data “complex”\nNA_character_ untuk representasi tipe data “character”\n\nDan semuanya memiliki nilai NA. Jika kita cek tipe data dari salah satu variasi missing value NA sebagai berikut :\n\ntypeof(NA_integer_)\ntypeof(NA_real_)\ntypeof(NA_complex_)\ntypeof(NA_character_)\nis.na(NA_integer_)\nis.na(NA_real_)\nis.na(NA_complex_)\nis.na(NA_character_)\n\nMaka hasilnya akan seperti ini :\n[1] \"integer\"\n[1] \"double\"\n[1] \"complex\"\n[1] \"character\"\n[1] TRUE\n[1] TRUE\n[1] TRUE\n[1] TRUE\n\n\n2.2 NULL\nNULL adalah nilai yang banyak digunakan di bahasa pemrograman lain ataupun SQL (Structured Query Language) untuk merepresentasikan objek yang tidak ada atau null object (missing object) atau nilai yang tidak ada (missing value).\nDi dalam R, missing value telah direpresentasikan dengan NA. Nah, untuk missing object inilah kita menggunakan NULL di R. Atau lebih detilnya, NULL adalah suatu object khusus di R yang digunakan untuk merepresentasikan nilai atau object yang tidak terdefinisikan.\n*Perbedaan NA dan NULL\nBerikut adalah contoh variabel vector yang mengandung 7 elemen termasuk NA dan NULL.\n\n#Membuat vector dengan 7 elemen termasuk NA dan NULL\nisi.vector &lt;- c(1,2,3,NA, 5, NULL, 7)\n\n#Membuat vector dengan 7 elemen termasuk NA dan NULL isi.vector &lt;- c(1,2,3,NA, 5, NULL, 7)\n\n#Menghitung jumlah elemen dari isi.vector\nlength(isi.vector)\n\n[1] 6\n\n\nHasilnya adalah 6, padahal kita memasukkan 7 elemen. Dengan demikian terlihat bahwa NULL memang mewakili undefined object dan tidak dianggap oleh vector. Dengan demikian tidak menjadi bagian dari vector.\n\n\n2.3 NaN (Not A Number)\nNaN adalah representasi khusus untuk angka. Singkatan dari Not a Number, ini adalah representasi operasi matematika yang tidak bisa diwakili oleh angka apapun. Sering sekali bisa dianggap missing value tapi untuk hasil perhitungan.\nContoh perhitungan yang menghasilkan NaN adalah ketika angka 0 dibagi dengan 0. Ini tidak bisa dirasionalkan, sehingga NaN adalah representasi yang paling tepat.\n\n#Hitung kalkulasi 0 dibagi dengan 0\n0/0\n\n[1] NaN"
  },
  {
    "objectID": "datapreparation.html#factor",
    "href": "datapreparation.html#factor",
    "title": "Topik 2 | Data Preparation",
    "section": "3. Factor",
    "text": "3. Factor\nFactor adalah suatu variable di R yang menyimpan daftar nilai-nilai kategori atau nominal.\nBerikut adalah beberapa contoh daftar nilai kategori yang bisa disimpan dalam factor:\n\nNama bulan: Januari, Februari, Maret.\nJenis pakaian: Atasan, Jeans, Rok, Kaos.\nSatuan berat: kg, mg, ton, kwintal.\ndan lain-lain.\n\nDengan demikian,  factor menyimpan nilai-nilai yang terbatas (diskrit). Nama bulan terdiri dari 12 nilai yaitu dari Januari s/d Desember. Jika tidak terbatas atau kontinu, misalkan angka berat seperti 64.5 kg, 11.2 kg, 80.39 kg, dan seterusnya – maka ini tidak bisa digolongkan sebagai factor.\nKarena sifat data dengan nilai terbatas ini, factor sering disebut juga sebagai categorical variable atau variabel kategorik.\nKenapa Factor, dan Kapan Sebaiknya Digunakan?\nFactor adalah variabel yang sangat penting untuk digunakan pada kasus analisa statistik, menggambar grafik (plotting), pemodelan regresi ataupun machine learning.\nSebagai contoh kasus, maka fungsi plotting pada library ggplot2 akan mampu mengambil variabel sebagai legend jika direpresentasikan sebagai factor.\n\nBanyaknya function yang menggunakan factor dikarenakan dengan adanya factor ini maka nilai kategoris lebih mudah diolah dan dianalisa. Sehingga kita sebaiknya menggunakan factor ketika kita ingin :\n\nmemastikan bahwa variable yang kita gunakan memiliki data terbatas (diskrit)\ndan menginformasikan kepastian ini kepada function atau model analisa yang kita gunakan\n\n*NA, NaN, NULL pada saat pembentukan Factor\nNA, NULL dan NaN adalah tiga nilai khusus untuk merepresentasikan missing values atau nilai yang hilang di R. Jika ketiganya dimasukkan ke dalam factor melalui deklarasi vector, maka prinsip berikut tetap berlaku:\n\nNa dan NaN akan menjadi bagian dari isi factor,\nNULL akan dihilangkan Hanya NaN yang akan dikenali sebagai levels\n\nSebagai contoh, jika kita membuat factor dengan nilai berikut.\n\n#Buatlah variable factor.lokasi dengan isi berupa vector c(\"Bandung\", \"Jakarta\", NA, \"Jakarta\", NaN, \"Medan\", NULL, NULL, \"Bandung\")\n\nfactor.lokasi &lt;- factor(c(\"Bandung\", \"Jakarta\", NA, \"Jakarta\", NaN, \"Medan\", NULL, NULL, \"Bandung\"))\n\n#Tampilkan factor.lokasi\nfactor.lokasi\n\n[1] Bandung Jakarta &lt;NA&gt;    Jakarta NaN     Medan   Bandung\nLevels: Bandung Jakarta Medan NaN\n\n\nTerlihat nilai NULL dibuang di tampilan isi factor, kemudian pada levels nilai NA juga dibuang.\n\n#Tampilkan panjang dari variable factor.lokasi\nlength(factor.lokasi)\n\n[1] 7\n\n\nHanya nilai NULL yang tidak terhitung sebagai bagian dari factor.\nUrutan levels pada Factor\n\nnama.bulan &lt;- factor(c(\"Februari\",\"April\",\"Januari\", \"Maret\",\"Januari\",\"Maret\"))\n\nnama.bulan\n\n[1] Februari April    Januari  Maret    Januari  Maret   \nLevels: April Februari Januari Maret\n\n\nData pada levels disesuaikan dengan abjad dan hanya menampilkan satu jenis data unik.\nMaka untuk mengurutkan sesuai keinginan kita dapat memakai :\n\nnama.bulan &lt;- factor(c(\"Februari\",\"April\",\"Januari\", \"Maret\",\"Januari\",\"Maret\")\n,levels = c(\"Januari\",\"Februari\",\"Maret\", \"April\"))\n\n#&gt; Tampilkan Nama bulan sesuai kalender\nnama.bulan\n\n[1] Februari April    Januari  Maret    Januari  Maret   \nLevels: Januari Februari Maret April"
  },
  {
    "objectID": "datapreparation.html#profiling-datasets",
    "href": "datapreparation.html#profiling-datasets",
    "title": "Topik 2 | Data Preparation",
    "section": "4. Profiling Datasets",
    "text": "4. Profiling Datasets\nMisal Dataset yang akan kita gunakan adalah data wilayah dan kepadatan kependudukan pemerintah provinsi DKI Jakarta tahun 2013.\nSumber dataset ini dapat didownload dari data.go.id atau dengan url berikut:\nhttps://storage.googleapis.com/dqlab-dataset/datakependudukandki-dqlab.csv\nData kependudukan dipilih karena hampir seluruh organisasi, termasuk bisnis dan institusi pemerintah memerlukan ini untuk mengambil keputusan strategik. Sebagai contoh,\n\ndimana saya perlu membuka toko atau kantor cabang?\nProduk apa yang bakal laku di area tersebut?\n\nKemudian struktur dari dataset ini perlu diolah lebih lanjut agar optimal. Atas dasar kedua alasan inilah, data kependudukan dipilih untuk data wrangling dengan R.\nDan ini adalah tampilan jika data tersebut dibuka di aplikasi Excel :\n\nTerlihat bahwa ada 12 kolom (header dengan huruf H s/d S) yang kosong. Ini akan terbaca sebagai missing value.\nData tersebut memiliki 25 variable kolom dengan penjelasan sebagai berikut:\n\nTAHUN: Tahun\nNAMA PROVINSI: Nama provinsi di DKI Jakarta, dan nilainya hanya ada satu\nNAMA KABUPATEN/KOTA: Nama kabupaten/kota di DKI Jakarta\nNAMA KECAMATAN: Nama kecamatan di DKI Jakarta\nNAMA KELURAHAN: Nama kelurahan di DKI Jakarta\nLUAS WILAYAH (KM2): Luas wilayah (km persegi)\nKEPADATAN (JIWA/KM2): Kepadatan penduduk (jiwa/km2)\n35-39 Laki-Laki: Jumlah penduduk laki-laki dengan rentang umur 35-39 tahun\n35-39 Perempuan: Jumlah penduduk perempuan dengan rentang umur 35-39 tahun\n40-44 Laki-Laki: Jumlah penduduk laki-laki dengan rentang umur 40-44 tahun\n40-44 Perempuan: Jumlah penduduk perempuan dengan rentang umur 40-44 tahun\n45-49 Laki-Laki: Jumlah penduduk laki-laki dengan rentang umur 45-49 tahun\n45-49 Perempuan: Jumlah penduduk perempuan dengan rentang umur 45-49 tahun\n50-54 Laki-Laki: Jumlah penduduk laki-laki dengan rentang umur 50-54 tahun\n50-54 Perempuan: Jumlah penduduk perempuan dengan rentang umur 50-54 tahun\n55-59 Laki-Laki: Jumlah penduduk laki-laki dengan rentang umur 55-59 tahun\n55-59 Perempuan: Jumlah penduduk perempuan dengan rentang umur 55-59 tahun\n60-64 Laki-Laki: Jumlah penduduk laki-laki dengan rentang umur 60-64 tahun\n60-64 Perempuan: Jumlah penduduk perempuan dengan rentang umur 60-64 tahun\n65-69 Laki-Laki: Jumlah penduduk laki-laki dengan rentang umur 65-69 tahun\n65-69 Perempuan: Jumlah penduduk perempuan dengan rentang umur 65-69 tahun\n70-74 Laki-Laki: Jumlah penduduk laki-laki dengan rentang umur 70-74 tahun\n70-74 Perempuan: Jumlah penduduk perempuan dengan rentang umur 70-74 tahun\n&gt;75 Laki-Laki: Jumlah penduduk laki-laki dengan rentang umur di atas 75  tahun\n&gt;75 Perempuan: Jumlah penduduk perempuan dengan rentang umur di atas 75 tahun  \n\nHampir seluruh kolom berisi nilai angka, kecuali empat kolom berikut: NAMA PROVINSI, NAMA KABUPATEN/KOTA, NAMA KECAMATAN, dan NAMA KELURAHAN.\n\n4.1 Fungsi str\nAdalah fungsi untuk mengenal atau melakukan profile tiap dataset yang sudah dibaca ke dalam R – dan secara sederhana di R dapat kita lakukan dengan perintah str.\nstr akan menyajikan informasi tiap kolom dataset dalam format yang compact – satu baris informasi saja per row. Pendekatan singkat dan jelas ini membuat str menjadi function favorit dan efektif untuk mengenal data di tahap awal.\n\n#Membaca dataset dengan read.csv dan dimasukkan ke variable penduduk.dki\npenduduk.dki &lt;- read.csv(\"https://storage.googleapis.com/dqlab-dataset/dkikepadatankelurahan2013.csv\", sep=\",\")\n\n#&gt; Tampilkan str data\nstr(penduduk.dki)\n\n'data.frame':   267 obs. of  37 variables:\n $ TAHUN               : int  2013 2013 2013 2013 2013 2013 2013 2013 2013 2013 ...\n $ NAMA.PROVINSI       : chr  \"PROVINSI DKI JAKARTA\" \"PROVINSI DKI JAKARTA\" \"PROVINSI DKI JAKARTA\" \"PROVINSI DKI JAKARTA\" ...\n $ NAMA.KABUPATEN.KOTA : chr  \"KAB.ADM.KEP.SERIBU\" \"KAB.ADM.KEP.SERIBU\" \"KAB.ADM.KEP.SERIBU\" \"KAB.ADM.KEP.SERIBU\" ...\n $ NAMA.KECAMATAN      : chr  \"KEP. SERIBU UTR\" \"KEP. SERIBU UTR\" \"KEP. SERIBU UTR\" \"KEP. SERIBU SLT\" ...\n $ NAMA.KELURAHAN      : chr  \"P. PANGGANG\" \"P. KELAPA\" \"P. HARAPAN\" \"P. UNTUNG JAWA\" ...\n $ LUAS.WILAYAH..KM2.  : num  0.91 3.76 3.59 0.59 1.57 1.39 2.58 1.26 1.12 1.14 ...\n $ KEPADATAN..JIWA.KM2.: int  6779 1705 628 3625 3084 1968 1350 14584 18987 14465 ...\n $ X                   : logi  NA NA NA NA NA NA ...\n $ X.1                 : logi  NA NA NA NA NA NA ...\n $ X.2                 : logi  NA NA NA NA NA NA ...\n $ X.3                 : logi  NA NA NA NA NA NA ...\n $ X.4                 : logi  NA NA NA NA NA NA ...\n $ X.5                 : logi  NA NA NA NA NA NA ...\n $ X.6                 : logi  NA NA NA NA NA NA ...\n $ X.7                 : logi  NA NA NA NA NA NA ...\n $ X.8                 : logi  NA NA NA NA NA NA ...\n $ X.9                 : logi  NA NA NA NA NA NA ...\n $ X.10                : logi  NA NA NA NA NA NA ...\n $ X.11                : logi  NA NA NA NA NA NA ...\n $ X35.39.Laki.Laki    : int  231 84 255 199 98 113 166 850 954 752 ...\n $ X35.39.Perempuan    : int  235 88 238 185 75 112 174 748 920 675 ...\n $ X40.44.Laki.Laki    : int  233 99 232 178 73 108 130 749 914 691 ...\n $ X40.44.Perempuan    : int  210 88 234 176 94 80 165 798 943 691 ...\n $ X45.49.Laki.Laki    : int  171 72 212 162 67 66 176 779 871 659 ...\n $ X45.49.Perempuan    : int  158 63 193 139 69 62 162 766 823 631 ...\n $ X50.54.Laki.Laki    : int  137 34 150 100 60 61 129 715 736 611 ...\n $ X50.54.Perempuan    : int  126 29 161 119 40 63 97 662 679 514 ...\n $ X55.59.Laki.Laki    : int  98 30 139 97 37 37 108 614 680 539 ...\n $ X55.59.Perempuan    : int  106 39 101 83 32 36 90 537 510 466 ...\n $ X60.64.Laki.Laki    : int  72 29 73 58 22 32 88 555 544 428 ...\n $ X60.64.Perempuan    : int  65 24 56 56 13 26 42 343 421 279 ...\n $ X65.69.Laki.Laki    : int  36 12 18 40 18 21 68 413 398 328 ...\n $ X65.69.Perempuan    : int  33 21 35 54 15 14 34 215 235 160 ...\n $ X70.74.Laki.Laki    : int  33 13 24 26 10 17 37 259 241 215 ...\n $ X70.74.Perempuan    : int  20 5 25 27 18 11 32 142 132 116 ...\n $ X.75.Laki.Laki      : int  13 5 18 16 11 8 34 214 215 150 ...\n $ X.75..Perempuan     : int  27 8 26 13 17 7 23 165 159 121 ...\n\n\nBerikut adalah penjelasan dari hasil profiling tersebut:\n\n'data.frame': merupakan tipe data dari variable penduduk.dki.\n267 obs: menunjukkan adanya 267 total baris data (row) dari dataset ini.\n37 variables: menunjukkan adanya 37 kolom data pada dataset ini.\n\n\n\n4.2 Fungsi Summary\nKita dapat juga menggunakan function summary untuk melihat kondisi dataset kita dalam bentuk ringkasan yang lebih detil.\nSebagai contoh, untuk melihat summary dari variable penduduk.dki maka kita gunakan konstruksi berikut.\n\n#Membaca dataset dengan read.csv dan dimasukkan ke variable penduduk.dki\npenduduk.dki &lt;- read.csv(\"https://storage.googleapis.com/dqlab-dataset/dkikepadatankelurahan2013.csv\", sep=\",\")\n\nsummary(penduduk.dki)\n\n     TAHUN      NAMA.PROVINSI      NAMA.KABUPATEN.KOTA NAMA.KECAMATAN    \n Min.   :2013   Length:267         Length:267          Length:267        \n 1st Qu.:2013   Class :character   Class :character    Class :character  \n Median :2013   Mode  :character   Mode  :character    Mode  :character  \n Mean   :2013                                                            \n 3rd Qu.:2013                                                            \n Max.   :2013                                                            \n NAMA.KELURAHAN     LUAS.WILAYAH..KM2. KEPADATAN..JIWA.KM2.    X          \n Length:267         Min.   : 0.270     Min.   :  628        Mode:logical  \n Class :character   1st Qu.: 0.965     1st Qu.:11734        NA's:267      \n Mode  :character   Median : 1.800     Median :17304                      \n                    Mean   : 2.487     Mean   :21974                      \n                    3rd Qu.: 3.315     3rd Qu.:29226                      \n                    Max.   :13.070     Max.   :94166                      \n   X.1            X.2            X.3            X.4            X.5         \n Mode:logical   Mode:logical   Mode:logical   Mode:logical   Mode:logical  \n NA's:267       NA's:267       NA's:267       NA's:267       NA's:267      \n                                                                           \n                                                                           \n                                                                           \n                                                                           \n   X.6            X.7            X.8            X.9            X.10        \n Mode:logical   Mode:logical   Mode:logical   Mode:logical   Mode:logical  \n NA's:267       NA's:267       NA's:267       NA's:267       NA's:267      \n                                                                           \n                                                                           \n                                                                           \n                                                                           \n   X.11         X35.39.Laki.Laki X35.39.Perempuan X40.44.Laki.Laki\n Mode:logical   Min.   :   84    Min.   :  75     Min.   :  73    \n NA's:267       1st Qu.: 1186    1st Qu.:1062     1st Qu.:1023    \n                Median : 1880    Median :1631     Median :1576    \n                Mean   : 2264    Mean   :1741     Mean   :1676    \n                3rd Qu.: 2768    3rd Qu.:2213     3rd Qu.:2112    \n                Max.   :13011    Max.   :7488     Max.   :7243    \n X40.44.Perempuan X45.49.Laki.Laki X45.49.Perempuan X50.54.Laki.Laki\n Min.   :   80    Min.   :  66.0   Min.   :  62     Min.   :   34   \n 1st Qu.: 1084    1st Qu.: 957.5   1st Qu.: 886     1st Qu.:  790   \n Median : 1714    Median :1404.0   Median :1315     Median : 1216   \n Mean   : 2332    Mean   :1643.7   Mean   :1577     Mean   : 2259   \n 3rd Qu.: 2782    3rd Qu.:1949.0   3rd Qu.:1867     3rd Qu.: 2624   \n Max.   :14731    Max.   :8822.0   Max.   :8352     Max.   :17174   \n X50.54.Perempuan X55.59.Laki.Laki X55.59.Perempuan X60.64.Laki.Laki\n Min.   :  29.0   Min.   :  30.0   Min.   :   32    Min.   :  22.0  \n 1st Qu.: 712.5   1st Qu.: 595.5   1st Qu.:  557    1st Qu.: 419.5  \n Median :1107.0   Median : 909.0   Median :  889    Median : 650.0  \n Mean   :1336.1   Mean   :1178.6   Mean   : 1867    Mean   : 981.7  \n 3rd Qu.:1671.5   3rd Qu.:1405.5   3rd Qu.: 2342    3rd Qu.:1186.5  \n Max.   :7480.0   Max.   :6846.0   Max.   :14326    Max.   :6333.0  \n X60.64.Perempuan X65.69.Laki.Laki X65.69.Perempuan X70.74.Laki.Laki\n Min.   :  13.0   Min.   :   12    Min.   :  14.0   Min.   :  10.0  \n 1st Qu.: 366.0   1st Qu.:  253    1st Qu.: 215.5   1st Qu.: 170.0  \n Median : 587.0   Median :  413    Median : 354.0   Median : 285.0  \n Mean   : 876.7   Mean   : 1403    Mean   : 683.6   Mean   : 607.0  \n 3rd Qu.:1052.5   3rd Qu.: 2098    3rd Qu.: 928.5   3rd Qu.: 836.5  \n Max.   :5476.0   Max.   :11809    Max.   :4758.0   Max.   :4475.0  \n X70.74.Perempuan X.75.Laki.Laki   X.75..Perempuan \n Min.   :   5     Min.   :   5.0   Min.   :   7.0  \n 1st Qu.: 145     1st Qu.: 116.5   1st Qu.: 121.5  \n Median : 260     Median : 200.0   Median : 204.0  \n Mean   :1083     Mean   : 484.6   Mean   : 480.3  \n 3rd Qu.:1784     3rd Qu.: 716.0   3rd Qu.: 675.5  \n Max.   :9233     Max.   :3959.0   Max.   :3526.0  \n\n\nUntuk angka, maka akan muncul statistik minimum, maximum, mean, meadian, 1st quantile, dan 3rd quantile. Sedangkan untuk nilai lain akan muncul jumlahnya di dataset.\nDengan demikian, kita menjadi aware atau lebih perhatian karena perilaku yang berbeda ketika menangani kolom kosong dan juga pada saat penamaan variable kolom sehingga kita akan lebih siap untuk “memperbaiki” struktur dan isi file tersebut jika diperlukan."
  },
  {
    "objectID": "datapreparation.html#transformasi-struktur-data",
    "href": "datapreparation.html#transformasi-struktur-data",
    "title": "Topik 2 | Data Preparation",
    "section": "5. Transformasi Struktur Data",
    "text": "5. Transformasi Struktur Data\nPada sesi ini kita melanjutkan atas proses profiling Datasets kependudukan DKI tadi, terlihat juga ada beberapa kolom yang harusnya bisa dijumlahkan menjadi satu kolom – yaitu kolom 35-39.Perempuan, 40-44.Perempuan, dan seterusnya – menjadi kolom jumlah. Kemudian informasi umur di nama kolom tersebut sebenarnya dapat kita pisahkan menjadi kolom tersendiri.\n\n5.1 Fungsi names\nPada bab sebelumnya, kita menggunakan function str untuk melihat ringkasan dari struktur nama, tipe data, dan isi dari data.frame hasil pembacaan file.\nNamun jika kita hanya ingin melihat nama-nama kolom saja, bisa menggunakan function bernama names, dengan konstruksi berikut.\nnames(variable)\n\n#Membaca dataset csv\npenduduk.dki &lt;-read.csv(\"https://storage.googleapis.com/dqlab-dataset/dkikepadatankelurahan2013.csv\", sep=\",\")\n\n#Menggunakan names untuk variable penduduk.dki.csv\nnames(penduduk.dki)\n\n [1] \"TAHUN\"                \"NAMA.PROVINSI\"        \"NAMA.KABUPATEN.KOTA\" \n [4] \"NAMA.KECAMATAN\"       \"NAMA.KELURAHAN\"       \"LUAS.WILAYAH..KM2.\"  \n [7] \"KEPADATAN..JIWA.KM2.\" \"X\"                    \"X.1\"                 \n[10] \"X.2\"                  \"X.3\"                  \"X.4\"                 \n[13] \"X.5\"                  \"X.6\"                  \"X.7\"                 \n[16] \"X.8\"                  \"X.9\"                  \"X.10\"                \n[19] \"X.11\"                 \"X35.39.Laki.Laki\"     \"X35.39.Perempuan\"    \n[22] \"X40.44.Laki.Laki\"     \"X40.44.Perempuan\"     \"X45.49.Laki.Laki\"    \n[25] \"X45.49.Perempuan\"     \"X50.54.Laki.Laki\"     \"X50.54.Perempuan\"    \n[28] \"X55.59.Laki.Laki\"     \"X55.59.Perempuan\"     \"X60.64.Laki.Laki\"    \n[31] \"X60.64.Perempuan\"     \"X65.69.Laki.Laki\"     \"X65.69.Perempuan\"    \n[34] \"X70.74.Laki.Laki\"     \"X70.74.Perempuan\"     \"X.75.Laki.Laki\"      \n[37] \"X.75..Perempuan\"     \n\n\nMerubah Nama Kolom\nFunction names ini juga bisa digunakan merubah nama kolom pada data.frame. Terlihat dari posisi nomor indeks nama kolom yang ingin diubah, misal kita akan merubah nama kolom TAHUN menjadi PERIODE (posisi indeks 1/[1]) dan NAMA KECAMATAN menjadi KEPANEWONAN (posisi indeks 4/[4]) dari dataset maka untuk merubahnya kita gunakan konstruksi berikut:\n\n#Membaca dataset csv\npenduduk.dki &lt;-read.csv(\"https://storage.googleapis.com/dqlab-dataset/dkikepadatankelurahan2013.csv\", sep=\",\")\n\n#&gt; Ubah nama kolom tahun menjadi PERIODE\nnames(penduduk.dki)[1] &lt;- \"PERIODE\"\n\n#&gt; Ubah nama kolom Nama Kecamatan jadi Kepanewonan\nnames(penduduk.dki)[4] &lt;- \"KEPANEWONAN\"\n\n#&gt; Eksekusi fungsi\nnames(penduduk.dki)\n\n [1] \"PERIODE\"              \"NAMA.PROVINSI\"        \"NAMA.KABUPATEN.KOTA\" \n [4] \"KEPANEWONAN\"          \"NAMA.KELURAHAN\"       \"LUAS.WILAYAH..KM2.\"  \n [7] \"KEPADATAN..JIWA.KM2.\" \"X\"                    \"X.1\"                 \n[10] \"X.2\"                  \"X.3\"                  \"X.4\"                 \n[13] \"X.5\"                  \"X.6\"                  \"X.7\"                 \n[16] \"X.8\"                  \"X.9\"                  \"X.10\"                \n[19] \"X.11\"                 \"X35.39.Laki.Laki\"     \"X35.39.Perempuan\"    \n[22] \"X40.44.Laki.Laki\"     \"X40.44.Perempuan\"     \"X45.49.Laki.Laki\"    \n[25] \"X45.49.Perempuan\"     \"X50.54.Laki.Laki\"     \"X50.54.Perempuan\"    \n[28] \"X55.59.Laki.Laki\"     \"X55.59.Perempuan\"     \"X60.64.Laki.Laki\"    \n[31] \"X60.64.Perempuan\"     \"X65.69.Laki.Laki\"     \"X65.69.Perempuan\"    \n[34] \"X70.74.Laki.Laki\"     \"X70.74.Perempuan\"     \"X.75.Laki.Laki\"      \n[37] \"X.75..Perempuan\"     \n\n\n\n\n5.2 Operator %in%\nPada bab Profiling Datasets diatas, data.frame hasil pembacaan read.csv memiliki kolom X, X.1, X.2, X.3 s/d kolom X.11 yang kosong semua dan sebenarnya tidak diperlukan.\nKita dapat menghilangkan kolom-kolom ini dengan contoh berikut:\n\n\n\n\n\n\n\nKomponen\nDeskripsi\n\n\npenduduk.dki.csv\nVariable data frame dari hasil pembacaan dataset\n\n\n[ , …]\nArtinya data frame mengambil kolom ke …\n\n\n!\nTanda bukan\n\n\nnames(penduduk.dki.csv)\nDaftar dari semua kolom dari variable penduduk.dki.csv\n\n\n%in%\nOperator untuk mengambil data dari vector setelahnya\n\n\nc(\"X\",\"X.1\",\"X.2\",\"X.3\",\"X.4\",\"X.5\",\"X.6\",\"X.7\",\"X.8\",\"X.9\",\"X.10\", \"X.11\")\nVector dari nama semua kolom yang akan dibuang\n\n\n\n\n#Membaca dataset csv\npenduduk.dki &lt;-read.csv(\"https://storage.googleapis.com/dqlab-dataset/dkikepadatankelurahan2013.csv\", sep=\",\")\n\n#Membuang kolom X, X.1, X.2 s/d X.11\npenduduk.dki &lt;- penduduk.dki[,!names(penduduk.dki) %in% c(\"X\", \"X.1\",\"X.2\",\"X.3\",\"X.4\",\"X.5\",\"X.6\",\"X.7\",\"X.8\",\"X.9\",\"X.10\", \"X.11\")]\n\n#&gt; Eksekusi function\nnames(penduduk.dki)\n\n [1] \"TAHUN\"                \"NAMA.PROVINSI\"        \"NAMA.KABUPATEN.KOTA\" \n [4] \"NAMA.KECAMATAN\"       \"NAMA.KELURAHAN\"       \"LUAS.WILAYAH..KM2.\"  \n [7] \"KEPADATAN..JIWA.KM2.\" \"X35.39.Laki.Laki\"     \"X35.39.Perempuan\"    \n[10] \"X40.44.Laki.Laki\"     \"X40.44.Perempuan\"     \"X45.49.Laki.Laki\"    \n[13] \"X45.49.Perempuan\"     \"X50.54.Laki.Laki\"     \"X50.54.Perempuan\"    \n[16] \"X55.59.Laki.Laki\"     \"X55.59.Perempuan\"     \"X60.64.Laki.Laki\"    \n[19] \"X60.64.Perempuan\"     \"X65.69.Laki.Laki\"     \"X65.69.Perempuan\"    \n[22] \"X70.74.Laki.Laki\"     \"X70.74.Perempuan\"     \"X.75.Laki.Laki\"      \n[25] \"X.75..Perempuan\"     \n\n\nAtau terjemahan dari seluruh konstruksi tersebut adalah mengambil data dari data.frame penduduk.dki.csv dengan kolom-kolom yang tidak termasuk pada “X”, “X.1”, “X.2”, “X.3”, dan seterusnya sampai dengan “X.11”\n\n\n5.3 Normalisasi Data dari Kolom ke Baris\nKalau kita perhatikan empat kolom data pada table di bawah ini – yang diambil dari dataset kependudukan DKI – maka dua kolom terakhir (35-39 laki-laki dan 35-39 Perempuan) sebenarnya mengandung tiga variable, yaitu: rentang umur, jenis kelamin, dan jumlah penduduk.\n\n\n\nNAMA.KECAMATAN\nNAMA.KELURAHAN\n35-39.Laki-Laki\n35-39.Perempuan\n\n\nGAMBIR\nGAMBIR\n166\n174\n\n\nGAMBIR\nCIDENG\n850\n748\n\n\nGAMBIR\nPETOJO UTARA\n954\n920\n\n\n\nDan dari sisi prinsip kerapian data, satu variable data harusnya masing-masing menempati satu kolom tersendiri. Dan berdasarkan prinsip tersebut, kolom “NAMA.KECAMATAN” dan “NAMA.KELURAHAN” sudah memenuhi persyaratan. Namun kolom “35-39.Laki-Laki” dan kolom “35-39.Perempuan” tidak memenuhi persyaratan.\nKita akan coba men-transformasi struktur ini dengan dua tahap:\n\nMelakukan normalisasi kolom dari baris ke kolom\nMemisahkan kolom\n\nKita mulai dari tahap pertama, dimana kita akan merubah struktur data di atas agar menjadi seperti ini :\n\n\n\nNAMA.KECAMATAN\nNAMA.KELURAHAN\nDEMOGRAFIK\nJUMLAH\n\n\nGAMBIR\nGAMBIR\n35-39.Laki-Laki\n166\n\n\nGAMBIR\nGAMBIR\n35-39.Perempuan\n174\n\n\nGAMBIR\nCIDENG\n35-39.Laki-Laki\n850\n\n\nGAMBIR\nCIDENG\n35-39.Perempuan\n748\n\n\nGAMBIR\nPETOJO UTARA\n35-39.Laki-Laki\n954\n\n\nGAMBIR\nPETOJO UTARA\n35-39.Perempuan\n920\n\n\n\nTerlihat nama kolom \"35-39.Laki-Laki\" dan \"35-39.Perempuan\" dipivot menjadi nilai baris data di bawah kolom \"DEMOGRAFIK\".\nKemudian angka-angka jumlah penduduk yang tadinya di bawah kedua kolom tersebut sekarang ada di bawah kolom “JUMLAH\".\nUntuk melakukan transformasi struktur ini, kita akan gunakan function melt dari package reshape2. Berikut adalah contoh penggunaannya:\n\n#&gt; Load Paket xlsx\nlibrary(openxlsx)\nlibrary(reshape2)\npenduduk.dki.xlsx &lt;- read.xlsx(xlsxFile=\"https://storage.googleapis.com/dqlab-dataset/dkikepadatankelurahan2013.xlsx\")\n\n#Transformasi kolom dataset penduduk.dki.xlsx, disimpan ke variable penduduk.dki.transform\npenduduk.dki.transform &lt;- melt(data=penduduk.dki.xlsx, id.vars=c( \"NAMA.KECAMATAN\", \"NAMA.KELURAHAN\"), measure.vars = c(\"35-39.Laki-Laki\", \"35-39.Perempuan\"), variable.name = \"DEMOGRAFIK\", value.name=\"JUMLAH\")\n\n#Menampilkan variable penduduk.dki.transform\npenduduk.dki.transform\n\n       NAMA.KECAMATAN         NAMA.KELURAHAN      DEMOGRAFIK JUMLAH\n1     KEP. SERIBU UTR            P. PANGGANG 35-39.Laki-Laki    231\n2     KEP. SERIBU UTR              P. KELAPA 35-39.Laki-Laki     84\n3     KEP. SERIBU UTR             P. HARAPAN 35-39.Laki-Laki    255\n4     KEP. SERIBU SLT         P. UNTUNG JAWA 35-39.Laki-Laki    199\n5     KEP. SERIBU SLT              P. TIDUNG 35-39.Laki-Laki     98\n6     KEP. SERIBU SLT                P. PARI 35-39.Laki-Laki    113\n7              GAMBIR                 GAMBIR 35-39.Laki-Laki    166\n8              GAMBIR                 CIDENG 35-39.Laki-Laki    850\n9              GAMBIR           PETOJO UTARA 35-39.Laki-Laki    954\n10             GAMBIR         PETOJO SELATAN 35-39.Laki-Laki    752\n11             GAMBIR           KEBON KELAPA 35-39.Laki-Laki    592\n12             GAMBIR              DURI PULO 35-39.Laki-Laki   1213\n13        SAWAH BESAR             PASAR BARU 35-39.Laki-Laki    714\n14        SAWAH BESAR           KARANG ANYAR 35-39.Laki-Laki   1575\n15        SAWAH BESAR                KARTINI 35-39.Laki-Laki   1307\n16        SAWAH BESAR    GUNUNG SAHARI UTARA 35-39.Laki-Laki    817\n17        SAWAH BESAR     MANGGA DUA SELATAN 35-39.Laki-Laki   1683\n18          KEMAYORAN              KEMAYORAN 35-39.Laki-Laki   1164\n19          KEMAYORAN           KEBON KOSONG 35-39.Laki-Laki   1644\n20          KEMAYORAN          HARAPAN MULIA 35-39.Laki-Laki   1256\n21          KEMAYORAN                SERDANG 35-39.Laki-Laki   1603\n22          KEMAYORAN  GUNUNG SAHARI SELATAN 35-39.Laki-Laki   1071\n23          KEMAYORAN           CEMPAKA BARU 35-39.Laki-Laki   1750\n24          KEMAYORAN             SUMUR BATU 35-39.Laki-Laki   1452\n25          KEMAYORAN           UTAN PANJANG 35-39.Laki-Laki   1610\n26              SENEN                  SENEN 35-39.Laki-Laki    398\n27              SENEN                 KENARI 35-39.Laki-Laki    456\n28              SENEN                PASEBAN 35-39.Laki-Laki   1266\n29              SENEN                 KRAMAT 35-39.Laki-Laki   1552\n30              SENEN                KWITANG 35-39.Laki-Laki    908\n31              SENEN                 BUNGUR 35-39.Laki-Laki   1046\n32      CEMPAKA PUTIH    CEMPAKA PUTIH TIMUR 35-39.Laki-Laki   1264\n33      CEMPAKA PUTIH    CEMPAKA PUTIH BARAT 35-39.Laki-Laki   1858\n34      CEMPAKA PUTIH               RAWASARI 35-39.Laki-Laki   1200\n35            MENTENG                MENTENG 35-39.Laki-Laki   1349\n36            MENTENG             PEGANGSAAN 35-39.Laki-Laki   1172\n37            MENTENG                 CIKINI 35-39.Laki-Laki    424\n38            MENTENG             GONDANGDIA 35-39.Laki-Laki    192\n39            MENTENG            KEBON SIRIH 35-39.Laki-Laki    733\n40        TANAH ABANG                 GELORA 35-39.Laki-Laki    185\n41        TANAH ABANG        BENDUNGAN HILIR 35-39.Laki-Laki   1124\n42        TANAH ABANG          KARET TENGSIN 35-39.Laki-Laki   1118\n43        TANAH ABANG             PETAMBURAN 35-39.Laki-Laki   1851\n44        TANAH ABANG           KEBON MELATI 35-39.Laki-Laki   1862\n45        TANAH ABANG           KEBON KACANG 35-39.Laki-Laki   1150\n46        TANAH ABANG           KAMPUNG BALI 35-39.Laki-Laki    612\n47         JOHAR BARU             JOHAR BARU 35-39.Laki-Laki   2036\n48         JOHAR BARU           KAMPUNG RAWA 35-39.Laki-Laki   1210\n49         JOHAR BARU                  GALUR 35-39.Laki-Laki    999\n50         JOHAR BARU           TANAH TINGGI 35-39.Laki-Laki   2118\n51        PENJARINGAN            PENJARINGAN 35-39.Laki-Laki   9225\n52        PENJARINGAN            KAMAL MUARA 35-39.Laki-Laki   1045\n53        PENJARINGAN            KAPUK MUARA 35-39.Laki-Laki   2763\n54        PENJARINGAN              PEJAGALAN 35-39.Laki-Laki   7137\n55        PENJARINGAN                  PLUIT 35-39.Laki-Laki   3656\n56      TANJUNG PRIOK          TANJUNG PRIOK 35-39.Laki-Laki   3374\n57      TANJUNG PRIOK            SUNTER JAYA 35-39.Laki-Laki   5374\n58      TANJUNG PRIOK               PAPANGGO 35-39.Laki-Laki   3667\n59      TANJUNG PRIOK           SUNGAI BAMBU 35-39.Laki-Laki   2807\n60      TANJUNG PRIOK           KEBON BAWANG 35-39.Laki-Laki   4677\n61      TANJUNG PRIOK           SUNTER AGUNG 35-39.Laki-Laki   6094\n62      TANJUNG PRIOK                WARAKAS 35-39.Laki-Laki   4224\n63               KOJA                   KOJA 35-39.Laki-Laki   3088\n64               KOJA             TUGU UTARA 35-39.Laki-Laki   6608\n65               KOJA                  LAGOA 35-39.Laki-Laki   5931\n66               KOJA       RAWA BADAK UTARA 35-39.Laki-Laki   3260\n67               KOJA           TUGU SELATAN 35-39.Laki-Laki   3744\n68               KOJA     RAWA BADAK SELATAN 35-39.Laki-Laki   3910\n69          CILINCING              CILINCING 35-39.Laki-Laki   4654\n70          CILINCING               SUKAPURA 35-39.Laki-Laki   5221\n71          CILINCING                MARUNDA 35-39.Laki-Laki   2187\n72          CILINCING              KALI BARU 35-39.Laki-Laki   7616\n73          CILINCING           SEMPER TIMUR 35-39.Laki-Laki   3230\n74          CILINCING                ROROTAN 35-39.Laki-Laki   3442\n75          CILINCING           SEMPER BARAT 35-39.Laki-Laki   6419\n76         PADEMANGAN       PADEMANGAN TIMUR 35-39.Laki-Laki   3005\n77         PADEMANGAN       PADEMANGAN BARAT 35-39.Laki-Laki   7178\n78         PADEMANGAN                  ANCOL 35-39.Laki-Laki   2259\n79      KELAPA GADING    KELAPA GADING TIMUR 35-39.Laki-Laki   2539\n80      KELAPA GADING         PEGANGSAAN DUA 35-39.Laki-Laki   4170\n81      KELAPA GADING    KELAPA GADING BARAT 35-39.Laki-Laki   2628\n82         CENGKARENG       CENGKARENG BARAT 35-39.Laki-Laki   5316\n83         CENGKARENG           DURI KOSAMBI 35-39.Laki-Laki   6922\n84         CENGKARENG             RAWA BUAYA 35-39.Laki-Laki   5632\n85         CENGKARENG     KEDAUNG KALI ANGKE 35-39.Laki-Laki   2951\n86         CENGKARENG                  KAPUK 35-39.Laki-Laki  13011\n87         CENGKARENG       CENGKARENG TIMUR 35-39.Laki-Laki   7146\n88  GROGOL PETAMBURAN                 GROGOL 35-39.Laki-Laki   1530\n89  GROGOL PETAMBURAN    TANJUNG DUREN UTARA 35-39.Laki-Laki   1277\n90  GROGOL PETAMBURAN                 TOMANG 35-39.Laki-Laki   2404\n91  GROGOL PETAMBURAN               JELAMBAR 35-39.Laki-Laki   2358\n92  GROGOL PETAMBURAN  TANJUNG DUREN SELATAN 35-39.Laki-Laki   1857\n93  GROGOL PETAMBURAN          JELAMBAR BARU 35-39.Laki-Laki   3165\n94  GROGOL PETAMBURAN          WIJAYA KUSUMA 35-39.Laki-Laki   3523\n95         TAMAN SARI             TAMAN SARI 35-39.Laki-Laki   1365\n96         TAMAN SARI                 KRUKUT 35-39.Laki-Laki   1848\n97         TAMAN SARI                 MAPHAR 35-39.Laki-Laki   1555\n98         TAMAN SARI                 TANGKI 35-39.Laki-Laki   1248\n99         TAMAN SARI           MANGGA BESAR 35-39.Laki-Laki    675\n100        TAMAN SARI              KEAGUNGAN 35-39.Laki-Laki   1673\n101        TAMAN SARI                 GLODOK 35-39.Laki-Laki    650\n102        TAMAN SARI              PINANGSIA 35-39.Laki-Laki    991\n103           TAMBORA                TAMBORA 35-39.Laki-Laki    968\n104           TAMBORA             KALI ANYAR 35-39.Laki-Laki   2532\n105           TAMBORA             DURI UTARA 35-39.Laki-Laki   1919\n106           TAMBORA           TANAH SEREAL 35-39.Laki-Laki   2485\n107           TAMBORA              KERENDANG 35-39.Laki-Laki   2057\n108           TAMBORA          JEMBATAN BESI 35-39.Laki-Laki   3124\n109           TAMBORA                  ANGKE 35-39.Laki-Laki   2767\n110           TAMBORA          JEMBATAN LIMA 35-39.Laki-Laki   2104\n111           TAMBORA                PEKOJAN 35-39.Laki-Laki   2061\n112           TAMBORA             ROA MALAKA 35-39.Laki-Laki    257\n113           TAMBORA           DURI SELATAN 35-39.Laki-Laki   1319\n114       KEBON JERUK            KEBON JERUK 35-39.Laki-Laki   4362\n115       KEBON JERUK         SUKABUMI UTARA 35-39.Laki-Laki   3197\n116       KEBON JERUK       SUKABUMI SELATAN 35-39.Laki-Laki   3396\n117       KEBON JERUK             KELAPA DUA 35-39.Laki-Laki   1962\n118       KEBON JERUK              DURI KEPA 35-39.Laki-Laki   5160\n119       KEBON JERUK           KEDOYA UTARA 35-39.Laki-Laki   3914\n120       KEBON JERUK         KEDOYA SELATAN 35-39.Laki-Laki   2709\n121        KALI DERES              KALIDERES 35-39.Laki-Laki   6660\n122        KALI DERES                SEMANAN 35-39.Laki-Laki   6508\n123        KALI DERES             TEGAL ALUR 35-39.Laki-Laki   8053\n124        KALI DERES                  KAMAL 35-39.Laki-Laki   4847\n125        KALI DERES             PEGADUNGAN 35-39.Laki-Laki   5990\n126          PALMERAH               PALMERAH 35-39.Laki-Laki   5308\n127          PALMERAH                  SLIPI 35-39.Laki-Laki   1445\n128          PALMERAH       KOTA BAMBU UTARA 35-39.Laki-Laki   2268\n129          PALMERAH              JATI PULO 35-39.Laki-Laki   2575\n130          PALMERAH            KEMANGGISAN 35-39.Laki-Laki   2642\n131          PALMERAH     KOTA BAMBU SELATAN 35-39.Laki-Laki   1967\n132         KEMBANGAN        KEMBANGAN UTARA 35-39.Laki-Laki   4531\n133         KEMBANGAN           MERUYA UTARA 35-39.Laki-Laki   3545\n134         KEMBANGAN         MERUYA SELATAN 35-39.Laki-Laki   2471\n135         KEMBANGAN              SRENGSENG 35-39.Laki-Laki   3761\n136         KEMBANGAN                  JOGLO 35-39.Laki-Laki   3226\n137         KEMBANGAN      KEMBANGAN SELATAN 35-39.Laki-Laki   2439\n138             TEBET            TEBET TIMUR 35-39.Laki-Laki    838\n139             TEBET            TEBET BARAT 35-39.Laki-Laki   1060\n140             TEBET          MENTENG DALAM 35-39.Laki-Laki   2029\n141             TEBET             KEBON BARU 35-39.Laki-Laki   2004\n142             TEBET             BUKIT DURI 35-39.Laki-Laki   1880\n143             TEBET      MANGGARAI SELATAN 35-39.Laki-Laki   1239\n144             TEBET              MANGGARAI 35-39.Laki-Laki   1545\n145        SETIA BUDI             SETIA BUDI 35-39.Laki-Laki    168\n146        SETIA BUDI         KARET SEMANGGI 35-39.Laki-Laki    126\n147        SETIA BUDI         KARET KUNINGAN 35-39.Laki-Laki    879\n148        SETIA BUDI                  KARET 35-39.Laki-Laki    603\n149        SETIA BUDI           MENTENG ATAS 35-39.Laki-Laki   1504\n150        SETIA BUDI          PASAR MANGGIS 35-39.Laki-Laki   1445\n151        SETIA BUDI                 GUNTUR 35-39.Laki-Laki    208\n152        SETIA BUDI         KUNINGAN TIMUR 35-39.Laki-Laki    328\n153  MAMPANG PRAPATAN       MAMPANG PRAPATAN 35-39.Laki-Laki   1101\n154  MAMPANG PRAPATAN                 BANGKA 35-39.Laki-Laki   1119\n155  MAMPANG PRAPATAN           PELA MAMPANG 35-39.Laki-Laki   2458\n156  MAMPANG PRAPATAN           TEGAL PARANG 35-39.Laki-Laki   1826\n157  MAMPANG PRAPATAN         KUNINGAN BARAT 35-39.Laki-Laki    727\n158      PASAR MINGGU           PASAR MINGGU 35-39.Laki-Laki   1296\n159      PASAR MINGGU            JATI PADANG 35-39.Laki-Laki   2023\n160      PASAR MINGGU         CILANDAK TIMUR 35-39.Laki-Laki   1398\n161      PASAR MINGGU                RAGUNAN 35-39.Laki-Laki   2284\n162      PASAR MINGGU          PEJATEN TIMUR 35-39.Laki-Laki   3168\n163      PASAR MINGGU          PEJATEN BARAT 35-39.Laki-Laki   1963\n164      PASAR MINGGU              KEBAGUSAN 35-39.Laki-Laki   2300\n165    KEBAYORAN LAMA   KEBAYORAN LAMA UTARA 35-39.Laki-Laki   2638\n166    KEBAYORAN LAMA          PONDOK PINANG 35-39.Laki-Laki   2770\n167    KEBAYORAN LAMA                CIPULIR 35-39.Laki-Laki   2191\n168    KEBAYORAN LAMA           GROGOL UTARA 35-39.Laki-Laki   2266\n169    KEBAYORAN LAMA         GROGOL SELATAN 35-39.Laki-Laki   2309\n170    KEBAYORAN LAMA KEBAYORAN LAMA SELATAN 35-39.Laki-Laki   2316\n171          CILANDAK         CILANDAK BARAT 35-39.Laki-Laki   2700\n172          CILANDAK            LEBAK BULUS 35-39.Laki-Laki   1823\n173          CILANDAK            PONDOK LABU 35-39.Laki-Laki   2261\n174          CILANDAK       GANDARIA SELATAN 35-39.Laki-Laki   1145\n175          CILANDAK         CIPETE SELATAN 35-39.Laki-Laki   1387\n176    KEBAYORAN BARU                MELAWAI 35-39.Laki-Laki    116\n177    KEBAYORAN BARU                 GUNUNG 35-39.Laki-Laki    423\n178    KEBAYORAN BARU            KRAMAT PELA 35-39.Laki-Laki    706\n179    KEBAYORAN BARU                 SELONG 35-39.Laki-Laki    178\n180    KEBAYORAN BARU             RAWA BARAT 35-39.Laki-Laki    274\n181    KEBAYORAN BARU                SENAYAN 35-39.Laki-Laki    176\n182    KEBAYORAN BARU                   PULO 35-39.Laki-Laki    256\n183    KEBAYORAN BARU              PETOGOGAN 35-39.Laki-Laki    621\n184    KEBAYORAN BARU         GANDARIA UTARA 35-39.Laki-Laki   2056\n185    KEBAYORAN BARU           CIPETE UTARA 35-39.Laki-Laki   1907\n186          PANCORAN               PANCORAN 35-39.Laki-Laki   1026\n187          PANCORAN               KALIBATA 35-39.Laki-Laki   2300\n188          PANCORAN              RAWA JATI 35-39.Laki-Laki    990\n189          PANCORAN             DUREN TIGA 35-39.Laki-Laki   1540\n190          PANCORAN             PENGADEGAN 35-39.Laki-Laki   1140\n191          PANCORAN                 CIKOKO 35-39.Laki-Laki    698\n192         JAGAKARSA              JAGAKARSA 35-39.Laki-Laki   3050\n193         JAGAKARSA        SRENGSENG SAWAH 35-39.Laki-Laki   2783\n194         JAGAKARSA               CIGANJUR 35-39.Laki-Laki   1859\n195         JAGAKARSA          LENTENG AGUNG 35-39.Laki-Laki   2617\n196         JAGAKARSA          TANJUNG BARAT 35-39.Laki-Laki   2017\n197         JAGAKARSA                CIPEDAK 35-39.Laki-Laki   1708\n198      PESANGGRAHAN           PESANGGRAHAN 35-39.Laki-Laki   1499\n199      PESANGGRAHAN                BINTARO 35-39.Laki-Laki   2675\n200      PESANGGRAHAN       PETUKANGAN UTARA 35-39.Laki-Laki   2787\n201      PESANGGRAHAN     PETUKANGAN SELATAN 35-39.Laki-Laki   1836\n202      PESANGGRAHAN                ULUJAMI 35-39.Laki-Laki   2304\n203          MATRAMAN          PISANGAN BARU 35-39.Laki-Laki   1759\n204          MATRAMAN        UTAN KAYU UTARA 35-39.Laki-Laki   1606\n205          MATRAMAN             KAYU MANIS 35-39.Laki-Laki   1377\n206          MATRAMAN             PAL MERIAM 35-39.Laki-Laki   1101\n207          MATRAMAN          KEBON MANGGIS 35-39.Laki-Laki    840\n208          MATRAMAN      UTAN KAYU SELATAN 35-39.Laki-Laki   1820\n209       PULO GADUNG            PULO GADUNG 35-39.Laki-Laki   1998\n210       PULO GADUNG         PISANGAN TIMUR 35-39.Laki-Laki   2249\n211       PULO GADUNG               CIPINANG 35-39.Laki-Laki   2192\n212       PULO GADUNG        JATINEGARA KAUM 35-39.Laki-Laki   1278\n213       PULO GADUNG             RAWAMANGUN 35-39.Laki-Laki   2054\n214       PULO GADUNG             KAYU PUTIH 35-39.Laki-Laki   2361\n215       PULO GADUNG                   JATI 35-39.Laki-Laki   1764\n216        JATINEGARA         KAMPUNG MELAYU 35-39.Laki-Laki   1361\n217        JATINEGARA            BIDARA CINA 35-39.Laki-Laki   2105\n218        JATINEGARA            BALI MESTER 35-39.Laki-Laki    444\n219        JATINEGARA             RAWA BUNGA 35-39.Laki-Laki   1131\n220        JATINEGARA      CIPINANG CEMPEDAK 35-39.Laki-Laki   1614\n221        JATINEGARA         CIPINANG MUARA 35-39.Laki-Laki   3063\n222        JATINEGARA CIPINANG BESAR SELATAN 35-39.Laki-Laki   1875\n223        JATINEGARA   CIPINANG BESAR UTARA 35-39.Laki-Laki   2704\n224       KRAMAT JATI            KRAMAT JATI 35-39.Laki-Laki   1946\n225       KRAMAT JATI         KAMPUNG TENGAH 35-39.Laki-Laki   2224\n226       KRAMAT JATI                  DUKUH 35-39.Laki-Laki   1277\n227       KRAMAT JATI             BATU AMPAR 35-39.Laki-Laki   2480\n228       KRAMAT JATI           BALE KAMBANG 35-39.Laki-Laki   1413\n229       KRAMAT JATI              CILILITAN 35-39.Laki-Laki   2265\n230       KRAMAT JATI                 CAWANG 35-39.Laki-Laki   1942\n231        PASAR REBO                 GEDONG 35-39.Laki-Laki   1823\n232        PASAR REBO                   BARU 35-39.Laki-Laki   1678\n233        PASAR REBO              CIJANTUNG 35-39.Laki-Laki   2107\n234        PASAR REBO               KALISARI 35-39.Laki-Laki   2006\n235        PASAR REBO                PEKAYON 35-39.Laki-Laki   2139\n236            CAKUNG             JATINEGARA 35-39.Laki-Laki   5035\n237            CAKUNG            RAWA TERATE 35-39.Laki-Laki   1565\n238            CAKUNG           PENGGILINGAN 35-39.Laki-Laki   4651\n239            CAKUNG           CAKUNG TIMUR 35-39.Laki-Laki   3053\n240            CAKUNG            PULO GEBANG 35-39.Laki-Laki   4162\n241            CAKUNG          UJUNG MENTENG 35-39.Laki-Laki   1420\n242            CAKUNG           CAKUNG BARAT 35-39.Laki-Laki   3285\n243       DUREN SAWIT            DUREN SAWIT 35-39.Laki-Laki   3210\n244       DUREN SAWIT           PONDOK BAMBU 35-39.Laki-Laki   3427\n245       DUREN SAWIT                KLENDER 35-39.Laki-Laki   3896\n246       DUREN SAWIT          PONDOK KELAPA 35-39.Laki-Laki   3467\n247       DUREN SAWIT            MALAKA SARI 35-39.Laki-Laki   1682\n248       DUREN SAWIT            MALAKA JAYA 35-39.Laki-Laki   1949\n249       DUREN SAWIT            PONDOK KOPI 35-39.Laki-Laki   1611\n250           MAKASAR                MAKASAR 35-39.Laki-Laki   1888\n251           MAKASAR           PINANG RANTI 35-39.Laki-Laki   1299\n252           MAKASAR             KEBON PALA 35-39.Laki-Laki   2689\n253           MAKASAR  HALIM PERDANA KUSUMAH 35-39.Laki-Laki   1479\n254           MAKASAR        CIPINANG MELAYU 35-39.Laki-Laki   2208\n255           CIRACAS                CIRACAS 35-39.Laki-Laki   3179\n256           CIRACAS                CIBUBUR 35-39.Laki-Laki   3311\n257           CIRACAS       KELAPA DUA WETAN 35-39.Laki-Laki   2185\n258           CIRACAS                SUSUKAN 35-39.Laki-Laki   1988\n259           CIRACAS               RAMBUTAN 35-39.Laki-Laki   1857\n260          CIPAYUNG               CIPAYUNG 35-39.Laki-Laki   1241\n261          CIPAYUNG              CILANGKAP 35-39.Laki-Laki   1237\n262          CIPAYUNG         PONDOK RANGGON 35-39.Laki-Laki   1088\n263          CIPAYUNG                 MUNJUL 35-39.Laki-Laki   1167\n264          CIPAYUNG                   SETU 35-39.Laki-Laki    937\n265          CIPAYUNG             BAMBU APUS 35-39.Laki-Laki   1242\n266          CIPAYUNG           LUBANG BUAYA 35-39.Laki-Laki   3258\n267          CIPAYUNG                  CEGER 35-39.Laki-Laki   1007\n268   KEP. SERIBU UTR            P. PANGGANG 35-39.Perempuan    235\n269   KEP. SERIBU UTR              P. KELAPA 35-39.Perempuan     88\n270   KEP. SERIBU UTR             P. HARAPAN 35-39.Perempuan    238\n271   KEP. SERIBU SLT         P. UNTUNG JAWA 35-39.Perempuan    185\n272   KEP. SERIBU SLT              P. TIDUNG 35-39.Perempuan     75\n273   KEP. SERIBU SLT                P. PARI 35-39.Perempuan    112\n274            GAMBIR                 GAMBIR 35-39.Perempuan    174\n275            GAMBIR                 CIDENG 35-39.Perempuan    748\n276            GAMBIR           PETOJO UTARA 35-39.Perempuan    920\n277            GAMBIR         PETOJO SELATAN 35-39.Perempuan    675\n278            GAMBIR           KEBON KELAPA 35-39.Perempuan    491\n279            GAMBIR              DURI PULO 35-39.Perempuan   1106\n280       SAWAH BESAR             PASAR BARU 35-39.Perempuan    611\n281       SAWAH BESAR           KARANG ANYAR 35-39.Perempuan   1485\n282       SAWAH BESAR                KARTINI 35-39.Perempuan   1177\n283       SAWAH BESAR    GUNUNG SAHARI UTARA 35-39.Perempuan    835\n284       SAWAH BESAR     MANGGA DUA SELATAN 35-39.Perempuan   1662\n285         KEMAYORAN              KEMAYORAN 35-39.Perempuan   1063\n286         KEMAYORAN           KEBON KOSONG 35-39.Perempuan   1542\n287         KEMAYORAN          HARAPAN MULIA 35-39.Perempuan   1213\n288         KEMAYORAN                SERDANG 35-39.Perempuan   1559\n289         KEMAYORAN  GUNUNG SAHARI SELATAN 35-39.Perempuan    979\n290         KEMAYORAN           CEMPAKA BARU 35-39.Perempuan   1710\n291         KEMAYORAN             SUMUR BATU 35-39.Perempuan   1372\n292         KEMAYORAN           UTAN PANJANG 35-39.Perempuan   1549\n293             SENEN                  SENEN 35-39.Perempuan    428\n294             SENEN                 KENARI 35-39.Perempuan    447\n295             SENEN                PASEBAN 35-39.Perempuan   1232\n296             SENEN                 KRAMAT 35-39.Perempuan   1479\n297             SENEN                KWITANG 35-39.Perempuan    793\n298             SENEN                 BUNGUR 35-39.Perempuan    993\n299     CEMPAKA PUTIH    CEMPAKA PUTIH TIMUR 35-39.Perempuan   1267\n300     CEMPAKA PUTIH    CEMPAKA PUTIH BARAT 35-39.Perempuan   1811\n301     CEMPAKA PUTIH               RAWASARI 35-39.Perempuan   1160\n302           MENTENG                MENTENG 35-39.Perempuan   1194\n303           MENTENG             PEGANGSAAN 35-39.Perempuan   1096\n304           MENTENG                 CIKINI 35-39.Perempuan    428\n305           MENTENG             GONDANGDIA 35-39.Perempuan    165\n306           MENTENG            KEBON SIRIH 35-39.Perempuan    717\n307       TANAH ABANG                 GELORA 35-39.Perempuan    178\n308       TANAH ABANG        BENDUNGAN HILIR 35-39.Perempuan   1138\n309       TANAH ABANG          KARET TENGSIN 35-39.Perempuan   1078\n310       TANAH ABANG             PETAMBURAN 35-39.Perempuan   1780\n311       TANAH ABANG           KEBON MELATI 35-39.Perempuan   1721\n312       TANAH ABANG           KEBON KACANG 35-39.Perempuan   1041\n313       TANAH ABANG           KAMPUNG BALI 35-39.Perempuan    613\n314        JOHAR BARU             JOHAR BARU 35-39.Perempuan   1878\n315        JOHAR BARU           KAMPUNG RAWA 35-39.Perempuan   1255\n316        JOHAR BARU                  GALUR 35-39.Perempuan   1060\n317        JOHAR BARU           TANAH TINGGI 35-39.Perempuan   2013\n318       PENJARINGAN            PENJARINGAN 35-39.Perempuan   5535\n319       PENJARINGAN            KAMAL MUARA 35-39.Perempuan    517\n320       PENJARINGAN            KAPUK MUARA 35-39.Perempuan   1631\n321       PENJARINGAN              PEJAGALAN 35-39.Perempuan   4468\n322       PENJARINGAN                  PLUIT 35-39.Perempuan   2264\n323     TANJUNG PRIOK          TANJUNG PRIOK 35-39.Perempuan   2025\n324     TANJUNG PRIOK            SUNTER JAYA 35-39.Perempuan   3427\n325     TANJUNG PRIOK               PAPANGGO 35-39.Perempuan   2290\n326     TANJUNG PRIOK           SUNGAI BAMBU 35-39.Perempuan   1749\n327     TANJUNG PRIOK           KEBON BAWANG 35-39.Perempuan   3009\n328     TANJUNG PRIOK           SUNTER AGUNG 35-39.Perempuan   3710\n329     TANJUNG PRIOK                WARAKAS 35-39.Perempuan   2608\n330              KOJA                   KOJA 35-39.Perempuan   1767\n331              KOJA             TUGU UTARA 35-39.Perempuan   3954\n332              KOJA                  LAGOA 35-39.Perempuan   3342\n333              KOJA       RAWA BADAK UTARA 35-39.Perempuan   2064\n334              KOJA           TUGU SELATAN 35-39.Perempuan   2235\n335              KOJA     RAWA BADAK SELATAN 35-39.Perempuan   2420\n336         CILINCING              CILINCING 35-39.Perempuan   2614\n337         CILINCING               SUKAPURA 35-39.Perempuan   3376\n338         CILINCING                MARUNDA 35-39.Perempuan   1207\n339         CILINCING              KALI BARU 35-39.Perempuan   4096\n340         CILINCING           SEMPER TIMUR 35-39.Perempuan   1683\n341         CILINCING                ROROTAN 35-39.Perempuan   1876\n342         CILINCING           SEMPER BARAT 35-39.Perempuan   3579\n343        PADEMANGAN       PADEMANGAN TIMUR 35-39.Perempuan   1935\n344        PADEMANGAN       PADEMANGAN BARAT 35-39.Perempuan   4264\n345        PADEMANGAN                  ANCOL 35-39.Perempuan   1380\n346     KELAPA GADING    KELAPA GADING TIMUR 35-39.Perempuan   1744\n347     KELAPA GADING         PEGANGSAAN DUA 35-39.Perempuan   2259\n348     KELAPA GADING    KELAPA GADING BARAT 35-39.Perempuan   1433\n349        CENGKARENG       CENGKARENG BARAT 35-39.Perempuan   3221\n350        CENGKARENG           DURI KOSAMBI 35-39.Perempuan   3764\n351        CENGKARENG             RAWA BUAYA 35-39.Perempuan   3396\n352        CENGKARENG     KEDAUNG KALI ANGKE 35-39.Perempuan   1756\n353        CENGKARENG                  KAPUK 35-39.Perempuan   7488\n354        CENGKARENG       CENGKARENG TIMUR 35-39.Perempuan   4147\n355 GROGOL PETAMBURAN                 GROGOL 35-39.Perempuan    903\n356 GROGOL PETAMBURAN    TANJUNG DUREN UTARA 35-39.Perempuan    812\n357 GROGOL PETAMBURAN                 TOMANG 35-39.Perempuan   1449\n358 GROGOL PETAMBURAN               JELAMBAR 35-39.Perempuan   1581\n359 GROGOL PETAMBURAN  TANJUNG DUREN SELATAN 35-39.Perempuan   1220\n360 GROGOL PETAMBURAN          JELAMBAR BARU 35-39.Perempuan   2116\n361 GROGOL PETAMBURAN          WIJAYA KUSUMA 35-39.Perempuan   2301\n362        TAMAN SARI             TAMAN SARI 35-39.Perempuan    729\n363        TAMAN SARI                 KRUKUT 35-39.Perempuan   1107\n364        TAMAN SARI                 MAPHAR 35-39.Perempuan    919\n365        TAMAN SARI                 TANGKI 35-39.Perempuan    691\n366        TAMAN SARI           MANGGA BESAR 35-39.Perempuan    386\n367        TAMAN SARI              KEAGUNGAN 35-39.Perempuan    975\n368        TAMAN SARI                 GLODOK 35-39.Perempuan    359\n369        TAMAN SARI              PINANGSIA 35-39.Perempuan    600\n370           TAMBORA                TAMBORA 35-39.Perempuan    588\n371           TAMBORA             KALI ANYAR 35-39.Perempuan   1567\n372           TAMBORA             DURI UTARA 35-39.Perempuan   1120\n373           TAMBORA           TANAH SEREAL 35-39.Perempuan   1386\n374           TAMBORA              KERENDANG 35-39.Perempuan   1212\n375           TAMBORA          JEMBATAN BESI 35-39.Perempuan   2075\n376           TAMBORA                  ANGKE 35-39.Perempuan   1721\n377           TAMBORA          JEMBATAN LIMA 35-39.Perempuan   1277\n378           TAMBORA                PEKOJAN 35-39.Perempuan   1197\n379           TAMBORA             ROA MALAKA 35-39.Perempuan    180\n380           TAMBORA           DURI SELATAN 35-39.Perempuan    769\n381       KEBON JERUK            KEBON JERUK 35-39.Perempuan   2563\n382       KEBON JERUK         SUKABUMI UTARA 35-39.Perempuan   2005\n383       KEBON JERUK       SUKABUMI SELATAN 35-39.Perempuan   2049\n384       KEBON JERUK             KELAPA DUA 35-39.Perempuan   1161\n385       KEBON JERUK              DURI KEPA 35-39.Perempuan   3164\n386       KEBON JERUK           KEDOYA UTARA 35-39.Perempuan   2355\n387       KEBON JERUK         KEDOYA SELATAN 35-39.Perempuan   1675\n388        KALI DERES              KALIDERES 35-39.Perempuan   3659\n389        KALI DERES                SEMANAN 35-39.Perempuan   3687\n390        KALI DERES             TEGAL ALUR 35-39.Perempuan   4591\n391        KALI DERES                  KAMAL 35-39.Perempuan   2640\n392        KALI DERES             PEGADUNGAN 35-39.Perempuan   3120\n393          PALMERAH               PALMERAH 35-39.Perempuan   3083\n394          PALMERAH                  SLIPI 35-39.Perempuan    856\n395          PALMERAH       KOTA BAMBU UTARA 35-39.Perempuan   1359\n396          PALMERAH              JATI PULO 35-39.Perempuan   1451\n397          PALMERAH            KEMANGGISAN 35-39.Perempuan   1596\n398          PALMERAH     KOTA BAMBU SELATAN 35-39.Perempuan   1141\n399         KEMBANGAN        KEMBANGAN UTARA 35-39.Perempuan   2734\n400         KEMBANGAN           MERUYA UTARA 35-39.Perempuan   2226\n401         KEMBANGAN         MERUYA SELATAN 35-39.Perempuan   1427\n402         KEMBANGAN              SRENGSENG 35-39.Perempuan   2109\n403         KEMBANGAN                  JOGLO 35-39.Perempuan   1840\n404         KEMBANGAN      KEMBANGAN SELATAN 35-39.Perempuan   1360\n405             TEBET            TEBET TIMUR 35-39.Perempuan    890\n406             TEBET            TEBET BARAT 35-39.Perempuan   1058\n407             TEBET          MENTENG DALAM 35-39.Perempuan   1913\n408             TEBET             KEBON BARU 35-39.Perempuan   1988\n409             TEBET             BUKIT DURI 35-39.Perempuan   1801\n410             TEBET      MANGGARAI SELATAN 35-39.Perempuan   1289\n411             TEBET              MANGGARAI 35-39.Perempuan   1479\n412        SETIA BUDI             SETIA BUDI 35-39.Perempuan    179\n413        SETIA BUDI         KARET SEMANGGI 35-39.Perempuan    134\n414        SETIA BUDI         KARET KUNINGAN 35-39.Perempuan    883\n415        SETIA BUDI                  KARET 35-39.Perempuan    557\n416        SETIA BUDI           MENTENG ATAS 35-39.Perempuan   1523\n417        SETIA BUDI          PASAR MANGGIS 35-39.Perempuan   1437\n418        SETIA BUDI                 GUNTUR 35-39.Perempuan    206\n419        SETIA BUDI         KUNINGAN TIMUR 35-39.Perempuan    304\n420  MAMPANG PRAPATAN       MAMPANG PRAPATAN 35-39.Perempuan    976\n421  MAMPANG PRAPATAN                 BANGKA 35-39.Perempuan   1098\n422  MAMPANG PRAPATAN           PELA MAMPANG 35-39.Perempuan   2321\n423  MAMPANG PRAPATAN           TEGAL PARANG 35-39.Perempuan   1683\n424  MAMPANG PRAPATAN         KUNINGAN BARAT 35-39.Perempuan    656\n425      PASAR MINGGU           PASAR MINGGU 35-39.Perempuan   1288\n426      PASAR MINGGU            JATI PADANG 35-39.Perempuan   1910\n427      PASAR MINGGU         CILANDAK TIMUR 35-39.Perempuan   1389\n428      PASAR MINGGU                RAGUNAN 35-39.Perempuan   2160\n429      PASAR MINGGU          PEJATEN TIMUR 35-39.Perempuan   2919\n430      PASAR MINGGU          PEJATEN BARAT 35-39.Perempuan   1894\n431      PASAR MINGGU              KEBAGUSAN 35-39.Perempuan   2193\n432    KEBAYORAN LAMA   KEBAYORAN LAMA UTARA 35-39.Perempuan   2396\n433    KEBAYORAN LAMA          PONDOK PINANG 35-39.Perempuan   2765\n434    KEBAYORAN LAMA                CIPULIR 35-39.Perempuan   2109\n435    KEBAYORAN LAMA           GROGOL UTARA 35-39.Perempuan   2227\n436    KEBAYORAN LAMA         GROGOL SELATAN 35-39.Perempuan   2266\n437    KEBAYORAN LAMA KEBAYORAN LAMA SELATAN 35-39.Perempuan   2252\n438          CILANDAK         CILANDAK BARAT 35-39.Perempuan   2678\n439          CILANDAK            LEBAK BULUS 35-39.Perempuan   1852\n440          CILANDAK            PONDOK LABU 35-39.Perempuan   2436\n441          CILANDAK       GANDARIA SELATAN 35-39.Perempuan   1165\n442          CILANDAK         CIPETE SELATAN 35-39.Perempuan   1331\n443    KEBAYORAN BARU                MELAWAI 35-39.Perempuan    127\n444    KEBAYORAN BARU                 GUNUNG 35-39.Perempuan    442\n445    KEBAYORAN BARU            KRAMAT PELA 35-39.Perempuan    660\n446    KEBAYORAN BARU                 SELONG 35-39.Perempuan    188\n447    KEBAYORAN BARU             RAWA BARAT 35-39.Perempuan    272\n448    KEBAYORAN BARU                SENAYAN 35-39.Perempuan    192\n449    KEBAYORAN BARU                   PULO 35-39.Perempuan    295\n450    KEBAYORAN BARU              PETOGOGAN 35-39.Perempuan    562\n451    KEBAYORAN BARU         GANDARIA UTARA 35-39.Perempuan   2108\n452    KEBAYORAN BARU           CIPETE UTARA 35-39.Perempuan   1758\n453          PANCORAN               PANCORAN 35-39.Perempuan   1049\n454          PANCORAN               KALIBATA 35-39.Perempuan   2242\n455          PANCORAN              RAWA JATI 35-39.Perempuan    985\n456          PANCORAN             DUREN TIGA 35-39.Perempuan   1460\n457          PANCORAN             PENGADEGAN 35-39.Perempuan   1041\n458          PANCORAN                 CIKOKO 35-39.Perempuan    595\n459         JAGAKARSA              JAGAKARSA 35-39.Perempuan   2964\n460         JAGAKARSA        SRENGSENG SAWAH 35-39.Perempuan   2874\n461         JAGAKARSA               CIGANJUR 35-39.Perempuan   1817\n462         JAGAKARSA          LENTENG AGUNG 35-39.Perempuan   2596\n463         JAGAKARSA          TANJUNG BARAT 35-39.Perempuan   2022\n464         JAGAKARSA                CIPEDAK 35-39.Perempuan   1774\n465      PESANGGRAHAN           PESANGGRAHAN 35-39.Perempuan   1484\n466      PESANGGRAHAN                BINTARO 35-39.Perempuan   2616\n467      PESANGGRAHAN       PETUKANGAN UTARA 35-39.Perempuan   2791\n468      PESANGGRAHAN     PETUKANGAN SELATAN 35-39.Perempuan   1727\n469      PESANGGRAHAN                ULUJAMI 35-39.Perempuan   2186\n470          MATRAMAN          PISANGAN BARU 35-39.Perempuan   1638\n471          MATRAMAN        UTAN KAYU UTARA 35-39.Perempuan   1542\n472          MATRAMAN             KAYU MANIS 35-39.Perempuan   1336\n473          MATRAMAN             PAL MERIAM 35-39.Perempuan   1061\n474          MATRAMAN          KEBON MANGGIS 35-39.Perempuan    873\n475          MATRAMAN      UTAN KAYU SELATAN 35-39.Perempuan   1810\n476       PULO GADUNG            PULO GADUNG 35-39.Perempuan   1836\n477       PULO GADUNG         PISANGAN TIMUR 35-39.Perempuan   2200\n478       PULO GADUNG               CIPINANG 35-39.Perempuan   2124\n479       PULO GADUNG        JATINEGARA KAUM 35-39.Perempuan   1190\n480       PULO GADUNG             RAWAMANGUN 35-39.Perempuan   2057\n481       PULO GADUNG             KAYU PUTIH 35-39.Perempuan   2418\n482       PULO GADUNG                   JATI 35-39.Perempuan   1797\n483        JATINEGARA         KAMPUNG MELAYU 35-39.Perempuan   1154\n484        JATINEGARA            BIDARA CINA 35-39.Perempuan   2064\n485        JATINEGARA            BALI MESTER 35-39.Perempuan    466\n486        JATINEGARA             RAWA BUNGA 35-39.Perempuan   1008\n487        JATINEGARA      CIPINANG CEMPEDAK 35-39.Perempuan   1758\n488        JATINEGARA         CIPINANG MUARA 35-39.Perempuan   2953\n489        JATINEGARA CIPINANG BESAR SELATAN 35-39.Perempuan   1682\n490        JATINEGARA   CIPINANG BESAR UTARA 35-39.Perempuan   2409\n491       KRAMAT JATI            KRAMAT JATI 35-39.Perempuan   1799\n492       KRAMAT JATI         KAMPUNG TENGAH 35-39.Perempuan   2135\n493       KRAMAT JATI                  DUKUH 35-39.Perempuan   1210\n494       KRAMAT JATI             BATU AMPAR 35-39.Perempuan   2417\n495       KRAMAT JATI           BALE KAMBANG 35-39.Perempuan   1425\n496       KRAMAT JATI              CILILITAN 35-39.Perempuan   2141\n497       KRAMAT JATI                 CAWANG 35-39.Perempuan   1800\n498        PASAR REBO                 GEDONG 35-39.Perempuan   1804\n499        PASAR REBO                   BARU 35-39.Perempuan   1341\n500        PASAR REBO              CIJANTUNG 35-39.Perempuan   1998\n501        PASAR REBO               KALISARI 35-39.Perempuan   1951\n502        PASAR REBO                PEKAYON 35-39.Perempuan   2060\n503            CAKUNG             JATINEGARA 35-39.Perempuan   4775\n504            CAKUNG            RAWA TERATE 35-39.Perempuan   1417\n505            CAKUNG           PENGGILINGAN 35-39.Perempuan   4385\n506            CAKUNG           CAKUNG TIMUR 35-39.Perempuan   2953\n507            CAKUNG            PULO GEBANG 35-39.Perempuan   4030\n508            CAKUNG          UJUNG MENTENG 35-39.Perempuan   1441\n509            CAKUNG           CAKUNG BARAT 35-39.Perempuan   3275\n510       DUREN SAWIT            DUREN SAWIT 35-39.Perempuan   3055\n511       DUREN SAWIT           PONDOK BAMBU 35-39.Perempuan   3122\n512       DUREN SAWIT                KLENDER 35-39.Perempuan   3569\n513       DUREN SAWIT          PONDOK KELAPA 35-39.Perempuan   3356\n514       DUREN SAWIT            MALAKA SARI 35-39.Perempuan   1703\n515       DUREN SAWIT            MALAKA JAYA 35-39.Perempuan   1984\n516       DUREN SAWIT            PONDOK KOPI 35-39.Perempuan   1604\n517           MAKASAR                MAKASAR 35-39.Perempuan   1815\n518           MAKASAR           PINANG RANTI 35-39.Perempuan   1284\n519           MAKASAR             KEBON PALA 35-39.Perempuan   2502\n520           MAKASAR  HALIM PERDANA KUSUMAH 35-39.Perempuan   1576\n521           MAKASAR        CIPINANG MELAYU 35-39.Perempuan   2104\n522           CIRACAS                CIRACAS 35-39.Perempuan   3085\n523           CIRACAS                CIBUBUR 35-39.Perempuan   3175\n524           CIRACAS       KELAPA DUA WETAN 35-39.Perempuan   2177\n525           CIRACAS                SUSUKAN 35-39.Perempuan   1846\n526           CIRACAS               RAMBUTAN 35-39.Perempuan   1849\n527          CIPAYUNG               CIPAYUNG 35-39.Perempuan   1172\n528          CIPAYUNG              CILANGKAP 35-39.Perempuan   1276\n529          CIPAYUNG         PONDOK RANGGON 35-39.Perempuan   1064\n530          CIPAYUNG                 MUNJUL 35-39.Perempuan   1112\n531          CIPAYUNG                   SETU 35-39.Perempuan    928\n532          CIPAYUNG             BAMBU APUS 35-39.Perempuan   1187\n533          CIPAYUNG           LUBANG BUAYA 35-39.Perempuan   2988\n534          CIPAYUNG                  CEGER 35-39.Perempuan    930\n\n\nSehingga penjelasan untuk konstruksi fungsi diatas akan seperti berikut :\n\n\n\n\n\n\n\nElemen\nDeskripsi\n\n\nmelt\nFunction untuk melakukan transformasi dari kolom ke baris\n\n\ndata=penduduk.dki.xlsx\nArgumen data yang diisi dengan variable penduduk.dki.xlsx, yaitu data frame hasil pembacaan dari file Excel data kependudukan DKI\n\n\nid.vars= c( \"NAMA.KECAMATAN\", \"NAMA.KELURAHAN\")\nVector dari field-field kolom yang akan menjadi identitas – dimana field tidak akan mengalami transformasi tapi tetap diambil\n\n\nmeasure.vars = c(\"35-39.Laki-Laki\", \"35-39.Perempuan\")\nNama variable hasil transformasi\n\n\nvariable.name= \"DEMOGRAFIK\"\nNama variable untuk menampung nama kolom transformasi\n\n\nvalue.name= \"JUMLAH\"\nNama variable untuk menampung isi data dari kolom transformasi"
  },
  {
    "objectID": "datatransform.html",
    "href": "datatransform.html",
    "title": "Topik 4 | Data Transform",
    "section": "",
    "text": "Data Transformation adalah salah satu aspek kunci dari rangkaian analisis data, data science atau bahkan untuk machine learning. Paket R yang akan kita gunakan di sini adalah tidyverse.\nbeberapa fungsi yang dapat dipakai untuk proses Data Transform seperti :"
  },
  {
    "objectID": "datatransform.html#logical-vector",
    "href": "datatransform.html#logical-vector",
    "title": "Data Transform",
    "section": "1. Logical Vector",
    "text": "1. Logical Vector\nLogical Vektor adalah jenis vektor yang paling sederhana karena setiap elemen hanya dapat menjadi salah satu dari tiga nilai yang mungkin: TRUE , FALSE , dan NA . Relatif jarang menemukan vektor logis dalam data mentah.\nPerbandingan Cara yang sangat umum untuk membuat vektor logis adalah melalui perbandingan numerik dengan &lt; , , , &gt;= != , , &lt;= &gt; dan == . Sebagian besar telah dibuat variabel logis sementara di dalam filter(). Misalnya, filter berikut menemukan semua keberangkatan siang hari yang tiba kira-kira tepat waktu:\n\n#&gt; Load paket tidyverse dan datasets jadwal penerbangan \nlibrary(tidyverse)\nlibrary(nycflights13)\n\n#&gt; Tampilkan keberangkatan tepat waktu\nflights |&gt; \n  filter(dep_time &gt; 600 & dep_time &lt; 2000 & abs(arr_delay) &lt; 20)\n\n# A tibble: 172,286 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      601            600         1      844            850\n 2  2013     1     1      602            610        -8      812            820\n 3  2013     1     1      602            605        -3      821            805\n 4  2013     1     1      606            610        -4      858            910\n 5  2013     1     1      606            610        -4      837            845\n 6  2013     1     1      607            607         0      858            915\n 7  2013     1     1      611            600        11      945            931\n 8  2013     1     1      613            610         3      925            921\n 9  2013     1     1      615            615         0      833            842\n10  2013     1     1      622            630        -8     1017           1014\n# ℹ 172,276 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\nKita juga bisa mengatur susunan berdasarkan variabel dengan fungsi arrange()\n\nflights |&gt; \n  filter(month == 1, day == 1) |&gt; \n  arrange(dep_time)\n\n# A tibble: 842 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 832 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "datatransform.html#library-paket",
    "href": "datatransform.html#library-paket",
    "title": "Topik 4 | Data Transform",
    "section": "1. Library Paket",
    "text": "1. Library Paket\nDalam bab ini kita akan fokus pada paket dplyr, bagian dari tidyverse. Dengan menggunakan datasets dari paket nycflights13, dan menggunakan command pada baris, kolom, serta kelompok untuk membantu memahami data.\n\n#&gt; Load paket tidyverse dan datasets jadwal penerbangan \nlibrary(tidyverse)\nlibrary(nycflights13)\n\nUntuk mengeksplorasi dplyr, kita akan menggunakan nycflights13::flights . Kumpulan data ini berisi 336.776 penerbangan yang berangkat dari New York City pada tahun 2013. Data berasal dari Biro Statistik Transportasi AS, dan didokumentasikan dalam flights.\n\nflights\n\n# A tibble: 336,776 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 336,766 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\nflights adalah jenis tibble, frame khusus yang digunakan oleh tidyverse. Perbedaan paling penting antara tibbles dan data.frame adalah cara tibbles menampilkan data; keduanya dirancang untuk menghimpun data besar, sehingga hanya menampilkan beberapa baris pertama dan hanya kolom yang muat di satu layar. Ada beberapa opsi untuk melihat semuanya, seperti glimpse() untuk menampilkan semua kolom.\n\nglimpse(flights)\n\nRows: 336,776\nColumns: 19\n$ year           &lt;int&gt; 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2…\n$ month          &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ day            &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ dep_time       &lt;int&gt; 517, 533, 542, 544, 554, 554, 555, 557, 557, 558, 558, …\n$ sched_dep_time &lt;int&gt; 515, 529, 540, 545, 600, 558, 600, 600, 600, 600, 600, …\n$ dep_delay      &lt;dbl&gt; 2, 4, 2, -1, -6, -4, -5, -3, -3, -2, -2, -2, -2, -2, -1…\n$ arr_time       &lt;int&gt; 830, 850, 923, 1004, 812, 740, 913, 709, 838, 753, 849,…\n$ sched_arr_time &lt;int&gt; 819, 830, 850, 1022, 837, 728, 854, 723, 846, 745, 851,…\n$ arr_delay      &lt;dbl&gt; 11, 20, 33, -18, -25, 12, 19, -14, -8, 8, -2, -3, 7, -1…\n$ carrier        &lt;chr&gt; \"UA\", \"UA\", \"AA\", \"B6\", \"DL\", \"UA\", \"B6\", \"EV\", \"B6\", \"…\n$ flight         &lt;int&gt; 1545, 1714, 1141, 725, 461, 1696, 507, 5708, 79, 301, 4…\n$ tailnum        &lt;chr&gt; \"N14228\", \"N24211\", \"N619AA\", \"N804JB\", \"N668DN\", \"N394…\n$ origin         &lt;chr&gt; \"EWR\", \"LGA\", \"JFK\", \"JFK\", \"LGA\", \"EWR\", \"EWR\", \"LGA\",…\n$ dest           &lt;chr&gt; \"IAH\", \"IAH\", \"MIA\", \"BQN\", \"ATL\", \"ORD\", \"FLL\", \"IAD\",…\n$ air_time       &lt;dbl&gt; 227, 227, 160, 183, 116, 150, 158, 53, 140, 138, 149, 1…\n$ distance       &lt;dbl&gt; 1400, 1416, 1089, 1576, 762, 719, 1065, 229, 944, 733, …\n$ hour           &lt;dbl&gt; 5, 5, 5, 5, 6, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 6, 6, 6…\n$ minute         &lt;dbl&gt; 15, 29, 40, 45, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 0…\n$ time_hour      &lt;dttm&gt; 2013-01-01 05:00:00, 2013-01-01 05:00:00, 2013-01-01 0…\n\n\nDalam kedua tampilan, nama variabel diikuti oleh singkatan yang memberi tahu jenis setiap variabel: &lt;int&gt; adalah kependekan dari bilangan bulat, &lt;dbl&gt; kependekan dari double ( bilangan real), &lt;chr&gt; untuk karakter (string) dan &lt;dttm&gt; untuk tanggal-waktu.\n\n1.2 dplyr\ndplyr adalah sebuah paket dalam bahasa pemrograman R yang digunakan untuk memanipulasi data dengan mudah dan paket ini menyediakan banyak fungsi yang berguna untuk memfilter, mengurutkan, mengelompokkan, dan mengubah data. Package dplyr dibuat oleh Hadley Wickham juga sebagai penulis dalam acuan pada modul ini. Fungsi-fungsi tersebut dapat digunakan untuk memanipulasi data dengan lebih cepat dan mudah dibandingkan dengan menggunakan fungsi bawaan Rdplyr yang juga merupakan bagian dari kelompok paket tidyverse."
  },
  {
    "objectID": "datatransform.html#numeric",
    "href": "datatransform.html#numeric",
    "title": "Data Transform",
    "section": "2. Numeric",
    "text": "2. Numeric"
  },
  {
    "objectID": "datatransform.html#baris-data",
    "href": "datatransform.html#baris-data",
    "title": "Topik 4 | Data Transform",
    "section": "2. Baris Data",
    "text": "2. Baris Data\nFungsi terpenting pada baris himpunan data adalah filter() , yang mengubah baris tanpa mengubah urutannya, dan arrange() , yang mengubah urutan baris tanpa mengubah mana yang ada. Kedua fungsi hanya mempengaruhi baris, dan kolom dibiarkan tidak berubah. Ada juga distinct() untuk menemukan baris dengan nilai unik tetapi tidak seperti arrange() dan filter().\n\n2.1 filter()\nfilter() memungkinkan kita menampilkan baris berdasarkan nilai kolom. Misalnya, kita dapat menemukan semua penerbangan yang berangkat terlambat lebih dari 120 menit (dua jam):\n\nflights |&gt; \n  filter(dep_delay &gt; 120)\n\n# A tibble: 9,723 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      848           1835       853     1001           1950\n 2  2013     1     1      957            733       144     1056            853\n 3  2013     1     1     1114            900       134     1447           1222\n 4  2013     1     1     1540           1338       122     2020           1825\n 5  2013     1     1     1815           1325       290     2120           1542\n 6  2013     1     1     1842           1422       260     1958           1535\n 7  2013     1     1     1856           1645       131     2212           2005\n 8  2013     1     1     1934           1725       129     2126           1855\n 9  2013     1     1     1938           1703       155     2109           1823\n10  2013     1     1     1942           1705       157     2124           1830\n# ℹ 9,713 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\nUntuk filtering &gt; (lebih besar dari), dapat menggunakan &gt;= (lebih besar dari atau sama dengan), &lt; (kurang dari), &lt;= (kurang dari atau sama dengan), == (sama dengan), dan != (tidak sama dengan). Kita juga dapat menggabungkan kondisi untuk menunjukkan “AND” (periksa kedua kondisi) dengan & , serta | untuk menunjukkan “OR” (periksa salah satu kondisi):\nMisal penerbangan pada keberangkatan 1 Januari\n\n#&gt; Menggunakan perintah & untuk 2 kondisi yang harus dipenuhi (AND)\nflights |&gt; \n  filter(month == 1 & day == 1)\n\n# A tibble: 842 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 832 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\nAtau penerbangan pada keberangkatan di bukan Januari atau Februari\n\n#&gt; Menggunakan perintah | untuk antara 1 kondisi yang harus dipenuhi (OR)\nflights |&gt; \n  filter(month == 1 | month == 2)\n\n# A tibble: 51,955 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 51,945 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\n2.2 arrange()\nKita dapat menggunakan desc() di dalam arrange() untuk mengurutkan ulang data.frame berdasarkan kolom tersebut (besar ke kecil). Misalnya, mengurutkan data penerbangan dari yang paling sering tertunda hingga paling jarang:\n\n#&gt; Perintah mengurutkan data berdasarkan kolom dep_delay\nflights |&gt; \n  arrange(desc(dep_delay))\n\n# A tibble: 336,776 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     9      641            900      1301     1242           1530\n 2  2013     6    15     1432           1935      1137     1607           2120\n 3  2013     1    10     1121           1635      1126     1239           1810\n 4  2013     9    20     1139           1845      1014     1457           2210\n 5  2013     7    22      845           1600      1005     1044           1815\n 6  2013     4    10     1100           1900       960     1342           2211\n 7  2013     3    17     2321            810       911      135           1020\n 8  2013     6    27      959           1900       899     1236           2226\n 9  2013     7    22     2257            759       898      121           1026\n10  2013    12     5      756           1700       896     1058           2020\n# ℹ 336,766 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\n2.3 distinct()\ndistinct() digunakan untuk menampilkan semua baris unik dalam himpunan data sehingga menghilangkan baris data duplikat. Kita juga dapat menambahkan kombinasi untuk kolom yang berbeda dari beberapa variabel.\n\n# Menghilangkan duplicate baris, jika ada\nflights |&gt; \n  distinct()\n\n# A tibble: 336,776 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 336,766 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\natau kita akan mencari keberangkatan dan tujuan (unik) untuk setiap penerbangan sehingga hanya membaca satu tipe penerbangan yang semacam, hilangkan duplikat dengan kolom origin dan destination\n\n#&gt; Cari keberangkatan dan tujuan tanpa duplikat \nflights |&gt; \n  distinct(origin, dest)\n\n# A tibble: 224 × 2\n   origin dest \n   &lt;chr&gt;  &lt;chr&gt;\n 1 EWR    IAH  \n 2 LGA    IAH  \n 3 JFK    MIA  \n 4 JFK    BQN  \n 5 LGA    ATL  \n 6 EWR    ORD  \n 7 EWR    FLL  \n 8 LGA    IAD  \n 9 JFK    MCO  \n10 LGA    ORD  \n# ℹ 214 more rows\n\n\nkita juga dapat menghitung jumlah penerbangan yang semacam tadi dengan fungsi count()\n\nflights |&gt;\n  count(origin, dest, sort = TRUE)\n\n# A tibble: 224 × 3\n   origin dest      n\n   &lt;chr&gt;  &lt;chr&gt; &lt;int&gt;\n 1 JFK    LAX   11262\n 2 LGA    ATL   10263\n 3 LGA    ORD    8857\n 4 JFK    SFO    8204\n 5 LGA    CLT    6168\n 6 EWR    ORD    6100\n 7 JFK    BOS    5898\n 8 LGA    MIA    5781\n 9 JFK    MCO    5464\n10 EWR    BOS    5327\n# ℹ 214 more rows"
  },
  {
    "objectID": "datatransform.html#kolom-data",
    "href": "datatransform.html#kolom-data",
    "title": "Topik 4 | Data Transform",
    "section": "3. Kolom Data",
    "text": "3. Kolom Data\nAda empat command penting yang mempengaruhi kolom tanpa mengubah baris: mutate() untuk membuat kolom baru yang berasal dari kolom yang ada, select() untuk mengubah atau memilih dari kolom yang ada, rename() mengubah nama kolom, dan relocate() mengubah posisi kolom.\n\n3.1 mutate()\nFubgsi dari mutate() adalah untuk menambahkan kolom baru untuk hasil perhitungan dari kolom yang ada. Dalam transformasi data, kita akan mempelajari sejumlah fungsi yang dapat digunakan untuk memanipulasi berbagai jenis variabel. Misal kita akan mencari berapa banyak waktu penerbangan tertunda (gain), dan kecepatan dalam mil per jam (speed):\n\n#&gt; Fungsi mutate dengan menambah kolom gain dan speed\nflights |&gt; \n  mutate(\n    gain = dep_delay - arr_delay,\n    speed = distance / air_time * 60,\n    \n    \n    #&gt; Pindahkan kolom perhitungan (gain dan speed) diposisi paling depan\n    .before = 1\n  )\n\n# A tibble: 336,776 × 21\n    gain speed  year month   day dep_time sched_dep_time dep_delay arr_time\n   &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;\n 1    -9  370.  2013     1     1      517            515         2      830\n 2   -16  374.  2013     1     1      533            529         4      850\n 3   -31  408.  2013     1     1      542            540         2      923\n 4    17  517.  2013     1     1      544            545        -1     1004\n 5    19  394.  2013     1     1      554            600        -6      812\n 6   -16  288.  2013     1     1      554            558        -4      740\n 7   -24  404.  2013     1     1      555            600        -5      913\n 8    11  259.  2013     1     1      557            600        -3      709\n 9     5  405.  2013     1     1      557            600        -3      838\n10   -10  319.  2013     1     1      558            600        -2      753\n# ℹ 336,766 more rows\n# ℹ 12 more variables: sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;,\n#   flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;,\n#   distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\n3.2 select()\nTidak jarang kita mendapatkan kumpulan data dengan ratusan atau bahkan ribuan variabel. Dalam situasi ini, tantangan pertama seringkali kita hanya ingin berfokus pada variabel yang kita perlukan, select() Memungkinkan untuk memperbesar subset dengan cepat menggunakan operasi berdasarkan nama variabel. Misal, memilih kolom berdasarkan tahun, bulan, dan hari pada datasets penerbangan tadi :\n\n#&gt; Fungsi select hanya berdasarkan tahun,bulan, dan hari\nflights |&gt; \n  select(year, month, day)\n\n# A tibble: 336,776 × 3\n    year month   day\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;\n 1  2013     1     1\n 2  2013     1     1\n 3  2013     1     1\n 4  2013     1     1\n 5  2013     1     1\n 6  2013     1     1\n 7  2013     1     1\n 8  2013     1     1\n 9  2013     1     1\n10  2013     1     1\n# ℹ 336,766 more rows\n\n\natau tampilkan semua kolom kecuali dari rentang kolom tahun sampai hari\n\n#&gt; Fungsi menampilkan data kecuali kolom tahun sampai hari\nflights |&gt; \n  select(!year:day)\n\n# A tibble: 336,776 × 16\n   dep_time sched_dep_time dep_delay arr_time sched_arr_time arr_delay carrier\n      &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt; &lt;chr&gt;  \n 1      517            515         2      830            819        11 UA     \n 2      533            529         4      850            830        20 UA     \n 3      542            540         2      923            850        33 AA     \n 4      544            545        -1     1004           1022       -18 B6     \n 5      554            600        -6      812            837       -25 DL     \n 6      554            558        -4      740            728        12 UA     \n 7      555            600        -5      913            854        19 B6     \n 8      557            600        -3      709            723       -14 EV     \n 9      557            600        -3      838            846        -8 B6     \n10      558            600        -2      753            745         8 AA     \n# ℹ 336,766 more rows\n# ℹ 9 more variables: flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;,\n#   air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\natau mungkin tampilkan semua kolom yang merupakan tipe data character\n\n#&gt; Fungsi menampilkan data hanya kolom yang mempunyai tipe data character\nflights |&gt; \n  select(where(is.character))\n\n# A tibble: 336,776 × 4\n   carrier tailnum origin dest \n   &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt;\n 1 UA      N14228  EWR    IAH  \n 2 UA      N24211  LGA    IAH  \n 3 AA      N619AA  JFK    MIA  \n 4 B6      N804JB  JFK    BQN  \n 5 DL      N668DN  LGA    ATL  \n 6 UA      N39463  EWR    ORD  \n 7 B6      N516JB  EWR    FLL  \n 8 EV      N829AS  LGA    IAD  \n 9 B6      N593JB  JFK    MCO  \n10 AA      N3ALAA  LGA    ORD  \n# ℹ 336,766 more rows\n\n\nKita juga dapat menampilkan kolom dengan nama kolom yang kita inginkan, misal kita akan menampilkan data pada kolom tailnum dengan tampilan kolom kode_ekor_pesawat\n\n#&gt; Tampilkan data tailnum pada kode_ekor_pesawat\nflights |&gt; \n  select(kode_ekor_pesawat = tailnum)\n\n# A tibble: 336,776 × 1\n   kode_ekor_pesawat\n   &lt;chr&gt;            \n 1 N14228           \n 2 N24211           \n 3 N619AA           \n 4 N804JB           \n 5 N668DN           \n 6 N39463           \n 7 N516JB           \n 8 N829AS           \n 9 N593JB           \n10 N3ALAA           \n# ℹ 336,766 more rows\n\n\n\n\n3.3 rename()\nHal ini sama ketika kita ingin tetap memakai semua kolom dan hanya ingin mengganti nama beberapa kolom, kita dapat menggunakan rename(). Misal kita akan menampilkan detaset penerbangan tadi dengan mengubah nama kolom year dan month menjadi tahun dan bulan :\n\n#&gt; Menampilkan data dengan mengubah nama kolom year & month, jadi tahun & bulan\nflights |&gt; \n  rename(tahun = year, bulan = month )\n\n# A tibble: 336,776 × 19\n   tahun bulan   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 336,766 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\n3.4 relocate()\nGunakan relocate() untuk memindahkan variabel, kita mungkin ingin mengumpulkan variabel terkait atau memindahkan variabel penting ke depan. Secara default fungsi relocate() akan memindahkan variabel ke depan:\n\n#&gt; Memindahkan kolom time_hour dan air_time ke paling depan\nflights |&gt; \n  relocate(time_hour, air_time)\n\n# A tibble: 336,776 × 19\n   time_hour           air_time  year month   day dep_time sched_dep_time\n   &lt;dttm&gt;                 &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;\n 1 2013-01-01 05:00:00      227  2013     1     1      517            515\n 2 2013-01-01 05:00:00      227  2013     1     1      533            529\n 3 2013-01-01 05:00:00      160  2013     1     1      542            540\n 4 2013-01-01 05:00:00      183  2013     1     1      544            545\n 5 2013-01-01 06:00:00      116  2013     1     1      554            600\n 6 2013-01-01 05:00:00      150  2013     1     1      554            558\n 7 2013-01-01 06:00:00      158  2013     1     1      555            600\n 8 2013-01-01 06:00:00       53  2013     1     1      557            600\n 9 2013-01-01 06:00:00      140  2013     1     1      557            600\n10 2013-01-01 06:00:00      138  2013     1     1      558            600\n# ℹ 336,766 more rows\n# ℹ 12 more variables: dep_delay &lt;dbl&gt;, arr_time &lt;int&gt;, sched_arr_time &lt;int&gt;,\n#   arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;,\n#   dest &lt;chr&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;"
  },
  {
    "objectID": "datatransform.html#kelompok-data",
    "href": "datatransform.html#kelompok-data",
    "title": "Topik 4 | Data Transform",
    "section": "4. Kelompok Data",
    "text": "4. Kelompok Data\nTidak hanya dengan baris dan kolom fungsi dplyr juga dapat digunakan untuk mengelompokkan data dengan command group_by() dan summarize().\n\n4.1 group_by()\nKita bisa menggunakan group_by() untuk membagi datasets menjadi kelompok-kelompok yang penting untuk analisis data:\n\n#&gt; Fungsi grouping data berdasarkan bulan\nflights |&gt; \n  group_by(month)\n\n# A tibble: 336,776 × 19\n# Groups:   month [12]\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 336,766 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\nDapat dilihat bahwa output data dikelompokkan berdasarkan bulan Groups: month [12] . Dengan menambahkan fungsi group_by() artinya akan mengubah perintah berikutnya yang akan diterapkan pada datasets.\n\n\n4.2 summarize ()\nFungsi pengelompokan selanjutnya dengan summarize() untuk menghitung statistik dari grouping yang telah dibuat. Misal, pada datasets penerbangan tadi kita akan menghitung rata-rata penundaan (delay) keberangkatan per bulan :\n\n#&gt; Fungsi pengelompokan per bulan \nflights |&gt; \n  group_by(month) |&gt; \n  \n  \n#&gt; Command menghitung rata-rata keterlambatan \n  summarize(\n    delay = mean(dep_delay, na.rm = TRUE)\n  )\n\n# A tibble: 12 × 2\n   month delay\n   &lt;int&gt; &lt;dbl&gt;\n 1     1 10.0 \n 2     2 10.8 \n 3     3 13.2 \n 4     4 13.9 \n 5     5 13.0 \n 6     6 20.8 \n 7     7 21.7 \n 8     8 12.6 \n 9     9  6.72\n10    10  6.24\n11    11  5.44\n12    12 16.6 \n\n\nmaka akan terlihat berapa rata-rata keterlambatan penerbangan pada tiap bulan dari Januari (1) sampai Desember (12)"
  },
  {
    "objectID": "modelling.html",
    "href": "modelling.html",
    "title": "Topik 6 | Modelling",
    "section": "",
    "text": "Modeling (atau pemodelan dalam Bahasa Indonesia) merujuk pada proses pembuatan representasi abstrak dari suatu sistem fisik, konsep, atau fenomena dengan tujuan untuk memahami, menganalisis, meramalkan, atau mensimulasikan perilaku sistem tersebut. Pemodelan dapat diterapkan dalam berbagai disiplin ilmu dan konteks, termasuk dalam ilmu pengetahuan, teknik, bisnis, seni, dan banyak lainnya\n\n\n\nModeling dalam R merujuk pada penggunaan bahasa pemrograman dan lingkungan pemodelan statistik R untuk membuat dan mengimplementasikan berbagai jenis model atau representasi matematis dari data, sistem, atau fenomena. R adalah bahasa pemrograma n dan lingkungan komputasi statistik yang sangat kuat dan populer, digunakan secara luas dalam analisis statistik, penelitian ilmiah, dan pemodelan statistik."
  },
  {
    "objectID": "modelling.html#pendahuluan",
    "href": "modelling.html#pendahuluan",
    "title": "Topik 6 | Modelling",
    "section": "",
    "text": "Dalam bab ini, Anda akan mempelajari alat untuk bekerja dengan vektor logis. Vektor logis adalah jenis vektor yang paling sederhana karena setiap elemen hanya dapat menjadi salah satu dari tiga nilai yang mungkin: TRUE , FALSE , dan NA . Relatif jarang menemukan vektor logis dalam data mentah Anda, tetapi Anda akan membuat dan memanipulasinya.\n\n\nlibrary(tidyverse)\nlibrary(nycflights13)\n\nNamun, saat kita mulai membahas lebih banyak alat, tidak akan selalu ada contoh nyata yang sempurna. Jadi kita akan mulai membuat beberapa data dummy dengan c() :\n\nx &lt;- c(1, 2, 3, 5, 7, 11, 13)\nx * 2\n\n[1]  2  4  6 10 14 22 26\n\n\n\ndf &lt;- tibble(x)\ndf |&gt; \n  mutate(y = x * 2)\n\n# A tibble: 7 × 2\n      x     y\n  &lt;dbl&gt; &lt;dbl&gt;\n1     1     2\n2     2     4\n3     3     6\n4     5    10\n5     7    14\n6    11    22\n7    13    26"
  },
  {
    "objectID": "modelling.html#perbandingan",
    "href": "modelling.html#perbandingan",
    "title": "Topik 6 | Modelling",
    "section": "Perbandingan",
    "text": "Perbandingan\nCara yang sangat umum untuk membuat vektor logis adalah melalui perbandingan numerik dengan &lt; , , , &gt;= != , , &lt;= &gt; dan == . Sejauh ini, kami sebagian besar telah membuat variabel logis sementara di dalam filter() - mereka dihitung, digunakan, dan kemudian dibuang. Misalnya, filter berikut menemukan semua keberangkatan siang hari yang tiba kira-kira tepat waktu:\n\nflights |&gt; \n  filter(dep_time &gt; 600 & dep_time &lt; 2000 & abs(arr_delay) &lt; 20)\n\n# A tibble: 172,286 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      601            600         1      844            850\n 2  2013     1     1      602            610        -8      812            820\n 3  2013     1     1      602            605        -3      821            805\n 4  2013     1     1      606            610        -4      858            910\n 5  2013     1     1      606            610        -4      837            845\n 6  2013     1     1      607            607         0      858            915\n 7  2013     1     1      611            600        11      945            931\n 8  2013     1     1      613            610         3      925            921\n 9  2013     1     1      615            615         0      833            842\n10  2013     1     1      622            630        -8     1017           1014\n# ℹ 172,276 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\nflights |&gt; \n  mutate(\n    daytime = dep_time &gt; 600 & dep_time &lt; 2000,\n    approx_ontime = abs(arr_delay) &lt; 20,\n    .keep = \"used\"\n  )\n\n# A tibble: 336,776 × 4\n   dep_time arr_delay daytime approx_ontime\n      &lt;int&gt;     &lt;dbl&gt; &lt;lgl&gt;   &lt;lgl&gt;        \n 1      517        11 FALSE   TRUE         \n 2      533        20 FALSE   FALSE        \n 3      542        33 FALSE   FALSE        \n 4      544       -18 FALSE   TRUE         \n 5      554       -25 FALSE   FALSE        \n 6      554        12 FALSE   TRUE         \n 7      555        19 FALSE   TRUE         \n 8      557       -14 FALSE   TRUE         \n 9      557        -8 FALSE   TRUE         \n10      558         8 FALSE   TRUE         \n# ℹ 336,766 more rows"
  },
  {
    "objectID": "datatidy.html",
    "href": "datatidy.html",
    "title": "Topik 3 | Data Tidy",
    "section": "",
    "text": "Sebelum memulai analisa terhadap data yang kita miliki, umumnya kita akan merapikan data yang akan kita gunakan. Tujuannya adalah agar data yang akan digunakan sudah siap untuk dilakukan analisa, dimana pada dataset perlu adanya kejelasan antara variabel dan nilai (value), serta untuk mempermudah dalam memperoleh informasi pada data. Sebelum kita melakukan analisa di dataset tersebut, kita harus tahu dulu apa saja syarat suatu dataset dikatakan rapi (tidy). Berikut adalah syaratnya:\n\nSetiap variabel harus memiliki kolomnya sendiri\nSetiap observasi harus memiliki barisnya sendiri\nSetiap nilai berada pada sel tersendiri\n\nKetiga syarat tersebut saling berhubungan sehingga jika salah satu syarat tersebut tidak terpenuhi, maka dataset belum bisa dikatakan tidy. Ketiga syarat tersebut dapat divisualisasikan :"
  },
  {
    "objectID": "datatidy.html#konsep-data-tidy",
    "href": "datatidy.html#konsep-data-tidy",
    "title": "Topik 3 | Data Tidy",
    "section": "",
    "text": "Sebelum memulai analisa terhadap data yang kita miliki, umumnya kita akan merapikan data yang akan kita gunakan. Tujuannya adalah agar data yang akan digunakan sudah siap untuk dilakukan analisa, dimana pada dataset perlu adanya kejelasan antara variabel dan nilai (value), serta untuk mempermudah dalam memperoleh informasi pada data. Sebelum kita melakukan analisa di dataset tersebut, kita harus tahu dulu apa saja syarat suatu dataset dikatakan rapi (tidy). Berikut adalah syaratnya:\n\nSetiap variabel harus memiliki kolomnya sendiri\nSetiap observasi harus memiliki barisnya sendiri\nSetiap nilai berada pada sel tersendiri\n\nKetiga syarat tersebut saling berhubungan sehingga jika salah satu syarat tersebut tidak terpenuhi, maka dataset belum bisa dikatakan tidy. Ketiga syarat tersebut dapat divisualisasikan :"
  },
  {
    "objectID": "datatidy.html#data-tidy-tidyverse",
    "href": "datatidy.html#data-tidy-tidyverse",
    "title": "Topik 3 | Data Tidy",
    "section": "2. Data Tidy (tidyverse)",
    "text": "2. Data Tidy (tidyverse)\nDalam bab ini kita akan menggunakan element tidyR, sebuah paket yang menyediakan banyak tools untuk membantu merapikan kumpulan data yang berantakan, tidyR adalah bagian dari tidyverse.\n\n#&gt; Load paket tidyverse\nlibrary(tidyverse)\n\nContohnya tabel dibawah ini menunjukkan data yang sama yang disusun dalam tiga cara berbeda. Setiap dataset menunjukkan nilai yang sama dari empat variabel: negara, tahun, populasi, dan jumlah kasus TB (tuberkulosis), tetapi setiap dataset mengatur posisi nilai-nilainya dengan cara yang berbeda.\n\n#&gt; Tampilkan Tabel 1\ntable1\n\n# A tibble: 6 × 4\n  country      year  cases population\n  &lt;chr&gt;       &lt;dbl&gt;  &lt;dbl&gt;      &lt;dbl&gt;\n1 Afghanistan  1999    745   19987071\n2 Afghanistan  2000   2666   20595360\n3 Brazil       1999  37737  172006362\n4 Brazil       2000  80488  174504898\n5 China        1999 212258 1272915272\n6 China        2000 213766 1280428583\n\n#&gt; Tampilkan Tabel 2\ntable2\n\n# A tibble: 12 × 4\n   country      year type            count\n   &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt;           &lt;dbl&gt;\n 1 Afghanistan  1999 cases             745\n 2 Afghanistan  1999 population   19987071\n 3 Afghanistan  2000 cases            2666\n 4 Afghanistan  2000 population   20595360\n 5 Brazil       1999 cases           37737\n 6 Brazil       1999 population  172006362\n 7 Brazil       2000 cases           80488\n 8 Brazil       2000 population  174504898\n 9 China        1999 cases          212258\n10 China        1999 population 1272915272\n11 China        2000 cases          213766\n12 China        2000 population 1280428583\n\n#&gt; Tampilkan Tabel 3\ntable3\n\n# A tibble: 6 × 3\n  country      year rate             \n  &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt;            \n1 Afghanistan  1999 745/19987071     \n2 Afghanistan  2000 2666/20595360    \n3 Brazil       1999 37737/172006362  \n4 Brazil       2000 80488/174504898  \n5 China        1999 212258/1272915272\n6 China        2000 213766/1280428583\n\n\nDapat dilihat bahwa tabel 1 akan jauh lebih mudah dipahami untuk proses analisis dalam tidyverse karena rapi (tidy)\nMaka dari itu, terdapat keuntungan mengapa data harus rapi (tidy) :\n\nKonsistensi dalam menyimpan data, jika kita memiliki struktur data yang konsisten, akan lebih mudah untuk mempelajari tools yang dipakai untuk mem-prosesnya karena memiliki keseragaman.\nLebih mudah untuk menempatkan variabel dalam kolom karena memungkinkan transformasi data yang rapi (tidy) secara terstruktur.\n\n\n2.1 Paket tidyverse\nAda sejumlah package R yang dapat digunakan untuk mengatur form data rapi (tidy) :\n\nggplot2: sistem plot berdasarkan tata grafik\nmagrittr: mendefinisikan operator untuk fungsi chaining bersama %&gt;% dalam serangkaian operasi pada data\ndplyr: serangkaian fungsi (cepat) untuk bekerja dengan frame data\ntidyr: data yang mudah dirapikan dengan spread() fungsi AND gather()\n\nMisalnya kita akan manampilkan rentang data dengan ggplot\n\n#&gt; Hitung rate per 10,000\ntable1 |&gt;\n  mutate(rate = cases / population * 10000)\n\n# A tibble: 6 × 5\n  country      year  cases population  rate\n  &lt;chr&gt;       &lt;dbl&gt;  &lt;dbl&gt;      &lt;dbl&gt; &lt;dbl&gt;\n1 Afghanistan  1999    745   19987071 0.373\n2 Afghanistan  2000   2666   20595360 1.29 \n3 Brazil       1999  37737  172006362 2.19 \n4 Brazil       2000  80488  174504898 4.61 \n5 China        1999 212258 1272915272 1.67 \n6 China        2000 213766 1280428583 1.67 \n\n#&gt; Hitung total cases per tahun\ntable1 |&gt; \n  group_by(year) |&gt; \n  summarize(total_cases = sum(cases))\n\n# A tibble: 2 × 2\n   year total_cases\n  &lt;dbl&gt;       &lt;dbl&gt;\n1  1999      250740\n2  2000      296920\n\n#&gt; Visualisasi perubahan setiap waktu\nggplot(table1, aes(x = year, y = cases)) +\n  geom_line(aes(group = country), color = \"grey50\") +\n  geom_point(aes(color = country, shape = country)) +\n  scale_x_continuous(breaks = c(1999, 2000))"
  },
  {
    "objectID": "datatidy.html#pivot-data",
    "href": "datatidy.html#pivot-data",
    "title": "Topik 3 | Data Tidy",
    "section": "3. Pivot Data",
    "text": "3. Pivot Data\nPivot Data berfungsi untuk merangkum, mengelompokkan, mengeksplorasi, mempresentasikan , menghitung, dan menganalisa data. Kita bisa memanipulasi dan mengubah layout atau tampilan data sesuai kebutuhan.\n\n3.1 Cara Kerja Pivot\nMisalkan kita memiliki tiga pasien dengan id_pasien Ali, Budi, dan Candra, dan kita melakukan dua pengukuran tekanan darah pada setiap pasien. Kita akan membuat data dengan fungsi tribble() :\n\ndata_pasien &lt;- tribble(\n  ~id_pasien,  ~tekanan_darah1, ~tekanan_darah2,\n   \"Ali\",  100,  120,\n   \"Budi\",  140,  115,\n   \"Candra\",  120,  125\n)\n\ndata_pasien\n\n# A tibble: 3 × 3\n  id_pasien tekanan_darah1 tekanan_darah2\n  &lt;chr&gt;              &lt;dbl&gt;          &lt;dbl&gt;\n1 Ali                  100            120\n2 Budi                 140            115\n3 Candra               120            125\n\n\nLalu kita akan merapikan data agar lebih mudah dalam analisa tekanan darah pasien dengan menambah kolom pengukuran dan nilai pada fungsi pivot longer:\n\ndata_pasien |&gt; \n  pivot_longer(\n    cols = tekanan_darah1:tekanan_darah2,\n    names_to = \"pengukuran\",\n    values_to = \"nilai\"\n  )\n\n# A tibble: 6 × 3\n  id_pasien pengukuran     nilai\n  &lt;chr&gt;     &lt;chr&gt;          &lt;dbl&gt;\n1 Ali       tekanan_darah1   100\n2 Ali       tekanan_darah2   120\n3 Budi      tekanan_darah1   140\n4 Budi      tekanan_darah2   115\n5 Candra    tekanan_darah1   120\n6 Candra    tekanan_darah2   125\n\n\nSehingga gambaran proses pivot data akan seperti berikut :\n\n\n\n\n\n\n\n\n\n\n\n3.2 Visualisasi Pivot Data\nMisal kita akan menganalisa data pada datasets billboard peringkat lagu tahun 2000\n\n#&gt; Load datasets billboard\nbillboard\n\n# A tibble: 317 × 79\n   artist     track date.entered   wk1   wk2   wk3   wk4   wk5   wk6   wk7   wk8\n   &lt;chr&gt;      &lt;chr&gt; &lt;date&gt;       &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 2 Pac      Baby… 2000-02-26      87    82    72    77    87    94    99    NA\n 2 2Ge+her    The … 2000-09-02      91    87    92    NA    NA    NA    NA    NA\n 3 3 Doors D… Kryp… 2000-04-08      81    70    68    67    66    57    54    53\n 4 3 Doors D… Loser 2000-10-21      76    76    72    69    67    65    55    59\n 5 504 Boyz   Wobb… 2000-04-15      57    34    25    17    17    31    36    49\n 6 98^0       Give… 2000-08-19      51    39    34    26    26    19     2     2\n 7 A*Teens    Danc… 2000-07-08      97    97    96    95   100    NA    NA    NA\n 8 Aaliyah    I Do… 2000-01-29      84    62    51    41    38    35    35    38\n 9 Aaliyah    Try … 2000-03-18      59    53    38    28    21    18    16    14\n10 Adams, Yo… Open… 2000-08-26      76    76    74    69    68    67    61    58\n# ℹ 307 more rows\n# ℹ 68 more variables: wk9 &lt;dbl&gt;, wk10 &lt;dbl&gt;, wk11 &lt;dbl&gt;, wk12 &lt;dbl&gt;,\n#   wk13 &lt;dbl&gt;, wk14 &lt;dbl&gt;, wk15 &lt;dbl&gt;, wk16 &lt;dbl&gt;, wk17 &lt;dbl&gt;, wk18 &lt;dbl&gt;,\n#   wk19 &lt;dbl&gt;, wk20 &lt;dbl&gt;, wk21 &lt;dbl&gt;, wk22 &lt;dbl&gt;, wk23 &lt;dbl&gt;, wk24 &lt;dbl&gt;,\n#   wk25 &lt;dbl&gt;, wk26 &lt;dbl&gt;, wk27 &lt;dbl&gt;, wk28 &lt;dbl&gt;, wk29 &lt;dbl&gt;, wk30 &lt;dbl&gt;,\n#   wk31 &lt;dbl&gt;, wk32 &lt;dbl&gt;, wk33 &lt;dbl&gt;, wk34 &lt;dbl&gt;, wk35 &lt;dbl&gt;, wk36 &lt;dbl&gt;,\n#   wk37 &lt;dbl&gt;, wk38 &lt;dbl&gt;, wk39 &lt;dbl&gt;, wk40 &lt;dbl&gt;, wk41 &lt;dbl&gt;, wk42 &lt;dbl&gt;, …\n\n\nTiga kolom pertama ( artist , track dan date.entered ) adalah variabel yang mendeskripsikan lagu. Kemudian 76 kolom ( wk1 - wk76 ) yang menggambarkan peringkat lagu di setiap minggu. Lalu, kita akan merapikan data dengan menambah kolom variabel (week) dan nilai sel adalah (rank).\nUntuk merapikan data ini, kita akan menggunakan pivot_longer() :\n\n#&gt; Pangggil fungsi pivot\nbillboard |&gt; \n  pivot_longer(\n    cols = starts_with(\"wk\"), \n  \n#&gt; Nama variabel baru  \n    names_to = \"week\",\n\n#&gt; Nilai Variabel baru\n    values_to = \"rank\",\n    values_drop_na = TRUE\n  )\n\n# A tibble: 5,307 × 5\n   artist  track                   date.entered week   rank\n   &lt;chr&gt;   &lt;chr&gt;                   &lt;date&gt;       &lt;chr&gt; &lt;dbl&gt;\n 1 2 Pac   Baby Don't Cry (Keep... 2000-02-26   wk1      87\n 2 2 Pac   Baby Don't Cry (Keep... 2000-02-26   wk2      82\n 3 2 Pac   Baby Don't Cry (Keep... 2000-02-26   wk3      72\n 4 2 Pac   Baby Don't Cry (Keep... 2000-02-26   wk4      77\n 5 2 Pac   Baby Don't Cry (Keep... 2000-02-26   wk5      87\n 6 2 Pac   Baby Don't Cry (Keep... 2000-02-26   wk6      94\n 7 2 Pac   Baby Don't Cry (Keep... 2000-02-26   wk7      99\n 8 2Ge+her The Hardest Part Of ... 2000-09-02   wk1      91\n 9 2Ge+her The Hardest Part Of ... 2000-09-02   wk2      87\n10 2Ge+her The Hardest Part Of ... 2000-09-02   wk3      92\n# ℹ 5,297 more rows\n\n\n\ncols untuk menentukan kolom mana yang perlu dipivot, Argumen ini menggunakan sintaks yang sama seperti select() jadi di sini kita bisa menggunakan !c(artist, track, date.entered) atau starts_with(\"wk\").\nnames_to untuk menamai variabel yang disimpan dalam nama kolom, dengan variabel week.\nvalues_to untuk menamai variabel yang disimpan dalam nilai sel, pada variabel rank.\n\nSelanjutnya kita ubah type data week dengan parse_number agar menjadi angka sebagai variabel perhitungan\n\nbillboard_longer &lt;- billboard |&gt; \n  pivot_longer(\n    cols = starts_with(\"wk\"), \n    names_to = \"week\", \n    values_to = \"rank\",\n    values_drop_na = TRUE\n  ) |&gt; \n  mutate(\n    week = parse_number(week)\n  )\nbillboard_longer\n\n# A tibble: 5,307 × 5\n   artist  track                   date.entered  week  rank\n   &lt;chr&gt;   &lt;chr&gt;                   &lt;date&gt;       &lt;dbl&gt; &lt;dbl&gt;\n 1 2 Pac   Baby Don't Cry (Keep... 2000-02-26       1    87\n 2 2 Pac   Baby Don't Cry (Keep... 2000-02-26       2    82\n 3 2 Pac   Baby Don't Cry (Keep... 2000-02-26       3    72\n 4 2 Pac   Baby Don't Cry (Keep... 2000-02-26       4    77\n 5 2 Pac   Baby Don't Cry (Keep... 2000-02-26       5    87\n 6 2 Pac   Baby Don't Cry (Keep... 2000-02-26       6    94\n 7 2 Pac   Baby Don't Cry (Keep... 2000-02-26       7    99\n 8 2Ge+her The Hardest Part Of ... 2000-09-02       1    91\n 9 2Ge+her The Hardest Part Of ... 2000-09-02       2    87\n10 2Ge+her The Hardest Part Of ... 2000-09-02       3    92\n# ℹ 5,297 more rows\n\n\nKemudian kita memvisualisasikan bagaimana peringkat lagu dari waktu ke waktu dengan fungsi ggplot\n\n#&gt; Visualisasi pivot data\nbillboard_longer |&gt; \n  ggplot(aes(x = week, y = rank, group = track)) + \n  geom_line(alpha = 0.25) + \n  scale_y_reverse()\n\n\n\n\nDapat dilihat bahwa Plot line menunjukkan hanya sedikit lagu yang bertahan di 100 teratas selama lebih dari 20 minggu."
  },
  {
    "objectID": "modelling.html#modelling",
    "href": "modelling.html#modelling",
    "title": "Topik 6 | Modelling",
    "section": "",
    "text": "Modeling (atau pemodelan dalam Bahasa Indonesia) merujuk pada proses pembuatan representasi abstrak dari suatu sistem fisik, konsep, atau fenomena dengan tujuan untuk memahami, menganalisis, meramalkan, atau mensimulasikan perilaku sistem tersebut. Pemodelan dapat diterapkan dalam berbagai disiplin ilmu dan konteks, termasuk dalam ilmu pengetahuan, teknik, bisnis, seni, dan banyak lainnya\n\n\n\nModeling dalam R merujuk pada penggunaan bahasa pemrograman dan lingkungan pemodelan statistik R untuk membuat dan mengimplementasikan berbagai jenis model atau representasi matematis dari data, sistem, atau fenomena. R adalah bahasa pemrograma n dan lingkungan komputasi statistik yang sangat kuat dan populer, digunakan secara luas dalam analisis statistik, penelitian ilmiah, dan pemodelan statistik."
  },
  {
    "objectID": "modelling.html#manchine-learning",
    "href": "modelling.html#manchine-learning",
    "title": "Topik 6 | Modelling",
    "section": "2. Manchine Learning",
    "text": "2. Manchine Learning\nMachine learning dalam R merujuk pada penggunaan bahasa pemrograman R untuk mengembangkan dan menerapkan model machine learning. R adalah salah satu lingkungan pemrograman dan bahasa statistik yang populer, dan memiliki banyak paket dan pustaka yang kuat untuk mendukung pengembangan model machine learning.\n\n\n\n\n\n\n2.1 Unsupervised vs Supervised\nPada supervised learning objektifnya adalah mempelajari hubungan antara fitur input dan output yang sesuai. →prediksi, klasifikasi\nSedangkan unsupervised learning bertujuan untuk mengeksplorasi dan memahami kemiripan karakteristik pada data. → eksplorasi, memahami data, mencari pola tersembunyi\n\n\n\n\n\n\n\n2.2 Supervised Learning\nPada modul ini difokuskan untuk pembelajaran Supervised learning. Supervised Learning bertujuan untuk membuat model yang dapat mempelajari hubungan antara input (fitur) dan output (label) yang sudah diketahui, sehingga model ini dapat digunakan untuk membuat prediksi atau klasifikasi data baru.\n\n\n\n\n\n\n\n\n\n\n\n2.2.1 Regression\nRegresi (regression) adalah suatu teknik statistik yang digunakan untuk memahami hubungan antara satu atau lebih variabel independen (dikenal sebagai prediktor) dan variabel dependen (dikenal sebagai respons). Tujuan utama dari analisis regresi adalah untuk memodelkan dan memahami sejauh mana perubahan dalam variabel independen memengaruhi variabel dependen.\nRegresi digunakan dalam berbagai bidang seperti ilmu sosial, ekonomi, ilmu alam, kedokteran, dan bisnis untuk menjelaskan atau memprediksi hubungan antara variabel-variabel yang diamati.\n\n\n\nContoh code Regression Linear :\n\nlibrary(stats)\nlibrary(readr)\n\n# Membaca data dari file CSV\ndata &lt;- read.csv(\"data/insurance_training.csv\")\ndata &lt;- data[!is.na(data$id), ]\nrownames(data) &lt;- data$id\ndata\n\n# Menyiapkan variabel prediktor (X) dan target (y)\nX &lt;- data[, !colnames(data) %in% c(\"charges\")]\nX &lt;- data.frame(Intercept = 1, X)  # Menambahkan kolom konstanta (intercept)\ny &lt;- data$charges\n\n# Melakukan regresi linear\nmodel &lt;- lm(y ~ ., data = data.frame(y, X))\n \n# Mendapatkan ringkasan model\nmodel_summary &lt;- summary(model)\n\n# Mencetak ringkasan model\nprint(model_summary)\n\nHasil :\n\n\n\n\n\nPenjelasan :\n\nResidual Standard Error: 6006 on 1293 Degrees of Freedom: Ini adalah ukuran seberapa besar kesalahan rata-rata model regresi dalam memprediksi data. Nilai 6006 mengindikasikan seberapa besar deviasi antara nilai yang diprediksi oleh model dan nilai sebenarnya. Degrees of Freedom (Derajat Kebebasan) adalah ukuran dari seberapa banyak data yang digunakan dalam analisis ini.\nMultiple R-squared: 0.7518: Ini adalah koefisien determinasi (R-squared) yang menunjukkan sejauh mana variabilitas dalam variabel respons dapat dijelaskan oleh model. Nilai 0.7518 berarti sekitar 75.18% dari variasi dalam variabel respons dapat dijelaskan oleh model.\nAdjusted R-squared: 0.7506: Ini adalah versi penyesuaian dari R-squared yang memperhitungkan jumlah prediktor dalam model. Nilai 0.7506 adalah penyesuaian yang lebih konservatif dari R-squared.\nF-statistic: 652.6 on 6 and 1293 DF: F-statistic digunakan untuk menguji signifikansi keseluruhan dari model regresi. Nilai 652.6 adalah statistik uji F, dan angka 6 dan 1293 adalah derajat kebebasan yang digunakan dalam uji ini. Nilai F-statistic yang tinggi menunjukkan bahwa model secara signifikan menjelaskan variabilitas dalam data.\np-value: &lt; 2.2e-16: Ini adalah p-value yang mengindikasikan seberapa signifikan model regresi secara keseluruhan. P-value yang sangat rendah (&lt; 0.05 atau 0.01) menunjukkan bahwa model regresi secara signifikan menjelaskan variabilitas dalam data."
  }
]